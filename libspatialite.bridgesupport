<?xml version='1.0'?>
<signatures version='1.0'>
<struct name='Fts5ExtensionApi' type='{Fts5ExtensionApi=&quot;iVersion&quot;i&quot;xUserData&quot;^?&quot;xColumnCount&quot;^?&quot;xRowCount&quot;^?&quot;xColumnTotalSize&quot;^?&quot;xTokenize&quot;^?&quot;xPhraseCount&quot;^?&quot;xPhraseSize&quot;^?&quot;xInstCount&quot;^?&quot;xInst&quot;^?&quot;xRowid&quot;^?&quot;xColumnText&quot;^?&quot;xColumnSize&quot;^?&quot;xQueryPhrase&quot;^?&quot;xSetAuxdata&quot;^?&quot;xGetAuxdata&quot;^?&quot;xPhraseFirst&quot;^?&quot;xPhraseNext&quot;^?&quot;xPhraseFirstColumn&quot;^?&quot;xPhraseNextColumn&quot;^?}'>
<field declared_type='int' name='iVersion' type='i'/>
<field declared_type='void *(*)(Fts5Context *)' function_pointer='true' name='xUserData' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(Fts5Context *)' function_pointer='true' name='xColumnCount' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, sqlite3_int64 *)' function_pointer='true' name='xRowCount' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, sqlite3_int64 *)' function_pointer='true' name='xColumnTotalSize' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, char *, int, void *, int (*)(void *, int, char *, int, int, int))' function_pointer='true' name='xTokenize' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int (*)(void *, int, char *, int, int, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *)' function_pointer='true' name='xPhraseCount' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, int)' function_pointer='true' name='xPhraseSize' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, int *)' function_pointer='true' name='xInstCount' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, int *, int *, int *)' function_pointer='true' name='xInst' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_int64 (*)(Fts5Context *)' function_pointer='true' name='xRowid' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<retval declared_type='sqlite3_int64' type='q'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, char **, int *)' function_pointer='true' name='xColumnText' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char**' type='^*'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, int *)' function_pointer='true' name='xColumnSize' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, void *, int (*)( Fts5ExtensionApi *, Fts5Context *, void *))' function_pointer='true' name='xQueryPhrase' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int (*)( Fts5ExtensionApi *, Fts5Context *, void *)' function_pointer='true' type='^?'>
<arg const='true' declared_type='Fts5ExtensionApi*' type='^{Fts5ExtensionApi=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(Fts5Context *, void *, void (*)(void *))' function_pointer='true' name='xSetAuxdata' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(Fts5Context *, int)' function_pointer='true' name='xGetAuxdata' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, Fts5PhraseIter *, int *, int *)' function_pointer='true' name='xPhraseFirst' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Fts5PhraseIter*' type='^{Fts5PhraseIter=**}'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(Fts5Context *, Fts5PhraseIter *, int *, int *)' function_pointer='true' name='xPhraseNext' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='Fts5PhraseIter*' type='^{Fts5PhraseIter=**}'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(Fts5Context *, int, Fts5PhraseIter *, int *)' function_pointer='true' name='xPhraseFirstColumn' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Fts5PhraseIter*' type='^{Fts5PhraseIter=**}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(Fts5Context *, Fts5PhraseIter *, int *)' function_pointer='true' name='xPhraseNextColumn' type='^?'>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='Fts5PhraseIter*' type='^{Fts5PhraseIter=**}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='Fts5PhraseIter' type='{Fts5PhraseIter=&quot;a&quot;*&quot;b&quot;*}'>
<field const='true' declared_type='unsigned char*' name='a' type='*'/>
<field const='true' declared_type='unsigned char*' name='b' type='*'/>
</struct>
<struct name='SqlProc_VarList' type='{gaiaSqlProc_VarListStruct=&quot;Error&quot;i&quot;ErrMessage&quot;*&quot;First&quot;^{gaiaSqlProc_VariableStruct}&quot;Last&quot;^{gaiaSqlProc_VariableStruct}}'>
<field declared_type='int' name='Error' type='i'/>
<field declared_type='char*' name='ErrMessage' type='*'/>
<field declared_type='SqlProc_VariablePtr' name='First' type='^{gaiaSqlProc_VariableStruct=**^{gaiaSqlProc_VariableStruct}}'/>
<field declared_type='SqlProc_VariablePtr' name='Last' type='^{gaiaSqlProc_VariableStruct=**^{gaiaSqlProc_VariableStruct}}'/>
</struct>
<struct name='SqlProc_Variable' type='{gaiaSqlProc_VariableStruct=&quot;Name&quot;*&quot;Value&quot;*&quot;Next&quot;^{gaiaSqlProc_VariableStruct}}'>
<field declared_type='char*' name='Name' type='*'/>
<field declared_type='char*' name='Value' type='*'/>
<field declared_type='struct gaiaSqlProc_VariableStruct*' name='Next' type='^{gaiaSqlProc_VariableStruct=**^{gaiaSqlProc_VariableStruct}}'/>
</struct>
<struct name='fts5_api' type='{fts5_api=&quot;iVersion&quot;i&quot;xCreateTokenizer&quot;^?&quot;xFindTokenizer&quot;^?&quot;xCreateFunction&quot;^?}'>
<field declared_type='int' name='iVersion' type='i'/>
<field declared_type='int (*)(fts5_api *, char *, void *, fts5_tokenizer *, void (*)(void *))' function_pointer='true' name='xCreateTokenizer' type='^?'>
<arg declared_type='fts5_api*' type='^{fts5_api=i^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='fts5_tokenizer*' type='^{fts5_tokenizer=^?^?^?}'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(fts5_api *, char *, void **, fts5_tokenizer *)' function_pointer='true' name='xFindTokenizer' type='^?'>
<arg declared_type='fts5_api*' type='^{fts5_api=i^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void**' type='^^v'/>
<arg declared_type='fts5_tokenizer*' type='^{fts5_tokenizer=^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(fts5_api *, char *, void *, fts5_extension_function, void (*)(void *))' function_pointer='true' name='xCreateFunction' type='^?'>
<arg declared_type='fts5_api*' type='^{fts5_api=i^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='fts5_extension_function' function_pointer='true' type='^?'>
<arg const='true' declared_type='Fts5ExtensionApi*' type='^{Fts5ExtensionApi=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='Fts5Context*' type='^{Fts5Context=}'/>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='fts5_tokenizer' type='{fts5_tokenizer=&quot;xCreate&quot;^?&quot;xDelete&quot;^?&quot;xTokenize&quot;^?}'>
<field declared_type='int (*)(void *, char **, int, Fts5Tokenizer **)' function_pointer='true' name='xCreate' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char**' type='^*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='Fts5Tokenizer**' type='^^{Fts5Tokenizer}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(Fts5Tokenizer *)' function_pointer='true' name='xDelete' type='^?'>
<arg declared_type='Fts5Tokenizer*' type='^{Fts5Tokenizer=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(Fts5Tokenizer *, void *, int, char *, int, int (*)(void *, int, char *, int, int, int))' function_pointer='true' name='xTokenize' type='^?'>
<arg declared_type='Fts5Tokenizer*' type='^{Fts5Tokenizer=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int (*)(void *, int, char *, int, int, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='gaiaAttributeFieldDoubleRange' type='{gaiaAttributeFieldDoubleRangeInfos=&quot;MinValue&quot;d&quot;MaxValue&quot;d}'>
<field declared_type='double' name='MinValue' type='d'/>
<field declared_type='double' name='MaxValue' type='d'/>
</struct>
<struct name='gaiaAttributeFieldDoubleRangeInfos' type='{gaiaAttributeFieldDoubleRangeInfos=&quot;MinValue&quot;d&quot;MaxValue&quot;d}'>
<field declared_type='double' name='MinValue' type='d'/>
<field declared_type='double' name='MaxValue' type='d'/>
</struct>
<struct name='gaiaAttributeFieldIntRange' type='{gaiaAttributeFieldIntRangeInfos=}'>
<field declared_type='int' name='MinValue' type='i'/>
<field declared_type='int' name='MaxValue' type='i'/>
</struct>
<struct name='gaiaAttributeFieldIntRangeInfos' type='{gaiaAttributeFieldIntRangeInfos=}'>
<field declared_type='int' name='MinValue' type='i'/>
<field declared_type='int' name='MaxValue' type='i'/>
</struct>
<struct name='gaiaAttributeFieldMaxSize' type='{gaiaAttributeFieldMaxSizeInfos=&quot;MaxSize&quot;i}'>
<field declared_type='int' name='MaxSize' type='i'/>
</struct>
<struct name='gaiaAttributeFieldMaxSizeInfos' type='{gaiaAttributeFieldMaxSizeInfos=&quot;MaxSize&quot;i}'>
<field declared_type='int' name='MaxSize' type='i'/>
</struct>
<struct name='gaiaDbf' type='{gaiaDbfStruct=&quot;endian_arch&quot;i&quot;Valid&quot;i&quot;Path&quot;*&quot;flDbf&quot;^{__sFILE}&quot;Dbf&quot;^{gaiaDbfListStruct}&quot;BufDbf&quot;*&quot;DbfHdsz&quot;i&quot;DbfReclen&quot;i&quot;DbfSize&quot;i&quot;DbfRecno&quot;i&quot;IconvObj&quot;^v&quot;LastError&quot;*}'>
<field declared_type='int' name='endian_arch' type='i'/>
<field declared_type='int' name='Valid' type='i'/>
<field declared_type='char*' name='Path' type='*'/>
<field declared_type='FILE*' name='flDbf' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='gaiaDbfListPtr' name='Dbf' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<field declared_type='unsigned char*' name='BufDbf' type='*'/>
<field declared_type='int' name='DbfHdsz' type='i'/>
<field declared_type='int' name='DbfReclen' type='i'/>
<field declared_type='int' name='DbfSize' type='i'/>
<field declared_type='int' name='DbfRecno' type='i'/>
<field declared_type='void*' name='IconvObj' type='^v'/>
<field declared_type='char*' name='LastError' type='*'/>
</struct>
<struct name='gaiaDbfField' type='{gaiaDbfFieldStruct=&quot;Name&quot;*&quot;Type&quot;C&quot;Offset&quot;i&quot;Length&quot;C&quot;Decimals&quot;C&quot;Value&quot;^{gaiaValueStruct}&quot;Next&quot;^{gaiaDbfFieldStruct}}'>
<field declared_type='char*' name='Name' type='*'/>
<field declared_type='unsigned char' name='Type' type='C'/>
<field declared_type='int' name='Offset' type='i'/>
<field declared_type='unsigned char' name='Length' type='C'/>
<field declared_type='unsigned char' name='Decimals' type='C'/>
<field declared_type='gaiaValuePtr' name='Value' type='^{gaiaValueStruct=}'/>
<field declared_type='struct gaiaDbfFieldStruct*' name='Next' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</struct>
<struct name='gaiaDbfFieldStruct' type='{gaiaDbfFieldStruct=&quot;Name&quot;*&quot;Type&quot;C&quot;Offset&quot;i&quot;Length&quot;C&quot;Decimals&quot;C&quot;Value&quot;^{gaiaValueStruct}&quot;Next&quot;^{gaiaDbfFieldStruct}}'>
<field declared_type='char*' name='Name' type='*'/>
<field declared_type='unsigned char' name='Type' type='C'/>
<field declared_type='int' name='Offset' type='i'/>
<field declared_type='unsigned char' name='Length' type='C'/>
<field declared_type='unsigned char' name='Decimals' type='C'/>
<field declared_type='gaiaValuePtr' name='Value' type='^{gaiaValueStruct=}'/>
<field declared_type='struct gaiaDbfFieldStruct*' name='Next' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</struct>
<struct name='gaiaDbfList' type='{gaiaDbfListStruct=&quot;RowId&quot;i&quot;Geometry&quot;^{gaiaGeomCollStruct}&quot;First&quot;^{gaiaDbfFieldStruct}&quot;Last&quot;^{gaiaDbfFieldStruct}}'>
<field declared_type='int' name='RowId' type='i'/>
<field declared_type='gaiaGeomCollPtr' name='Geometry' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<field declared_type='gaiaDbfFieldPtr' name='First' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<field declared_type='gaiaDbfFieldPtr' name='Last' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</struct>
<struct name='gaiaDbfListStruct' type='{gaiaDbfListStruct=&quot;RowId&quot;i&quot;Geometry&quot;^{gaiaGeomCollStruct}&quot;First&quot;^{gaiaDbfFieldStruct}&quot;Last&quot;^{gaiaDbfFieldStruct}}'>
<field declared_type='int' name='RowId' type='i'/>
<field declared_type='gaiaGeomCollPtr' name='Geometry' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<field declared_type='gaiaDbfFieldPtr' name='First' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<field declared_type='gaiaDbfFieldPtr' name='Last' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</struct>
<struct name='gaiaDbfStruct' type='{gaiaDbfStruct=&quot;endian_arch&quot;i&quot;Valid&quot;i&quot;Path&quot;*&quot;flDbf&quot;^{__sFILE}&quot;Dbf&quot;^{gaiaDbfListStruct}&quot;BufDbf&quot;*&quot;DbfHdsz&quot;i&quot;DbfReclen&quot;i&quot;DbfSize&quot;i&quot;DbfRecno&quot;i&quot;IconvObj&quot;^v&quot;LastError&quot;*}'>
<field declared_type='int' name='endian_arch' type='i'/>
<field declared_type='int' name='Valid' type='i'/>
<field declared_type='char*' name='Path' type='*'/>
<field declared_type='FILE*' name='flDbf' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='gaiaDbfListPtr' name='Dbf' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<field declared_type='unsigned char*' name='BufDbf' type='*'/>
<field declared_type='int' name='DbfHdsz' type='i'/>
<field declared_type='int' name='DbfReclen' type='i'/>
<field declared_type='int' name='DbfSize' type='i'/>
<field declared_type='int' name='DbfRecno' type='i'/>
<field declared_type='void*' name='IconvObj' type='^v'/>
<field declared_type='char*' name='LastError' type='*'/>
</struct>
<struct name='gaiaDxfArc' type='{gaia_dxf_arc=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d&quot;start&quot;d&quot;stop&quot;d}'>
<field declared_type='double' name='cx' type='d'/>
<field declared_type='double' name='cy' type='d'/>
<field declared_type='double' name='cz' type='d'/>
<field declared_type='double' name='radius' type='d'/>
<field declared_type='double' name='start' type='d'/>
<field declared_type='double' name='stop' type='d'/>
</struct>
<struct name='gaiaDxfBlock' type='{gaia_dxf_block=&quot;hasInsert&quot;i&quot;layer_name&quot;*&quot;block_id&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;next&quot;^{gaia_dxf_block}}'>
<field declared_type='int' name='hasInsert' type='i'/>
<field declared_type='char*' name='layer_name' type='*'/>
<field declared_type='char*' name='block_id' type='*'/>
<field declared_type='gaiaDxfTextPtr' name='first_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfTextPtr' name='last_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfPointPtr' name='first_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPointPtr' name='last_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfHatchPtr' name='first_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='gaiaDxfHatchPtr' name='last_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='int' name='is3Dtext' type='i'/>
<field declared_type='int' name='is3Dpoint' type='i'/>
<field declared_type='int' name='is3Dline' type='i'/>
<field declared_type='int' name='is3Dpolyg' type='i'/>
<field declared_type='struct gaia_dxf_block*' name='next' type='^{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}'/>
</struct>
<struct name='gaiaDxfBoundaryPath' type='{gaia_dxf_boundary_path=&quot;first&quot;^{gaia_dxf_hatch_segm}&quot;last&quot;^{gaia_dxf_hatch_segm}&quot;next&quot;^{gaia_dxf_boundary_path}}'>
<field declared_type='gaiaDxfHatchSegmPtr' name='first' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='gaiaDxfHatchSegmPtr' name='last' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='struct gaia_dxf_boundary_path*' name='next' type='^{gaia_dxf_boundary_path=^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_boundary_path}}'/>
</struct>
<struct name='gaiaDxfCircle' type='{gaia_dxf_circle=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d}'>
<field declared_type='double' name='cx' type='d'/>
<field declared_type='double' name='cy' type='d'/>
<field declared_type='double' name='cz' type='d'/>
<field declared_type='double' name='radius' type='d'/>
</struct>
<struct name='gaiaDxfExtraAttr' type='{gaia_dxf_extra_attr=&quot;key&quot;*&quot;value&quot;*&quot;next&quot;^{gaia_dxf_extra_attr}}'>
<field declared_type='char*' name='key' type='*'/>
<field declared_type='char*' name='value' type='*'/>
<field declared_type='struct gaia_dxf_extra_attr*' name='next' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
</struct>
<struct name='gaiaDxfHatch' type='{gaia_dxf_hatch=&quot;spacing&quot;d&quot;angle&quot;d&quot;base_x&quot;d&quot;base_y&quot;d&quot;offset_x&quot;d&quot;offset_y&quot;d&quot;first&quot;^{gaia_dxf_boundary_path}&quot;last&quot;^{gaia_dxf_boundary_path}&quot;boundary&quot;^{gaiaGeomCollStruct}&quot;first_out&quot;^{gaia_dxf_hatch_segm}&quot;last_out&quot;^{gaia_dxf_hatch_segm}&quot;next&quot;^{gaia_dxf_hatch}}'>
<field declared_type='double' name='spacing' type='d'/>
<field declared_type='double' name='angle' type='d'/>
<field declared_type='double' name='base_x' type='d'/>
<field declared_type='double' name='base_y' type='d'/>
<field declared_type='double' name='offset_x' type='d'/>
<field declared_type='double' name='offset_y' type='d'/>
<field declared_type='gaiaDxfBoundaryPathPtr' name='first' type='^{gaia_dxf_boundary_path=^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_boundary_path}}'/>
<field declared_type='gaiaDxfBoundaryPathPtr' name='last' type='^{gaia_dxf_boundary_path=^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_boundary_path}}'/>
<field declared_type='gaiaGeomCollPtr' name='boundary' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<field declared_type='gaiaDxfHatchSegmPtr' name='first_out' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='gaiaDxfHatchSegmPtr' name='last_out' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='struct gaia_dxf_hatch*' name='next' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
</struct>
<struct name='gaiaDxfHatchSegm' type='{gaia_dxf_hatch_segm=&quot;x0&quot;d&quot;y0&quot;d&quot;x1&quot;d&quot;y1&quot;d&quot;next&quot;^{gaia_dxf_hatch_segm}}'>
<field declared_type='double' name='x0' type='d'/>
<field declared_type='double' name='y0' type='d'/>
<field declared_type='double' name='x1' type='d'/>
<field declared_type='double' name='y1' type='d'/>
<field declared_type='struct gaia_dxf_hatch_segm*' name='next' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
</struct>
<struct name='gaiaDxfHole' type='{gaia_dxf_hole=&quot;points&quot;i&quot;x&quot;^d&quot;y&quot;^d&quot;z&quot;^d&quot;next&quot;^{gaia_dxf_hole}}'>
<field declared_type='int' name='points' type='i'/>
<field declared_type='double*' name='x' type='^d'/>
<field declared_type='double*' name='y' type='^d'/>
<field declared_type='double*' name='z' type='^d'/>
<field declared_type='struct gaia_dxf_hole*' name='next' type='^{gaia_dxf_hole=i^d^d^d^{gaia_dxf_hole}}'/>
</struct>
<struct name='gaiaDxfInsert' type='{gaia_dxf_insert=&quot;block_id&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;scale_x&quot;d&quot;scale_y&quot;d&quot;scale_z&quot;d&quot;angle&quot;d&quot;hasText&quot;i&quot;hasPoint&quot;i&quot;hasLine&quot;i&quot;hasPolyg&quot;i&quot;hasHatch&quot;i&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_insert}}'>
<field declared_type='char*' name='block_id' type='*'/>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
<field declared_type='double' name='z' type='d'/>
<field declared_type='double' name='scale_x' type='d'/>
<field declared_type='double' name='scale_y' type='d'/>
<field declared_type='double' name='scale_z' type='d'/>
<field declared_type='double' name='angle' type='d'/>
<field declared_type='int' name='hasText' type='i'/>
<field declared_type='int' name='hasPoint' type='i'/>
<field declared_type='int' name='hasLine' type='i'/>
<field declared_type='int' name='hasPolyg' type='i'/>
<field declared_type='int' name='hasHatch' type='i'/>
<field declared_type='int' name='is3Dtext' type='i'/>
<field declared_type='int' name='is3Dpoint' type='i'/>
<field declared_type='int' name='is3Dline' type='i'/>
<field declared_type='int' name='is3Dpolyg' type='i'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_insert*' name='next' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
</struct>
<struct name='gaiaDxfLayer' type='{gaia_dxf_layer=&quot;layer_name&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;first_ins_text&quot;^{gaia_dxf_insert}&quot;last_ins_text&quot;^{gaia_dxf_insert}&quot;first_ins_point&quot;^{gaia_dxf_insert}&quot;last_ins_point&quot;^{gaia_dxf_insert}&quot;first_ins_line&quot;^{gaia_dxf_insert}&quot;last_ins_line&quot;^{gaia_dxf_insert}&quot;first_ins_polyg&quot;^{gaia_dxf_insert}&quot;last_ins_polyg&quot;^{gaia_dxf_insert}&quot;first_ins_hatch&quot;^{gaia_dxf_insert}&quot;last_ins_hatch&quot;^{gaia_dxf_insert}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;is3DinsText&quot;i&quot;is3DinsPoint&quot;i&quot;is3DinsLine&quot;i&quot;is3DinsPolyg&quot;i&quot;hasExtraText&quot;i&quot;hasExtraPoint&quot;i&quot;hasExtraLine&quot;i&quot;hasExtraPolyg&quot;i&quot;hasExtraInsText&quot;i&quot;hasExtraInsPoint&quot;i&quot;hasExtraInsLine&quot;i&quot;hasExtraInsPolyg&quot;i&quot;next&quot;^{gaia_dxf_layer}}'>
<field declared_type='char*' name='layer_name' type='*'/>
<field declared_type='gaiaDxfTextPtr' name='first_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfTextPtr' name='last_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfPointPtr' name='first_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPointPtr' name='last_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfHatchPtr' name='first_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='gaiaDxfHatchPtr' name='last_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_text' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_text' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_point' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_point' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_line' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_line' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_polyg' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_polyg' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_hatch' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_hatch' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='int' name='is3Dtext' type='i'/>
<field declared_type='int' name='is3Dpoint' type='i'/>
<field declared_type='int' name='is3Dline' type='i'/>
<field declared_type='int' name='is3Dpolyg' type='i'/>
<field declared_type='int' name='is3DinsText' type='i'/>
<field declared_type='int' name='is3DinsPoint' type='i'/>
<field declared_type='int' name='is3DinsLine' type='i'/>
<field declared_type='int' name='is3DinsPolyg' type='i'/>
<field declared_type='int' name='hasExtraText' type='i'/>
<field declared_type='int' name='hasExtraPoint' type='i'/>
<field declared_type='int' name='hasExtraLine' type='i'/>
<field declared_type='int' name='hasExtraPolyg' type='i'/>
<field declared_type='int' name='hasExtraInsText' type='i'/>
<field declared_type='int' name='hasExtraInsPoint' type='i'/>
<field declared_type='int' name='hasExtraInsLine' type='i'/>
<field declared_type='int' name='hasExtraInsPolyg' type='i'/>
<field declared_type='struct gaia_dxf_layer*' name='next' type='^{gaia_dxf_layer=*^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}iiiiiiiiiiiiiiii^{gaia_dxf_layer}}'/>
</struct>
<struct name='gaiaDxfParser' type='{gaia_dxf_parser=&quot;filename&quot;*&quot;first_layer&quot;^{gaia_dxf_layer}&quot;last_layer&quot;^{gaia_dxf_layer}&quot;first_block&quot;^{gaia_dxf_block}&quot;last_block&quot;^{gaia_dxf_block}&quot;force_dims&quot;i&quot;srid&quot;i&quot;selected_layer&quot;*&quot;prefix&quot;*&quot;linked_rings&quot;i&quot;unlinked_rings&quot;i&quot;line_no&quot;i&quot;op_code_line&quot;i&quot;op_code&quot;i&quot;section&quot;i&quot;tables&quot;i&quot;blocks&quot;i&quot;entities&quot;i&quot;is_layer&quot;i&quot;is_block&quot;i&quot;is_text&quot;i&quot;is_point&quot;i&quot;is_polyline&quot;i&quot;is_lwpolyline&quot;i&quot;is_line&quot;i&quot;is_circle&quot;i&quot;is_arc&quot;i&quot;is_vertex&quot;i&quot;is_hatch&quot;i&quot;is_hatch_boundary&quot;i&quot;is_insert&quot;i&quot;eof&quot;i&quot;error&quot;i&quot;curr_layer_name&quot;*&quot;curr_text&quot;{gaia_dxf_text=&quot;label&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;angle&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_text}}&quot;curr_insert&quot;{gaia_dxf_insert=&quot;block_id&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;scale_x&quot;d&quot;scale_y&quot;d&quot;scale_z&quot;d&quot;angle&quot;d&quot;hasText&quot;i&quot;hasPoint&quot;i&quot;hasLine&quot;i&quot;hasPolyg&quot;i&quot;hasHatch&quot;i&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_insert}}&quot;curr_block&quot;{gaia_dxf_block=&quot;hasInsert&quot;i&quot;layer_name&quot;*&quot;block_id&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;next&quot;^{gaia_dxf_block}}&quot;curr_point&quot;{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}&quot;curr_end_point&quot;{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}&quot;curr_circle&quot;{gaia_dxf_circle=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d}&quot;curr_arc&quot;{gaia_dxf_arc=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d&quot;start&quot;d&quot;stop&quot;d}&quot;is_closed_polyline&quot;i&quot;first_pt&quot;^{gaia_dxf_point}&quot;last_pt&quot;^{gaia_dxf_point}&quot;extra_key&quot;*&quot;extra_value&quot;*&quot;first_ext&quot;^{gaia_dxf_extra_attr}&quot;last_ext&quot;^{gaia_dxf_extra_attr}&quot;curr_hatch&quot;^{gaia_dxf_hatch}&quot;undeclared_layers&quot;i}'>
<field declared_type='char*' name='filename' type='*'/>
<field declared_type='gaiaDxfLayerPtr' name='first_layer' type='^{gaia_dxf_layer=*^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}iiiiiiiiiiiiiiii^{gaia_dxf_layer}}'/>
<field declared_type='gaiaDxfLayerPtr' name='last_layer' type='^{gaia_dxf_layer=*^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}iiiiiiiiiiiiiiii^{gaia_dxf_layer}}'/>
<field declared_type='gaiaDxfBlockPtr' name='first_block' type='^{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}'/>
<field declared_type='gaiaDxfBlockPtr' name='last_block' type='^{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}'/>
<field declared_type='int' name='force_dims' type='i'/>
<field declared_type='int' name='srid' type='i'/>
<field const='true' declared_type='char*' name='selected_layer' type='*'/>
<field const='true' declared_type='char*' name='prefix' type='*'/>
<field declared_type='int' name='linked_rings' type='i'/>
<field declared_type='int' name='unlinked_rings' type='i'/>
<field declared_type='int' name='line_no' type='i'/>
<field declared_type='int' name='op_code_line' type='i'/>
<field declared_type='int' name='op_code' type='i'/>
<field declared_type='int' name='section' type='i'/>
<field declared_type='int' name='tables' type='i'/>
<field declared_type='int' name='blocks' type='i'/>
<field declared_type='int' name='entities' type='i'/>
<field declared_type='int' name='is_layer' type='i'/>
<field declared_type='int' name='is_block' type='i'/>
<field declared_type='int' name='is_text' type='i'/>
<field declared_type='int' name='is_point' type='i'/>
<field declared_type='int' name='is_polyline' type='i'/>
<field declared_type='int' name='is_lwpolyline' type='i'/>
<field declared_type='int' name='is_line' type='i'/>
<field declared_type='int' name='is_circle' type='i'/>
<field declared_type='int' name='is_arc' type='i'/>
<field declared_type='int' name='is_vertex' type='i'/>
<field declared_type='int' name='is_hatch' type='i'/>
<field declared_type='int' name='is_hatch_boundary' type='i'/>
<field declared_type='int' name='is_insert' type='i'/>
<field declared_type='int' name='eof' type='i'/>
<field declared_type='int' name='error' type='i'/>
<field declared_type='char*' name='curr_layer_name' type='*'/>
<field declared_type='gaiaDxfText' name='curr_text' type='{gaia_dxf_text=&quot;label&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;angle&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfInsert' name='curr_insert' type='{gaia_dxf_insert=&quot;block_id&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;scale_x&quot;d&quot;scale_y&quot;d&quot;scale_z&quot;d&quot;angle&quot;d&quot;hasText&quot;i&quot;hasPoint&quot;i&quot;hasLine&quot;i&quot;hasPolyg&quot;i&quot;hasHatch&quot;i&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfBlock' name='curr_block' type='{gaia_dxf_block=&quot;hasInsert&quot;i&quot;layer_name&quot;*&quot;block_id&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;next&quot;^{gaia_dxf_block}}'/>
<field declared_type='gaiaDxfPoint' name='curr_point' type='{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPoint' name='curr_end_point' type='{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfCircle' name='curr_circle' type='{gaia_dxf_circle=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d}'/>
<field declared_type='gaiaDxfArc' name='curr_arc' type='{gaia_dxf_arc=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d&quot;start&quot;d&quot;stop&quot;d}'/>
<field declared_type='int' name='is_closed_polyline' type='i'/>
<field declared_type='gaiaDxfPointPtr' name='first_pt' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPointPtr' name='last_pt' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='char*' name='extra_key' type='*'/>
<field declared_type='char*' name='extra_value' type='*'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first_ext' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last_ext' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfHatchPtr' name='curr_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='int' name='undeclared_layers' type='i'/>
</struct>
<struct name='gaiaDxfPoint' type='{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}'>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
<field declared_type='double' name='z' type='d'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_point*' name='next' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
</struct>
<struct name='gaiaDxfPolyline' type='{gaia_dxf_polyline=&quot;is_closed&quot;i&quot;points&quot;i&quot;x&quot;^d&quot;y&quot;^d&quot;z&quot;^d&quot;first_hole&quot;^{gaia_dxf_hole}&quot;last_hole&quot;^{gaia_dxf_hole}&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_polyline}}'>
<field declared_type='int' name='is_closed' type='i'/>
<field declared_type='int' name='points' type='i'/>
<field declared_type='double*' name='x' type='^d'/>
<field declared_type='double*' name='y' type='^d'/>
<field declared_type='double*' name='z' type='^d'/>
<field declared_type='gaiaDxfHolePtr' name='first_hole' type='^{gaia_dxf_hole=i^d^d^d^{gaia_dxf_hole}}'/>
<field declared_type='gaiaDxfHolePtr' name='last_hole' type='^{gaia_dxf_hole=i^d^d^d^{gaia_dxf_hole}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_polyline*' name='next' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
</struct>
<struct name='gaiaDxfText' type='{gaia_dxf_text=&quot;label&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;angle&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_text}}'>
<field declared_type='char*' name='label' type='*'/>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
<field declared_type='double' name='z' type='d'/>
<field declared_type='double' name='angle' type='d'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_text*' name='next' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
</struct>
<struct name='gaiaDxfWriter' type='{gaia_dxf_write=&quot;out&quot;^{__sFILE}&quot;precision&quot;i&quot;version&quot;i&quot;count&quot;i&quot;error&quot;i}'>
<field declared_type='FILE*' name='out' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='int' name='precision' type='i'/>
<field declared_type='int' name='version' type='i'/>
<field declared_type='int' name='count' type='i'/>
<field declared_type='int' name='error' type='i'/>
</struct>
<struct name='gaiaDynamicLine' type='{gaiaDynamicLineStruct=&quot;Error&quot;i&quot;Srid&quot;i&quot;First&quot;^{gaiaPointStruct}&quot;Last&quot;^{gaiaPointStruct}}'>
<field declared_type='int' name='Error' type='i'/>
<field declared_type='int' name='Srid' type='i'/>
<field declared_type='gaiaPointPtr' name='First' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='gaiaPointPtr' name='Last' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</struct>
<struct name='gaiaDynamicLineStruct' type='{gaiaDynamicLineStruct=&quot;Error&quot;i&quot;Srid&quot;i&quot;First&quot;^{gaiaPointStruct}&quot;Last&quot;^{gaiaPointStruct}}'>
<field declared_type='int' name='Error' type='i'/>
<field declared_type='int' name='Srid' type='i'/>
<field declared_type='gaiaPointPtr' name='First' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='gaiaPointPtr' name='Last' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</struct>
<struct name='gaiaExifTag' type='{gaiaExifTagStruct=&quot;Gps&quot;c&quot;TagId&quot;S&quot;Type&quot;S&quot;Count&quot;S&quot;TagOffset&quot;[4C]&quot;ByteValue&quot;*&quot;StringValue&quot;*&quot;ShortValues&quot;^S&quot;LongValues&quot;^I&quot;LongRationals1&quot;^I&quot;LongRationals2&quot;^I&quot;SignedShortValues&quot;^s&quot;SignedLongValues&quot;^i&quot;SignedLongRationals1&quot;^i&quot;SignedLongRationals2&quot;^i&quot;FloatValues&quot;^f&quot;DoubleValues&quot;^d&quot;Next&quot;^{gaiaExifTagStruct}}'>
<field declared_type='char' name='Gps' type='c'/>
<field declared_type='unsigned short' name='TagId' type='S'/>
<field declared_type='unsigned short' name='Type' type='S'/>
<field declared_type='unsigned short' name='Count' type='S'/>
<field declared_type='unsigned char*' name='TagOffset' type='[4C]'/>
<field declared_type='unsigned char*' name='ByteValue' type='*'/>
<field declared_type='char*' name='StringValue' type='*'/>
<field declared_type='unsigned short*' name='ShortValues' type='^S'/>
<field declared_type='unsigned int*' name='LongValues' type='^I'/>
<field declared_type='unsigned int*' name='LongRationals1' type='^I'/>
<field declared_type='unsigned int*' name='LongRationals2' type='^I'/>
<field declared_type='short*' name='SignedShortValues' type='^s'/>
<field declared_type='int*' name='SignedLongValues' type='^i'/>
<field declared_type='int*' name='SignedLongRationals1' type='^i'/>
<field declared_type='int*' name='SignedLongRationals2' type='^i'/>
<field declared_type='float*' name='FloatValues' type='^f'/>
<field declared_type='double*' name='DoubleValues' type='^d'/>
<field declared_type='struct gaiaExifTagStruct*' name='Next' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
</struct>
<struct name='gaiaExifTagList' type='{gaiaExifTagListStruct=&quot;First&quot;^{gaiaExifTagStruct}&quot;Last&quot;^{gaiaExifTagStruct}&quot;NumTags&quot;i&quot;TagsArray&quot;^^{gaiaExifTagStruct}}'>
<field declared_type='gaiaExifTagPtr' name='First' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<field declared_type='gaiaExifTagPtr' name='Last' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<field declared_type='int' name='NumTags' type='i'/>
<field declared_type='gaiaExifTagPtr*' name='TagsArray' type='^^{gaiaExifTagStruct}'/>
</struct>
<struct name='gaiaExifTagListStruct' type='{gaiaExifTagListStruct=&quot;First&quot;^{gaiaExifTagStruct}&quot;Last&quot;^{gaiaExifTagStruct}&quot;NumTags&quot;i&quot;TagsArray&quot;^^{gaiaExifTagStruct}}'>
<field declared_type='gaiaExifTagPtr' name='First' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<field declared_type='gaiaExifTagPtr' name='Last' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<field declared_type='int' name='NumTags' type='i'/>
<field declared_type='gaiaExifTagPtr*' name='TagsArray' type='^^{gaiaExifTagStruct}'/>
</struct>
<struct name='gaiaExifTagStruct' type='{gaiaExifTagStruct=&quot;Gps&quot;c&quot;TagId&quot;S&quot;Type&quot;S&quot;Count&quot;S&quot;TagOffset&quot;[4C]&quot;ByteValue&quot;*&quot;StringValue&quot;*&quot;ShortValues&quot;^S&quot;LongValues&quot;^I&quot;LongRationals1&quot;^I&quot;LongRationals2&quot;^I&quot;SignedShortValues&quot;^s&quot;SignedLongValues&quot;^i&quot;SignedLongRationals1&quot;^i&quot;SignedLongRationals2&quot;^i&quot;FloatValues&quot;^f&quot;DoubleValues&quot;^d&quot;Next&quot;^{gaiaExifTagStruct}}'>
<field declared_type='char' name='Gps' type='c'/>
<field declared_type='unsigned short' name='TagId' type='S'/>
<field declared_type='unsigned short' name='Type' type='S'/>
<field declared_type='unsigned short' name='Count' type='S'/>
<field declared_type='unsigned char*' name='TagOffset' type='[4C]'/>
<field declared_type='unsigned char*' name='ByteValue' type='*'/>
<field declared_type='char*' name='StringValue' type='*'/>
<field declared_type='unsigned short*' name='ShortValues' type='^S'/>
<field declared_type='unsigned int*' name='LongValues' type='^I'/>
<field declared_type='unsigned int*' name='LongRationals1' type='^I'/>
<field declared_type='unsigned int*' name='LongRationals2' type='^I'/>
<field declared_type='short*' name='SignedShortValues' type='^s'/>
<field declared_type='int*' name='SignedLongValues' type='^i'/>
<field declared_type='int*' name='SignedLongRationals1' type='^i'/>
<field declared_type='int*' name='SignedLongRationals2' type='^i'/>
<field declared_type='float*' name='FloatValues' type='^f'/>
<field declared_type='double*' name='DoubleValues' type='^d'/>
<field declared_type='struct gaiaExifTagStruct*' name='Next' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
</struct>
<struct name='gaiaGeomColl' type='{gaiaGeomCollStruct=&quot;Srid&quot;i&quot;endian_arch&quot;c&quot;endian&quot;c&quot;blob&quot;*&quot;size&quot;L&quot;offset&quot;L&quot;FirstPoint&quot;^{gaiaPointStruct}&quot;LastPoint&quot;^{gaiaPointStruct}&quot;FirstLinestring&quot;^{gaiaLinestringStruct}&quot;LastLinestring&quot;^{gaiaLinestringStruct}&quot;FirstPolygon&quot;^{gaiaPolygonStruct}&quot;LastPolygon&quot;^{gaiaPolygonStruct}&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;DeclaredType&quot;i&quot;Next&quot;^{gaiaGeomCollStruct}}' type64='{gaiaGeomCollStruct=&quot;Srid&quot;i&quot;endian_arch&quot;c&quot;endian&quot;c&quot;blob&quot;*&quot;size&quot;Q&quot;offset&quot;Q&quot;FirstPoint&quot;^{gaiaPointStruct}&quot;LastPoint&quot;^{gaiaPointStruct}&quot;FirstLinestring&quot;^{gaiaLinestringStruct}&quot;LastLinestring&quot;^{gaiaLinestringStruct}&quot;FirstPolygon&quot;^{gaiaPolygonStruct}&quot;LastPolygon&quot;^{gaiaPolygonStruct}&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;DeclaredType&quot;i&quot;Next&quot;^{gaiaGeomCollStruct}}'>
<field declared_type='int' name='Srid' type='i'/>
<field declared_type='char' name='endian_arch' type='c'/>
<field declared_type='char' name='endian' type='c'/>
<field const='true' declared_type='unsigned char*' name='blob' type='*'/>
<field declared_type='unsigned long' name='size' type='L' type64='Q'/>
<field declared_type='unsigned long' name='offset' type='L' type64='Q'/>
<field declared_type='gaiaPointPtr' name='FirstPoint' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='gaiaPointPtr' name='LastPoint' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='gaiaLinestringPtr' name='FirstLinestring' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<field declared_type='gaiaLinestringPtr' name='LastLinestring' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<field declared_type='gaiaPolygonPtr' name='FirstPolygon' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<field declared_type='gaiaPolygonPtr' name='LastPolygon' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='int' name='DeclaredType' type='i'/>
<field declared_type='struct gaiaGeomCollStruct*' name='Next' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</struct>
<struct name='gaiaGeomCollStruct' type='{gaiaGeomCollStruct=&quot;Srid&quot;i&quot;endian_arch&quot;c&quot;endian&quot;c&quot;blob&quot;*&quot;size&quot;L&quot;offset&quot;L&quot;FirstPoint&quot;^{gaiaPointStruct}&quot;LastPoint&quot;^{gaiaPointStruct}&quot;FirstLinestring&quot;^{gaiaLinestringStruct}&quot;LastLinestring&quot;^{gaiaLinestringStruct}&quot;FirstPolygon&quot;^{gaiaPolygonStruct}&quot;LastPolygon&quot;^{gaiaPolygonStruct}&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;DeclaredType&quot;i&quot;Next&quot;^{gaiaGeomCollStruct}}' type64='{gaiaGeomCollStruct=&quot;Srid&quot;i&quot;endian_arch&quot;c&quot;endian&quot;c&quot;blob&quot;*&quot;size&quot;Q&quot;offset&quot;Q&quot;FirstPoint&quot;^{gaiaPointStruct}&quot;LastPoint&quot;^{gaiaPointStruct}&quot;FirstLinestring&quot;^{gaiaLinestringStruct}&quot;LastLinestring&quot;^{gaiaLinestringStruct}&quot;FirstPolygon&quot;^{gaiaPolygonStruct}&quot;LastPolygon&quot;^{gaiaPolygonStruct}&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;DeclaredType&quot;i&quot;Next&quot;^{gaiaGeomCollStruct}}'>
<field declared_type='int' name='Srid' type='i'/>
<field declared_type='char' name='endian_arch' type='c'/>
<field declared_type='char' name='endian' type='c'/>
<field const='true' declared_type='unsigned char*' name='blob' type='*'/>
<field declared_type='unsigned long' name='size' type='L' type64='Q'/>
<field declared_type='unsigned long' name='offset' type='L' type64='Q'/>
<field declared_type='gaiaPointPtr' name='FirstPoint' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='gaiaPointPtr' name='LastPoint' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='gaiaLinestringPtr' name='FirstLinestring' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<field declared_type='gaiaLinestringPtr' name='LastLinestring' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<field declared_type='gaiaPolygonPtr' name='FirstPolygon' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<field declared_type='gaiaPolygonPtr' name='LastPolygon' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='int' name='DeclaredType' type='i'/>
<field declared_type='struct gaiaGeomCollStruct*' name='Next' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</struct>
<struct name='gaiaLayerAttributeField' type='{gaiaLayerAttributeFieldInfos=&quot;Ordinal&quot;i&quot;AttributeFieldName&quot;*&quot;NullValuesCount&quot;i&quot;IntegerValuesCount&quot;i&quot;DoubleValuesCount&quot;i&quot;TextValuesCount&quot;i&quot;BlobValuesCount&quot;i&quot;MaxSize&quot;^{gaiaAttributeFieldMaxSizeInfos}&quot;IntRange&quot;^{gaiaAttributeFieldIntRangeInfos}&quot;DoubleRange&quot;^{gaiaAttributeFieldDoubleRangeInfos}&quot;Next&quot;^{gaiaLayerAttributeFieldInfos}}'>
<field declared_type='int' name='Ordinal' type='i'/>
<field declared_type='char*' name='AttributeFieldName' type='*'/>
<field declared_type='int' name='NullValuesCount' type='i'/>
<field declared_type='int' name='IntegerValuesCount' type='i'/>
<field declared_type='int' name='DoubleValuesCount' type='i'/>
<field declared_type='int' name='TextValuesCount' type='i'/>
<field declared_type='int' name='BlobValuesCount' type='i'/>
<field declared_type='gaiaAttributeFieldMaxSizePtr' name='MaxSize' type='^{gaiaAttributeFieldMaxSizeInfos=i}'/>
<field declared_type='gaiaAttributeFieldIntRangePtr' name='IntRange' type='^{gaiaAttributeFieldIntRangeInfos=}'/>
<field declared_type='gaiaAttributeFieldDoubleRangePtr' name='DoubleRange' type='^{gaiaAttributeFieldDoubleRangeInfos=dd}'/>
<field declared_type='struct gaiaLayerAttributeFieldInfos*' name='Next' type='^{gaiaLayerAttributeFieldInfos=i*iiiii^{gaiaAttributeFieldMaxSizeInfos}^{gaiaAttributeFieldIntRangeInfos}^{gaiaAttributeFieldDoubleRangeInfos}^{gaiaLayerAttributeFieldInfos}}'/>
</struct>
<struct name='gaiaLayerAttributeFieldInfos' type='{gaiaLayerAttributeFieldInfos=&quot;Ordinal&quot;i&quot;AttributeFieldName&quot;*&quot;NullValuesCount&quot;i&quot;IntegerValuesCount&quot;i&quot;DoubleValuesCount&quot;i&quot;TextValuesCount&quot;i&quot;BlobValuesCount&quot;i&quot;MaxSize&quot;^{gaiaAttributeFieldMaxSizeInfos}&quot;IntRange&quot;^{gaiaAttributeFieldIntRangeInfos}&quot;DoubleRange&quot;^{gaiaAttributeFieldDoubleRangeInfos}&quot;Next&quot;^{gaiaLayerAttributeFieldInfos}}'>
<field declared_type='int' name='Ordinal' type='i'/>
<field declared_type='char*' name='AttributeFieldName' type='*'/>
<field declared_type='int' name='NullValuesCount' type='i'/>
<field declared_type='int' name='IntegerValuesCount' type='i'/>
<field declared_type='int' name='DoubleValuesCount' type='i'/>
<field declared_type='int' name='TextValuesCount' type='i'/>
<field declared_type='int' name='BlobValuesCount' type='i'/>
<field declared_type='gaiaAttributeFieldMaxSizePtr' name='MaxSize' type='^{gaiaAttributeFieldMaxSizeInfos=i}'/>
<field declared_type='gaiaAttributeFieldIntRangePtr' name='IntRange' type='^{gaiaAttributeFieldIntRangeInfos=}'/>
<field declared_type='gaiaAttributeFieldDoubleRangePtr' name='DoubleRange' type='^{gaiaAttributeFieldDoubleRangeInfos=dd}'/>
<field declared_type='struct gaiaLayerAttributeFieldInfos*' name='Next' type='^{gaiaLayerAttributeFieldInfos=i*iiiii^{gaiaAttributeFieldMaxSizeInfos}^{gaiaAttributeFieldIntRangeInfos}^{gaiaAttributeFieldDoubleRangeInfos}^{gaiaLayerAttributeFieldInfos}}'/>
</struct>
<struct name='gaiaLayerAuth' type='{gaiaLayerAuthInfos=&quot;IsReadOnly&quot;i&quot;IsHidden&quot;i&quot;HasTriggerInsert&quot;i&quot;HasTriggerUpdate&quot;i&quot;HasTriggerDelete&quot;i}'>
<field declared_type='int' name='IsReadOnly' type='i'/>
<field declared_type='int' name='IsHidden' type='i'/>
<field declared_type='int' name='HasTriggerInsert' type='i'/>
<field declared_type='int' name='HasTriggerUpdate' type='i'/>
<field declared_type='int' name='HasTriggerDelete' type='i'/>
</struct>
<struct name='gaiaLayerAuthInfos' type='{gaiaLayerAuthInfos=&quot;IsReadOnly&quot;i&quot;IsHidden&quot;i&quot;HasTriggerInsert&quot;i&quot;HasTriggerUpdate&quot;i&quot;HasTriggerDelete&quot;i}'>
<field declared_type='int' name='IsReadOnly' type='i'/>
<field declared_type='int' name='IsHidden' type='i'/>
<field declared_type='int' name='HasTriggerInsert' type='i'/>
<field declared_type='int' name='HasTriggerUpdate' type='i'/>
<field declared_type='int' name='HasTriggerDelete' type='i'/>
</struct>
<struct name='gaiaLayerExtent' type='{gaiaLayerExtentInfos=&quot;Count&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d}'>
<field declared_type='int' name='Count' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
</struct>
<struct name='gaiaLayerExtentInfos' type='{gaiaLayerExtentInfos=&quot;Count&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d}'>
<field declared_type='int' name='Count' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
</struct>
<struct name='gaiaLinestring' type='{gaiaLinestringStruct=&quot;Points&quot;i&quot;Coords&quot;^d&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaLinestringStruct}}'>
<field declared_type='int' name='Points' type='i'/>
<field declared_type='double*' name='Coords' type='^d'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaLinestringStruct*' name='Next' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</struct>
<struct name='gaiaLinestringStruct' type='{gaiaLinestringStruct=&quot;Points&quot;i&quot;Coords&quot;^d&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaLinestringStruct}}'>
<field declared_type='int' name='Points' type='i'/>
<field declared_type='double*' name='Coords' type='^d'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaLinestringStruct*' name='Next' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</struct>
<struct name='gaiaOutBuffer' type='{gaiaOutBufferStruct=&quot;Buffer&quot;*&quot;WriteOffset&quot;i&quot;BufferSize&quot;i&quot;Error&quot;i}'>
<field declared_type='char*' name='Buffer' type='*'/>
<field declared_type='int' name='WriteOffset' type='i'/>
<field declared_type='int' name='BufferSize' type='i'/>
<field declared_type='int' name='Error' type='i'/>
</struct>
<struct name='gaiaOutBufferStruct' type='{gaiaOutBufferStruct=&quot;Buffer&quot;*&quot;WriteOffset&quot;i&quot;BufferSize&quot;i&quot;Error&quot;i}'>
<field declared_type='char*' name='Buffer' type='*'/>
<field declared_type='int' name='WriteOffset' type='i'/>
<field declared_type='int' name='BufferSize' type='i'/>
<field declared_type='int' name='Error' type='i'/>
</struct>
<struct name='gaiaPoint' type='{gaiaPointStruct=&quot;X&quot;d&quot;Y&quot;d&quot;Z&quot;d&quot;M&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaPointStruct}&quot;Prev&quot;^{gaiaPointStruct}}'>
<field declared_type='double' name='X' type='d'/>
<field declared_type='double' name='Y' type='d'/>
<field declared_type='double' name='Z' type='d'/>
<field declared_type='double' name='M' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaPointStruct*' name='Next' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='struct gaiaPointStruct*' name='Prev' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</struct>
<struct name='gaiaPointStruct' type='{gaiaPointStruct=&quot;X&quot;d&quot;Y&quot;d&quot;Z&quot;d&quot;M&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaPointStruct}&quot;Prev&quot;^{gaiaPointStruct}}'>
<field declared_type='double' name='X' type='d'/>
<field declared_type='double' name='Y' type='d'/>
<field declared_type='double' name='Z' type='d'/>
<field declared_type='double' name='M' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaPointStruct*' name='Next' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<field declared_type='struct gaiaPointStruct*' name='Prev' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</struct>
<struct name='gaiaPolygon' type='{gaiaPolygonStruct=&quot;Exterior&quot;^{gaiaRingStruct}&quot;NumInteriors&quot;i&quot;Interiors&quot;^{gaiaRingStruct}&quot;NextInterior&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaPolygonStruct}}'>
<field declared_type='gaiaRingPtr' name='Exterior' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<field declared_type='int' name='NumInteriors' type='i'/>
<field declared_type='gaiaRingPtr' name='Interiors' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<field declared_type='int' name='NextInterior' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaPolygonStruct*' name='Next' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</struct>
<struct name='gaiaPolygonStruct' type='{gaiaPolygonStruct=&quot;Exterior&quot;^{gaiaRingStruct}&quot;NumInteriors&quot;i&quot;Interiors&quot;^{gaiaRingStruct}&quot;NextInterior&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaPolygonStruct}}'>
<field declared_type='gaiaRingPtr' name='Exterior' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<field declared_type='int' name='NumInteriors' type='i'/>
<field declared_type='gaiaRingPtr' name='Interiors' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<field declared_type='int' name='NextInterior' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaPolygonStruct*' name='Next' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</struct>
<struct name='gaiaPreRing' type='{gaiaPreRingStruct=&quot;Line&quot;^{gaiaLinestringStruct}&quot;AlreadyUsed&quot;i&quot;Next&quot;^{gaiaPreRingStruct}}'>
<field declared_type='gaiaLinestringPtr' name='Line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<field declared_type='int' name='AlreadyUsed' type='i'/>
<field declared_type='struct gaiaPreRingStruct*' name='Next' type='^{gaiaPreRingStruct=^{gaiaLinestringStruct}i^{gaiaPreRingStruct}}'/>
</struct>
<struct name='gaiaPreRingStruct' type='{gaiaPreRingStruct=&quot;Line&quot;^{gaiaLinestringStruct}&quot;AlreadyUsed&quot;i&quot;Next&quot;^{gaiaPreRingStruct}}'>
<field declared_type='gaiaLinestringPtr' name='Line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<field declared_type='int' name='AlreadyUsed' type='i'/>
<field declared_type='struct gaiaPreRingStruct*' name='Next' type='^{gaiaPreRingStruct=^{gaiaLinestringStruct}i^{gaiaPreRingStruct}}'/>
</struct>
<struct name='gaiaRing' type='{gaiaRingStruct=&quot;Points&quot;i&quot;Coords&quot;^d&quot;Clockwise&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaRingStruct}&quot;Link&quot;^{gaiaPolygonStruct}}'>
<field declared_type='int' name='Points' type='i'/>
<field declared_type='double*' name='Coords' type='^d'/>
<field declared_type='int' name='Clockwise' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaRingStruct*' name='Next' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<field declared_type='struct gaiaPolygonStruct*' name='Link' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</struct>
<struct name='gaiaRingStruct' type='{gaiaRingStruct=&quot;Points&quot;i&quot;Coords&quot;^d&quot;Clockwise&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;DimensionModel&quot;i&quot;Next&quot;^{gaiaRingStruct}&quot;Link&quot;^{gaiaPolygonStruct}}'>
<field declared_type='int' name='Points' type='i'/>
<field declared_type='double*' name='Coords' type='^d'/>
<field declared_type='int' name='Clockwise' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='int' name='DimensionModel' type='i'/>
<field declared_type='struct gaiaRingStruct*' name='Next' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<field declared_type='struct gaiaPolygonStruct*' name='Link' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</struct>
<struct name='gaiaSequence' type='{gaia_sequence=&quot;seq_name&quot;*&quot;value&quot;i&quot;next&quot;^{gaia_sequence}}'>
<field declared_type='char*' name='seq_name' type='*'/>
<field declared_type='int' name='value' type='i'/>
<field declared_type='struct gaia_sequence*' name='next' type='^{gaia_sequence=*i^{gaia_sequence}}'/>
</struct>
<struct name='gaiaShapefile' type='{gaiaShapefileStruct=&quot;endian_arch&quot;i&quot;Valid&quot;i&quot;ReadOnly&quot;i&quot;Path&quot;*&quot;flShx&quot;^{__sFILE}&quot;flShp&quot;^{__sFILE}&quot;flDbf&quot;^{__sFILE}&quot;Shape&quot;i&quot;Dbf&quot;^{gaiaDbfListStruct}&quot;BufDbf&quot;*&quot;DbfHdsz&quot;i&quot;DbfReclen&quot;i&quot;DbfSize&quot;i&quot;DbfRecno&quot;i&quot;BufShp&quot;*&quot;ShpBfsz&quot;i&quot;ShpSize&quot;i&quot;ShxSize&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;IconvObj&quot;^v&quot;LastError&quot;*&quot;EffectiveType&quot;i&quot;EffectiveDims&quot;i}'>
<field declared_type='int' name='endian_arch' type='i'/>
<field declared_type='int' name='Valid' type='i'/>
<field declared_type='int' name='ReadOnly' type='i'/>
<field declared_type='char*' name='Path' type='*'/>
<field declared_type='FILE*' name='flShx' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='FILE*' name='flShp' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='FILE*' name='flDbf' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='int' name='Shape' type='i'/>
<field declared_type='gaiaDbfListPtr' name='Dbf' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<field declared_type='unsigned char*' name='BufDbf' type='*'/>
<field declared_type='int' name='DbfHdsz' type='i'/>
<field declared_type='int' name='DbfReclen' type='i'/>
<field declared_type='int' name='DbfSize' type='i'/>
<field declared_type='int' name='DbfRecno' type='i'/>
<field declared_type='unsigned char*' name='BufShp' type='*'/>
<field declared_type='int' name='ShpBfsz' type='i'/>
<field declared_type='int' name='ShpSize' type='i'/>
<field declared_type='int' name='ShxSize' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='void*' name='IconvObj' type='^v'/>
<field declared_type='char*' name='LastError' type='*'/>
<field declared_type='int' name='EffectiveType' type='i'/>
<field declared_type='int' name='EffectiveDims' type='i'/>
</struct>
<struct name='gaiaShapefileStruct' type='{gaiaShapefileStruct=&quot;endian_arch&quot;i&quot;Valid&quot;i&quot;ReadOnly&quot;i&quot;Path&quot;*&quot;flShx&quot;^{__sFILE}&quot;flShp&quot;^{__sFILE}&quot;flDbf&quot;^{__sFILE}&quot;Shape&quot;i&quot;Dbf&quot;^{gaiaDbfListStruct}&quot;BufDbf&quot;*&quot;DbfHdsz&quot;i&quot;DbfReclen&quot;i&quot;DbfSize&quot;i&quot;DbfRecno&quot;i&quot;BufShp&quot;*&quot;ShpBfsz&quot;i&quot;ShpSize&quot;i&quot;ShxSize&quot;i&quot;MinX&quot;d&quot;MinY&quot;d&quot;MaxX&quot;d&quot;MaxY&quot;d&quot;IconvObj&quot;^v&quot;LastError&quot;*&quot;EffectiveType&quot;i&quot;EffectiveDims&quot;i}'>
<field declared_type='int' name='endian_arch' type='i'/>
<field declared_type='int' name='Valid' type='i'/>
<field declared_type='int' name='ReadOnly' type='i'/>
<field declared_type='char*' name='Path' type='*'/>
<field declared_type='FILE*' name='flShx' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='FILE*' name='flShp' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='FILE*' name='flDbf' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='int' name='Shape' type='i'/>
<field declared_type='gaiaDbfListPtr' name='Dbf' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<field declared_type='unsigned char*' name='BufDbf' type='*'/>
<field declared_type='int' name='DbfHdsz' type='i'/>
<field declared_type='int' name='DbfReclen' type='i'/>
<field declared_type='int' name='DbfSize' type='i'/>
<field declared_type='int' name='DbfRecno' type='i'/>
<field declared_type='unsigned char*' name='BufShp' type='*'/>
<field declared_type='int' name='ShpBfsz' type='i'/>
<field declared_type='int' name='ShpSize' type='i'/>
<field declared_type='int' name='ShxSize' type='i'/>
<field declared_type='double' name='MinX' type='d'/>
<field declared_type='double' name='MinY' type='d'/>
<field declared_type='double' name='MaxX' type='d'/>
<field declared_type='double' name='MaxY' type='d'/>
<field declared_type='void*' name='IconvObj' type='^v'/>
<field declared_type='char*' name='LastError' type='*'/>
<field declared_type='int' name='EffectiveType' type='i'/>
<field declared_type='int' name='EffectiveDims' type='i'/>
</struct>
<struct name='gaiaSqlProc_VarListStruct' type='{gaiaSqlProc_VarListStruct=&quot;Error&quot;i&quot;ErrMessage&quot;*&quot;First&quot;^{gaiaSqlProc_VariableStruct}&quot;Last&quot;^{gaiaSqlProc_VariableStruct}}'>
<field declared_type='int' name='Error' type='i'/>
<field declared_type='char*' name='ErrMessage' type='*'/>
<field declared_type='SqlProc_VariablePtr' name='First' type='^{gaiaSqlProc_VariableStruct=**^{gaiaSqlProc_VariableStruct}}'/>
<field declared_type='SqlProc_VariablePtr' name='Last' type='^{gaiaSqlProc_VariableStruct=**^{gaiaSqlProc_VariableStruct}}'/>
</struct>
<struct name='gaiaSqlProc_VariableStruct' type='{gaiaSqlProc_VariableStruct=&quot;Name&quot;*&quot;Value&quot;*&quot;Next&quot;^{gaiaSqlProc_VariableStruct}}'>
<field declared_type='char*' name='Name' type='*'/>
<field declared_type='char*' name='Value' type='*'/>
<field declared_type='struct gaiaSqlProc_VariableStruct*' name='Next' type='^{gaiaSqlProc_VariableStruct=**^{gaiaSqlProc_VariableStruct}}'/>
</struct>
<struct name='gaiaTextReader' type='{vrttxt_reader=&quot;columns&quot;[65535{vrttxt_column_header=&quot;name&quot;*&quot;type&quot;i}]&quot;text_file&quot;^{__sFILE}&quot;toUtf8&quot;^v&quot;field_separator&quot;c&quot;text_separator&quot;c&quot;decimal_separator&quot;c&quot;first_line_titles&quot;i&quot;error&quot;i&quot;first&quot;^{vrttxt_row_block}&quot;last&quot;^{vrttxt_row_block}&quot;rows&quot;^^{vrttxt_row}&quot;num_rows&quot;i&quot;line_no&quot;i&quot;max_fields&quot;i&quot;current_buf_sz&quot;i&quot;current_buf_off&quot;i&quot;line_buffer&quot;*&quot;field_buffer&quot;*&quot;field_offsets&quot;[65535i]&quot;field_lens&quot;[65535i]&quot;max_current_field&quot;i&quot;current_line_ready&quot;i}'>
<field declared_type='struct vrttxt_column_header*' name='columns' type='[65535{vrttxt_column_header=&quot;name&quot;*&quot;type&quot;i}]'/>
<field declared_type='FILE*' name='text_file' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='void*' name='toUtf8' type='^v'/>
<field declared_type='char' name='field_separator' type='c'/>
<field declared_type='char' name='text_separator' type='c'/>
<field declared_type='char' name='decimal_separator' type='c'/>
<field declared_type='int' name='first_line_titles' type='i'/>
<field declared_type='int' name='error' type='i'/>
<field declared_type='struct vrttxt_row_block*' name='first' type='^{vrttxt_row_block=[65535{vrttxt_row=iqii}]iii^{vrttxt_row_block}}'/>
<field declared_type='struct vrttxt_row_block*' name='last' type='^{vrttxt_row_block=[65535{vrttxt_row=iqii}]iii^{vrttxt_row_block}}'/>
<field declared_type='struct vrttxt_row**' name='rows' type='^^{vrttxt_row}'/>
<field declared_type='int' name='num_rows' type='i'/>
<field declared_type='int' name='line_no' type='i'/>
<field declared_type='int' name='max_fields' type='i'/>
<field declared_type='int' name='current_buf_sz' type='i'/>
<field declared_type='int' name='current_buf_off' type='i'/>
<field declared_type='char*' name='line_buffer' type='*'/>
<field declared_type='char*' name='field_buffer' type='*'/>
<field declared_type='int*' name='field_offsets' type='[65535i]'/>
<field declared_type='int*' name='field_lens' type='[65535i]'/>
<field declared_type='int' name='max_current_field' type='i'/>
<field declared_type='int' name='current_line_ready' type='i'/>
</struct>
<struct name='gaiaValue' type='{gaiaValueStruct=}'>
<field declared_type='short' name='Type' type='s'/>
<field declared_type='char*' name='TxtValue' type='*'/>
<field declared_type='int' name='IntValue' type='i'/>
<field declared_type='double' name='DblValue' type='d'/>
</struct>
<struct name='gaiaValueStruct' type='{gaiaValueStruct=}'>
<field declared_type='short' name='Type' type='s'/>
<field declared_type='char*' name='TxtValue' type='*'/>
<field declared_type='int' name='IntValue' type='i'/>
<field declared_type='double' name='DblValue' type='d'/>
</struct>
<struct name='gaiaVectorLayer' type='{gaiaVectorLayerItem=&quot;LayerType&quot;i&quot;TableName&quot;*&quot;GeometryName&quot;*&quot;Srid&quot;i&quot;GeometryType&quot;i&quot;Dimensions&quot;i&quot;SpatialIndex&quot;i&quot;ExtentInfos&quot;^{gaiaLayerExtentInfos}&quot;AuthInfos&quot;^{gaiaLayerAuthInfos}&quot;First&quot;^{gaiaLayerAttributeFieldInfos}&quot;Last&quot;^{gaiaLayerAttributeFieldInfos}&quot;Next&quot;^{gaiaVectorLayerItem}}'>
<field declared_type='int' name='LayerType' type='i'/>
<field declared_type='char*' name='TableName' type='*'/>
<field declared_type='char*' name='GeometryName' type='*'/>
<field declared_type='int' name='Srid' type='i'/>
<field declared_type='int' name='GeometryType' type='i'/>
<field declared_type='int' name='Dimensions' type='i'/>
<field declared_type='int' name='SpatialIndex' type='i'/>
<field declared_type='gaiaLayerExtentPtr' name='ExtentInfos' type='^{gaiaLayerExtentInfos=idddd}'/>
<field declared_type='gaiaLayerAuthPtr' name='AuthInfos' type='^{gaiaLayerAuthInfos=iiiii}'/>
<field declared_type='gaiaLayerAttributeFieldPtr' name='First' type='^{gaiaLayerAttributeFieldInfos=i*iiiii^{gaiaAttributeFieldMaxSizeInfos}^{gaiaAttributeFieldIntRangeInfos}^{gaiaAttributeFieldDoubleRangeInfos}^{gaiaLayerAttributeFieldInfos}}'/>
<field declared_type='gaiaLayerAttributeFieldPtr' name='Last' type='^{gaiaLayerAttributeFieldInfos=i*iiiii^{gaiaAttributeFieldMaxSizeInfos}^{gaiaAttributeFieldIntRangeInfos}^{gaiaAttributeFieldDoubleRangeInfos}^{gaiaLayerAttributeFieldInfos}}'/>
<field declared_type='struct gaiaVectorLayerItem*' name='Next' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
</struct>
<struct name='gaiaVectorLayerItem' type='{gaiaVectorLayerItem=&quot;LayerType&quot;i&quot;TableName&quot;*&quot;GeometryName&quot;*&quot;Srid&quot;i&quot;GeometryType&quot;i&quot;Dimensions&quot;i&quot;SpatialIndex&quot;i&quot;ExtentInfos&quot;^{gaiaLayerExtentInfos}&quot;AuthInfos&quot;^{gaiaLayerAuthInfos}&quot;First&quot;^{gaiaLayerAttributeFieldInfos}&quot;Last&quot;^{gaiaLayerAttributeFieldInfos}&quot;Next&quot;^{gaiaVectorLayerItem}}'>
<field declared_type='int' name='LayerType' type='i'/>
<field declared_type='char*' name='TableName' type='*'/>
<field declared_type='char*' name='GeometryName' type='*'/>
<field declared_type='int' name='Srid' type='i'/>
<field declared_type='int' name='GeometryType' type='i'/>
<field declared_type='int' name='Dimensions' type='i'/>
<field declared_type='int' name='SpatialIndex' type='i'/>
<field declared_type='gaiaLayerExtentPtr' name='ExtentInfos' type='^{gaiaLayerExtentInfos=idddd}'/>
<field declared_type='gaiaLayerAuthPtr' name='AuthInfos' type='^{gaiaLayerAuthInfos=iiiii}'/>
<field declared_type='gaiaLayerAttributeFieldPtr' name='First' type='^{gaiaLayerAttributeFieldInfos=i*iiiii^{gaiaAttributeFieldMaxSizeInfos}^{gaiaAttributeFieldIntRangeInfos}^{gaiaAttributeFieldDoubleRangeInfos}^{gaiaLayerAttributeFieldInfos}}'/>
<field declared_type='gaiaLayerAttributeFieldPtr' name='Last' type='^{gaiaLayerAttributeFieldInfos=i*iiiii^{gaiaAttributeFieldMaxSizeInfos}^{gaiaAttributeFieldIntRangeInfos}^{gaiaAttributeFieldDoubleRangeInfos}^{gaiaLayerAttributeFieldInfos}}'/>
<field declared_type='struct gaiaVectorLayerItem*' name='Next' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
</struct>
<struct name='gaiaVectorLayersList' type='{gaiaVectorLayersListStr=&quot;First&quot;^{gaiaVectorLayerItem}&quot;Last&quot;^{gaiaVectorLayerItem}&quot;Current&quot;^{gaiaVectorLayerItem}}'>
<field declared_type='gaiaVectorLayerPtr' name='First' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
<field declared_type='gaiaVectorLayerPtr' name='Last' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
<field declared_type='gaiaVectorLayerPtr' name='Current' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
</struct>
<struct name='gaiaVectorLayersListStr' type='{gaiaVectorLayersListStr=&quot;First&quot;^{gaiaVectorLayerItem}&quot;Last&quot;^{gaiaVectorLayerItem}&quot;Current&quot;^{gaiaVectorLayerItem}}'>
<field declared_type='gaiaVectorLayerPtr' name='First' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
<field declared_type='gaiaVectorLayerPtr' name='Last' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
<field declared_type='gaiaVectorLayerPtr' name='Current' type='^{gaiaVectorLayerItem=i**iiii^{gaiaLayerExtentInfos}^{gaiaLayerAuthInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaLayerAttributeFieldInfos}^{gaiaVectorLayerItem}}'/>
</struct>
<struct name='gaia_dxf_arc' type='{gaia_dxf_arc=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d&quot;start&quot;d&quot;stop&quot;d}'>
<field declared_type='double' name='cx' type='d'/>
<field declared_type='double' name='cy' type='d'/>
<field declared_type='double' name='cz' type='d'/>
<field declared_type='double' name='radius' type='d'/>
<field declared_type='double' name='start' type='d'/>
<field declared_type='double' name='stop' type='d'/>
</struct>
<struct name='gaia_dxf_block' type='{gaia_dxf_block=&quot;hasInsert&quot;i&quot;layer_name&quot;*&quot;block_id&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;next&quot;^{gaia_dxf_block}}'>
<field declared_type='int' name='hasInsert' type='i'/>
<field declared_type='char*' name='layer_name' type='*'/>
<field declared_type='char*' name='block_id' type='*'/>
<field declared_type='gaiaDxfTextPtr' name='first_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfTextPtr' name='last_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfPointPtr' name='first_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPointPtr' name='last_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfHatchPtr' name='first_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='gaiaDxfHatchPtr' name='last_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='int' name='is3Dtext' type='i'/>
<field declared_type='int' name='is3Dpoint' type='i'/>
<field declared_type='int' name='is3Dline' type='i'/>
<field declared_type='int' name='is3Dpolyg' type='i'/>
<field declared_type='struct gaia_dxf_block*' name='next' type='^{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}'/>
</struct>
<struct name='gaia_dxf_boundary_path' type='{gaia_dxf_boundary_path=&quot;first&quot;^{gaia_dxf_hatch_segm}&quot;last&quot;^{gaia_dxf_hatch_segm}&quot;next&quot;^{gaia_dxf_boundary_path}}'>
<field declared_type='gaiaDxfHatchSegmPtr' name='first' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='gaiaDxfHatchSegmPtr' name='last' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='struct gaia_dxf_boundary_path*' name='next' type='^{gaia_dxf_boundary_path=^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_boundary_path}}'/>
</struct>
<struct name='gaia_dxf_circle' type='{gaia_dxf_circle=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d}'>
<field declared_type='double' name='cx' type='d'/>
<field declared_type='double' name='cy' type='d'/>
<field declared_type='double' name='cz' type='d'/>
<field declared_type='double' name='radius' type='d'/>
</struct>
<struct name='gaia_dxf_extra_attr' type='{gaia_dxf_extra_attr=&quot;key&quot;*&quot;value&quot;*&quot;next&quot;^{gaia_dxf_extra_attr}}'>
<field declared_type='char*' name='key' type='*'/>
<field declared_type='char*' name='value' type='*'/>
<field declared_type='struct gaia_dxf_extra_attr*' name='next' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
</struct>
<struct name='gaia_dxf_hatch' type='{gaia_dxf_hatch=&quot;spacing&quot;d&quot;angle&quot;d&quot;base_x&quot;d&quot;base_y&quot;d&quot;offset_x&quot;d&quot;offset_y&quot;d&quot;first&quot;^{gaia_dxf_boundary_path}&quot;last&quot;^{gaia_dxf_boundary_path}&quot;boundary&quot;^{gaiaGeomCollStruct}&quot;first_out&quot;^{gaia_dxf_hatch_segm}&quot;last_out&quot;^{gaia_dxf_hatch_segm}&quot;next&quot;^{gaia_dxf_hatch}}'>
<field declared_type='double' name='spacing' type='d'/>
<field declared_type='double' name='angle' type='d'/>
<field declared_type='double' name='base_x' type='d'/>
<field declared_type='double' name='base_y' type='d'/>
<field declared_type='double' name='offset_x' type='d'/>
<field declared_type='double' name='offset_y' type='d'/>
<field declared_type='gaiaDxfBoundaryPathPtr' name='first' type='^{gaia_dxf_boundary_path=^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_boundary_path}}'/>
<field declared_type='gaiaDxfBoundaryPathPtr' name='last' type='^{gaia_dxf_boundary_path=^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_boundary_path}}'/>
<field declared_type='gaiaGeomCollPtr' name='boundary' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<field declared_type='gaiaDxfHatchSegmPtr' name='first_out' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='gaiaDxfHatchSegmPtr' name='last_out' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
<field declared_type='struct gaia_dxf_hatch*' name='next' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
</struct>
<struct name='gaia_dxf_hatch_segm' type='{gaia_dxf_hatch_segm=&quot;x0&quot;d&quot;y0&quot;d&quot;x1&quot;d&quot;y1&quot;d&quot;next&quot;^{gaia_dxf_hatch_segm}}'>
<field declared_type='double' name='x0' type='d'/>
<field declared_type='double' name='y0' type='d'/>
<field declared_type='double' name='x1' type='d'/>
<field declared_type='double' name='y1' type='d'/>
<field declared_type='struct gaia_dxf_hatch_segm*' name='next' type='^{gaia_dxf_hatch_segm=dddd^{gaia_dxf_hatch_segm}}'/>
</struct>
<struct name='gaia_dxf_hole' type='{gaia_dxf_hole=&quot;points&quot;i&quot;x&quot;^d&quot;y&quot;^d&quot;z&quot;^d&quot;next&quot;^{gaia_dxf_hole}}'>
<field declared_type='int' name='points' type='i'/>
<field declared_type='double*' name='x' type='^d'/>
<field declared_type='double*' name='y' type='^d'/>
<field declared_type='double*' name='z' type='^d'/>
<field declared_type='struct gaia_dxf_hole*' name='next' type='^{gaia_dxf_hole=i^d^d^d^{gaia_dxf_hole}}'/>
</struct>
<struct name='gaia_dxf_insert' type='{gaia_dxf_insert=&quot;block_id&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;scale_x&quot;d&quot;scale_y&quot;d&quot;scale_z&quot;d&quot;angle&quot;d&quot;hasText&quot;i&quot;hasPoint&quot;i&quot;hasLine&quot;i&quot;hasPolyg&quot;i&quot;hasHatch&quot;i&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_insert}}'>
<field declared_type='char*' name='block_id' type='*'/>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
<field declared_type='double' name='z' type='d'/>
<field declared_type='double' name='scale_x' type='d'/>
<field declared_type='double' name='scale_y' type='d'/>
<field declared_type='double' name='scale_z' type='d'/>
<field declared_type='double' name='angle' type='d'/>
<field declared_type='int' name='hasText' type='i'/>
<field declared_type='int' name='hasPoint' type='i'/>
<field declared_type='int' name='hasLine' type='i'/>
<field declared_type='int' name='hasPolyg' type='i'/>
<field declared_type='int' name='hasHatch' type='i'/>
<field declared_type='int' name='is3Dtext' type='i'/>
<field declared_type='int' name='is3Dpoint' type='i'/>
<field declared_type='int' name='is3Dline' type='i'/>
<field declared_type='int' name='is3Dpolyg' type='i'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_insert*' name='next' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
</struct>
<struct name='gaia_dxf_layer' type='{gaia_dxf_layer=&quot;layer_name&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;first_ins_text&quot;^{gaia_dxf_insert}&quot;last_ins_text&quot;^{gaia_dxf_insert}&quot;first_ins_point&quot;^{gaia_dxf_insert}&quot;last_ins_point&quot;^{gaia_dxf_insert}&quot;first_ins_line&quot;^{gaia_dxf_insert}&quot;last_ins_line&quot;^{gaia_dxf_insert}&quot;first_ins_polyg&quot;^{gaia_dxf_insert}&quot;last_ins_polyg&quot;^{gaia_dxf_insert}&quot;first_ins_hatch&quot;^{gaia_dxf_insert}&quot;last_ins_hatch&quot;^{gaia_dxf_insert}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;is3DinsText&quot;i&quot;is3DinsPoint&quot;i&quot;is3DinsLine&quot;i&quot;is3DinsPolyg&quot;i&quot;hasExtraText&quot;i&quot;hasExtraPoint&quot;i&quot;hasExtraLine&quot;i&quot;hasExtraPolyg&quot;i&quot;hasExtraInsText&quot;i&quot;hasExtraInsPoint&quot;i&quot;hasExtraInsLine&quot;i&quot;hasExtraInsPolyg&quot;i&quot;next&quot;^{gaia_dxf_layer}}'>
<field declared_type='char*' name='layer_name' type='*'/>
<field declared_type='gaiaDxfTextPtr' name='first_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfTextPtr' name='last_text' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfPointPtr' name='first_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPointPtr' name='last_point' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_line' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='first_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfPolylinePtr' name='last_polyg' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
<field declared_type='gaiaDxfHatchPtr' name='first_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='gaiaDxfHatchPtr' name='last_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_text' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_text' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_point' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_point' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_line' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_line' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_polyg' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_polyg' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='first_ins_hatch' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfInsertPtr' name='last_ins_hatch' type='^{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}'/>
<field declared_type='int' name='is3Dtext' type='i'/>
<field declared_type='int' name='is3Dpoint' type='i'/>
<field declared_type='int' name='is3Dline' type='i'/>
<field declared_type='int' name='is3Dpolyg' type='i'/>
<field declared_type='int' name='is3DinsText' type='i'/>
<field declared_type='int' name='is3DinsPoint' type='i'/>
<field declared_type='int' name='is3DinsLine' type='i'/>
<field declared_type='int' name='is3DinsPolyg' type='i'/>
<field declared_type='int' name='hasExtraText' type='i'/>
<field declared_type='int' name='hasExtraPoint' type='i'/>
<field declared_type='int' name='hasExtraLine' type='i'/>
<field declared_type='int' name='hasExtraPolyg' type='i'/>
<field declared_type='int' name='hasExtraInsText' type='i'/>
<field declared_type='int' name='hasExtraInsPoint' type='i'/>
<field declared_type='int' name='hasExtraInsLine' type='i'/>
<field declared_type='int' name='hasExtraInsPolyg' type='i'/>
<field declared_type='struct gaia_dxf_layer*' name='next' type='^{gaia_dxf_layer=*^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}iiiiiiiiiiiiiiii^{gaia_dxf_layer}}'/>
</struct>
<struct name='gaia_dxf_parser' type='{gaia_dxf_parser=&quot;filename&quot;*&quot;first_layer&quot;^{gaia_dxf_layer}&quot;last_layer&quot;^{gaia_dxf_layer}&quot;first_block&quot;^{gaia_dxf_block}&quot;last_block&quot;^{gaia_dxf_block}&quot;force_dims&quot;i&quot;srid&quot;i&quot;selected_layer&quot;*&quot;prefix&quot;*&quot;linked_rings&quot;i&quot;unlinked_rings&quot;i&quot;line_no&quot;i&quot;op_code_line&quot;i&quot;op_code&quot;i&quot;section&quot;i&quot;tables&quot;i&quot;blocks&quot;i&quot;entities&quot;i&quot;is_layer&quot;i&quot;is_block&quot;i&quot;is_text&quot;i&quot;is_point&quot;i&quot;is_polyline&quot;i&quot;is_lwpolyline&quot;i&quot;is_line&quot;i&quot;is_circle&quot;i&quot;is_arc&quot;i&quot;is_vertex&quot;i&quot;is_hatch&quot;i&quot;is_hatch_boundary&quot;i&quot;is_insert&quot;i&quot;eof&quot;i&quot;error&quot;i&quot;curr_layer_name&quot;*&quot;curr_text&quot;{gaia_dxf_text=&quot;label&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;angle&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_text}}&quot;curr_insert&quot;{gaia_dxf_insert=&quot;block_id&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;scale_x&quot;d&quot;scale_y&quot;d&quot;scale_z&quot;d&quot;angle&quot;d&quot;hasText&quot;i&quot;hasPoint&quot;i&quot;hasLine&quot;i&quot;hasPolyg&quot;i&quot;hasHatch&quot;i&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_insert}}&quot;curr_block&quot;{gaia_dxf_block=&quot;hasInsert&quot;i&quot;layer_name&quot;*&quot;block_id&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;next&quot;^{gaia_dxf_block}}&quot;curr_point&quot;{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}&quot;curr_end_point&quot;{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}&quot;curr_circle&quot;{gaia_dxf_circle=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d}&quot;curr_arc&quot;{gaia_dxf_arc=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d&quot;start&quot;d&quot;stop&quot;d}&quot;is_closed_polyline&quot;i&quot;first_pt&quot;^{gaia_dxf_point}&quot;last_pt&quot;^{gaia_dxf_point}&quot;extra_key&quot;*&quot;extra_value&quot;*&quot;first_ext&quot;^{gaia_dxf_extra_attr}&quot;last_ext&quot;^{gaia_dxf_extra_attr}&quot;curr_hatch&quot;^{gaia_dxf_hatch}&quot;undeclared_layers&quot;i}'>
<field declared_type='char*' name='filename' type='*'/>
<field declared_type='gaiaDxfLayerPtr' name='first_layer' type='^{gaia_dxf_layer=*^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}iiiiiiiiiiiiiiii^{gaia_dxf_layer}}'/>
<field declared_type='gaiaDxfLayerPtr' name='last_layer' type='^{gaia_dxf_layer=*^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}^{gaia_dxf_insert}iiiiiiiiiiiiiiii^{gaia_dxf_layer}}'/>
<field declared_type='gaiaDxfBlockPtr' name='first_block' type='^{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}'/>
<field declared_type='gaiaDxfBlockPtr' name='last_block' type='^{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}'/>
<field declared_type='int' name='force_dims' type='i'/>
<field declared_type='int' name='srid' type='i'/>
<field const='true' declared_type='char*' name='selected_layer' type='*'/>
<field const='true' declared_type='char*' name='prefix' type='*'/>
<field declared_type='int' name='linked_rings' type='i'/>
<field declared_type='int' name='unlinked_rings' type='i'/>
<field declared_type='int' name='line_no' type='i'/>
<field declared_type='int' name='op_code_line' type='i'/>
<field declared_type='int' name='op_code' type='i'/>
<field declared_type='int' name='section' type='i'/>
<field declared_type='int' name='tables' type='i'/>
<field declared_type='int' name='blocks' type='i'/>
<field declared_type='int' name='entities' type='i'/>
<field declared_type='int' name='is_layer' type='i'/>
<field declared_type='int' name='is_block' type='i'/>
<field declared_type='int' name='is_text' type='i'/>
<field declared_type='int' name='is_point' type='i'/>
<field declared_type='int' name='is_polyline' type='i'/>
<field declared_type='int' name='is_lwpolyline' type='i'/>
<field declared_type='int' name='is_line' type='i'/>
<field declared_type='int' name='is_circle' type='i'/>
<field declared_type='int' name='is_arc' type='i'/>
<field declared_type='int' name='is_vertex' type='i'/>
<field declared_type='int' name='is_hatch' type='i'/>
<field declared_type='int' name='is_hatch_boundary' type='i'/>
<field declared_type='int' name='is_insert' type='i'/>
<field declared_type='int' name='eof' type='i'/>
<field declared_type='int' name='error' type='i'/>
<field declared_type='char*' name='curr_layer_name' type='*'/>
<field declared_type='gaiaDxfText' name='curr_text' type='{gaia_dxf_text=&quot;label&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;angle&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_text}}'/>
<field declared_type='gaiaDxfInsert' name='curr_insert' type='{gaia_dxf_insert=&quot;block_id&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;scale_x&quot;d&quot;scale_y&quot;d&quot;scale_z&quot;d&quot;angle&quot;d&quot;hasText&quot;i&quot;hasPoint&quot;i&quot;hasLine&quot;i&quot;hasPolyg&quot;i&quot;hasHatch&quot;i&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_insert}}'/>
<field declared_type='gaiaDxfBlock' name='curr_block' type='{gaia_dxf_block=&quot;hasInsert&quot;i&quot;layer_name&quot;*&quot;block_id&quot;*&quot;first_text&quot;^{gaia_dxf_text}&quot;last_text&quot;^{gaia_dxf_text}&quot;first_point&quot;^{gaia_dxf_point}&quot;last_point&quot;^{gaia_dxf_point}&quot;first_line&quot;^{gaia_dxf_polyline}&quot;last_line&quot;^{gaia_dxf_polyline}&quot;first_polyg&quot;^{gaia_dxf_polyline}&quot;last_polyg&quot;^{gaia_dxf_polyline}&quot;first_hatch&quot;^{gaia_dxf_hatch}&quot;last_hatch&quot;^{gaia_dxf_hatch}&quot;is3Dtext&quot;i&quot;is3Dpoint&quot;i&quot;is3Dline&quot;i&quot;is3Dpolyg&quot;i&quot;next&quot;^{gaia_dxf_block}}'/>
<field declared_type='gaiaDxfPoint' name='curr_point' type='{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPoint' name='curr_end_point' type='{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfCircle' name='curr_circle' type='{gaia_dxf_circle=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d}'/>
<field declared_type='gaiaDxfArc' name='curr_arc' type='{gaia_dxf_arc=&quot;cx&quot;d&quot;cy&quot;d&quot;cz&quot;d&quot;radius&quot;d&quot;start&quot;d&quot;stop&quot;d}'/>
<field declared_type='int' name='is_closed_polyline' type='i'/>
<field declared_type='gaiaDxfPointPtr' name='first_pt' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='gaiaDxfPointPtr' name='last_pt' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
<field declared_type='char*' name='extra_key' type='*'/>
<field declared_type='char*' name='extra_value' type='*'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first_ext' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last_ext' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfHatchPtr' name='curr_hatch' type='^{gaia_dxf_hatch=dddddd^{gaia_dxf_boundary_path}^{gaia_dxf_boundary_path}^{gaiaGeomCollStruct}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch_segm}^{gaia_dxf_hatch}}'/>
<field declared_type='int' name='undeclared_layers' type='i'/>
</struct>
<struct name='gaia_dxf_point' type='{gaia_dxf_point=&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_point}}'>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
<field declared_type='double' name='z' type='d'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_point*' name='next' type='^{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}'/>
</struct>
<struct name='gaia_dxf_polyline' type='{gaia_dxf_polyline=&quot;is_closed&quot;i&quot;points&quot;i&quot;x&quot;^d&quot;y&quot;^d&quot;z&quot;^d&quot;first_hole&quot;^{gaia_dxf_hole}&quot;last_hole&quot;^{gaia_dxf_hole}&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_polyline}}'>
<field declared_type='int' name='is_closed' type='i'/>
<field declared_type='int' name='points' type='i'/>
<field declared_type='double*' name='x' type='^d'/>
<field declared_type='double*' name='y' type='^d'/>
<field declared_type='double*' name='z' type='^d'/>
<field declared_type='gaiaDxfHolePtr' name='first_hole' type='^{gaia_dxf_hole=i^d^d^d^{gaia_dxf_hole}}'/>
<field declared_type='gaiaDxfHolePtr' name='last_hole' type='^{gaia_dxf_hole=i^d^d^d^{gaia_dxf_hole}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_polyline*' name='next' type='^{gaia_dxf_polyline=ii^d^d^d^{gaia_dxf_hole}^{gaia_dxf_hole}^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_polyline}}'/>
</struct>
<struct name='gaia_dxf_text' type='{gaia_dxf_text=&quot;label&quot;*&quot;x&quot;d&quot;y&quot;d&quot;z&quot;d&quot;angle&quot;d&quot;first&quot;^{gaia_dxf_extra_attr}&quot;last&quot;^{gaia_dxf_extra_attr}&quot;next&quot;^{gaia_dxf_text}}'>
<field declared_type='char*' name='label' type='*'/>
<field declared_type='double' name='x' type='d'/>
<field declared_type='double' name='y' type='d'/>
<field declared_type='double' name='z' type='d'/>
<field declared_type='double' name='angle' type='d'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='first' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='gaiaDxfExtraAttrPtr' name='last' type='^{gaia_dxf_extra_attr=**^{gaia_dxf_extra_attr}}'/>
<field declared_type='struct gaia_dxf_text*' name='next' type='^{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}'/>
</struct>
<struct name='gaia_dxf_write' type='{gaia_dxf_write=&quot;out&quot;^{__sFILE}&quot;precision&quot;i&quot;version&quot;i&quot;count&quot;i&quot;error&quot;i}'>
<field declared_type='FILE*' name='out' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='int' name='precision' type='i'/>
<field declared_type='int' name='version' type='i'/>
<field declared_type='int' name='count' type='i'/>
<field declared_type='int' name='error' type='i'/>
</struct>
<struct name='gaia_sequence' type='{gaia_sequence=&quot;seq_name&quot;*&quot;value&quot;i&quot;next&quot;^{gaia_sequence}}'>
<field declared_type='char*' name='seq_name' type='*'/>
<field declared_type='int' name='value' type='i'/>
<field declared_type='struct gaia_sequence*' name='next' type='^{gaia_sequence=*i^{gaia_sequence}}'/>
</struct>
<struct name='sqlite3_api_routines' type='{sqlite3_api_routines=&quot;aggregate_context&quot;^?&quot;aggregate_count&quot;^?&quot;bind_blob&quot;^?&quot;bind_double&quot;^?&quot;bind_int&quot;^?&quot;bind_int64&quot;^?&quot;bind_null&quot;^?&quot;bind_parameter_count&quot;^?&quot;bind_parameter_index&quot;^?&quot;bind_parameter_name&quot;^?&quot;bind_text&quot;^?&quot;bind_text16&quot;^?&quot;bind_value&quot;^?&quot;busy_handler&quot;^?&quot;busy_timeout&quot;^?&quot;changes&quot;^?&quot;close&quot;^?&quot;collation_needed&quot;^?&quot;collation_needed16&quot;^?&quot;column_blob&quot;^?&quot;column_bytes&quot;^?&quot;column_bytes16&quot;^?&quot;column_count&quot;^?&quot;column_database_name&quot;^?&quot;column_database_name16&quot;^?&quot;column_decltype&quot;^?&quot;column_decltype16&quot;^?&quot;column_double&quot;^?&quot;column_int&quot;^?&quot;column_int64&quot;^?&quot;column_name&quot;^?&quot;column_name16&quot;^?&quot;column_origin_name&quot;^?&quot;column_origin_name16&quot;^?&quot;column_table_name&quot;^?&quot;column_table_name16&quot;^?&quot;column_text&quot;^?&quot;column_text16&quot;^?&quot;column_type&quot;^?&quot;column_value&quot;^?&quot;commit_hook&quot;^?&quot;complete&quot;^?&quot;complete16&quot;^?&quot;create_collation&quot;^?&quot;create_collation16&quot;^?&quot;create_function&quot;^?&quot;create_function16&quot;^?&quot;create_module&quot;^?&quot;data_count&quot;^?&quot;db_handle&quot;^?&quot;declare_vtab&quot;^?&quot;enable_shared_cache&quot;^?&quot;errcode&quot;^?&quot;errmsg&quot;^?&quot;errmsg16&quot;^?&quot;exec&quot;^?&quot;expired&quot;^?&quot;finalize&quot;^?&quot;free&quot;^?&quot;free_table&quot;^?&quot;get_autocommit&quot;^?&quot;get_auxdata&quot;^?&quot;get_table&quot;^?&quot;global_recover&quot;^?&quot;interruptx&quot;^?&quot;last_insert_rowid&quot;^?&quot;libversion&quot;^?&quot;libversion_number&quot;^?&quot;malloc&quot;^?&quot;mprintf&quot;^?&quot;open&quot;^?&quot;open16&quot;^?&quot;prepare&quot;^?&quot;prepare16&quot;^?&quot;profile&quot;^?&quot;progress_handler&quot;^?&quot;realloc&quot;^?&quot;reset&quot;^?&quot;result_blob&quot;^?&quot;result_double&quot;^?&quot;result_error&quot;^?&quot;result_error16&quot;^?&quot;result_int&quot;^?&quot;result_int64&quot;^?&quot;result_null&quot;^?&quot;result_text&quot;^?&quot;result_text16&quot;^?&quot;result_text16be&quot;^?&quot;result_text16le&quot;^?&quot;result_value&quot;^?&quot;rollback_hook&quot;^?&quot;set_authorizer&quot;^?&quot;set_auxdata&quot;^?&quot;xsnprintf&quot;^?&quot;step&quot;^?&quot;table_column_metadata&quot;^?&quot;thread_cleanup&quot;^?&quot;total_changes&quot;^?&quot;trace&quot;^?&quot;transfer_bindings&quot;^?&quot;update_hook&quot;^?&quot;user_data&quot;^?&quot;value_blob&quot;^?&quot;value_bytes&quot;^?&quot;value_bytes16&quot;^?&quot;value_double&quot;^?&quot;value_int&quot;^?&quot;value_int64&quot;^?&quot;value_numeric_type&quot;^?&quot;value_text&quot;^?&quot;value_text16&quot;^?&quot;value_text16be&quot;^?&quot;value_text16le&quot;^?&quot;value_type&quot;^?&quot;vmprintf&quot;^?&quot;overload_function&quot;^?&quot;prepare_v2&quot;^?&quot;prepare16_v2&quot;^?&quot;clear_bindings&quot;^?&quot;create_module_v2&quot;^?&quot;bind_zeroblob&quot;^?&quot;blob_bytes&quot;^?&quot;blob_close&quot;^?&quot;blob_open&quot;^?&quot;blob_read&quot;^?&quot;blob_write&quot;^?&quot;create_collation_v2&quot;^?&quot;file_control&quot;^?&quot;memory_highwater&quot;^?&quot;memory_used&quot;^?&quot;mutex_alloc&quot;^?&quot;mutex_enter&quot;^?&quot;mutex_free&quot;^?&quot;mutex_leave&quot;^?&quot;mutex_try&quot;^?&quot;open_v2&quot;^?&quot;release_memory&quot;^?&quot;result_error_nomem&quot;^?&quot;result_error_toobig&quot;^?&quot;sleep&quot;^?&quot;soft_heap_limit&quot;^?&quot;vfs_find&quot;^?&quot;vfs_register&quot;^?&quot;vfs_unregister&quot;^?&quot;xthreadsafe&quot;^?&quot;result_zeroblob&quot;^?&quot;result_error_code&quot;^?&quot;test_control&quot;^?&quot;randomness&quot;^?&quot;context_db_handle&quot;^?&quot;extended_result_codes&quot;^?&quot;limit&quot;^?&quot;next_stmt&quot;^?&quot;sql&quot;^?&quot;status&quot;^?&quot;backup_finish&quot;^?&quot;backup_init&quot;^?&quot;backup_pagecount&quot;^?&quot;backup_remaining&quot;^?&quot;backup_step&quot;^?&quot;compileoption_get&quot;^?&quot;compileoption_used&quot;^?&quot;create_function_v2&quot;^?&quot;db_config&quot;^?&quot;db_mutex&quot;^?&quot;db_status&quot;^?&quot;extended_errcode&quot;^?&quot;log&quot;^?&quot;soft_heap_limit64&quot;^?&quot;sourceid&quot;^?&quot;stmt_status&quot;^?&quot;strnicmp&quot;^?&quot;unlock_notify&quot;^?&quot;wal_autocheckpoint&quot;^?&quot;wal_checkpoint&quot;^?&quot;wal_hook&quot;^?&quot;blob_reopen&quot;^?&quot;vtab_config&quot;^?&quot;vtab_on_conflict&quot;^?&quot;close_v2&quot;^?&quot;db_filename&quot;^?&quot;db_readonly&quot;^?&quot;db_release_memory&quot;^?&quot;errstr&quot;^?&quot;stmt_busy&quot;^?&quot;stmt_readonly&quot;^?&quot;stricmp&quot;^?&quot;uri_boolean&quot;^?&quot;uri_int64&quot;^?&quot;uri_parameter&quot;^?&quot;xvsnprintf&quot;^?&quot;wal_checkpoint_v2&quot;^?&quot;auto_extension&quot;^?&quot;bind_blob64&quot;^?&quot;bind_text64&quot;^?&quot;cancel_auto_extension&quot;^?&quot;load_extension&quot;^?&quot;malloc64&quot;^?&quot;msize&quot;^?&quot;realloc64&quot;^?&quot;reset_auto_extension&quot;^?&quot;result_blob64&quot;^?&quot;result_text64&quot;^?&quot;strglob&quot;^?&quot;value_dup&quot;^?&quot;value_free&quot;^?&quot;result_zeroblob64&quot;^?&quot;bind_zeroblob64&quot;^?&quot;value_subtype&quot;^?&quot;result_subtype&quot;^?&quot;status64&quot;^?&quot;strlike&quot;^?&quot;db_cacheflush&quot;^?&quot;system_errno&quot;^?&quot;trace_v2&quot;^?&quot;expanded_sql&quot;^?&quot;set_last_insert_rowid&quot;^?&quot;prepare_v3&quot;^?&quot;prepare16_v3&quot;^?&quot;bind_pointer&quot;^?&quot;result_pointer&quot;^?&quot;value_pointer&quot;^?&quot;vtab_nochange&quot;^?&quot;value_nochange&quot;^?&quot;vtab_collation&quot;^?}'>
<field declared_type='void *(*)(sqlite3_context *, int)' function_pointer='true' name='aggregate_context' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_context *)' function_pointer='true' name='aggregate_count' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, void *, int, void (*)(void *))' function_pointer='true' name='bind_blob' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, double)' function_pointer='true' name='bind_double' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='double' type='d'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, int)' function_pointer='true' name='bind_int' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, sqlite_int64)' function_pointer='true' name='bind_int64' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite_int64' type='q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int)' function_pointer='true' name='bind_null' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='bind_parameter_count' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, char *)' function_pointer='true' name='bind_parameter_index' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='bind_parameter_name' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, char *, int, void (*)(void *))' function_pointer='true' name='bind_text' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, void *, int, void (*)(void *))' function_pointer='true' name='bind_text16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, sqlite3_value *)' function_pointer='true' name='bind_value' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, int (*)(void *, int), void *)' function_pointer='true' name='busy_handler' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, int)' function_pointer='true' name='busy_timeout' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='changes' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='close' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, void (*)(void *, sqlite3 *, int, char *))' function_pointer='true' name='collation_needed' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *, sqlite3 *, int, char *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, void (*)(void *, sqlite3 *, int, void *))' function_pointer='true' name='collation_needed16' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *, sqlite3 *, int, void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_blob' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int)' function_pointer='true' name='column_bytes' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int)' function_pointer='true' name='column_bytes16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='column_count' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_database_name' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_database_name16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_decltype' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_decltype16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='double (*)(sqlite3_stmt *, int)' function_pointer='true' name='column_double' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='double' type='d'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int)' function_pointer='true' name='column_int' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite_int64 (*)(sqlite3_stmt *, int)' function_pointer='true' name='column_int64' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite_int64' type='q'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_name' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_name16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_origin_name' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_origin_name16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_table_name' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_table_name16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='unsigned char *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_text' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_text16' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int)' function_pointer='true' name='column_type' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_value *(*)(sqlite3_stmt *, int)' function_pointer='true' name='column_value' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
</field>
<field declared_type='void *(*)(sqlite3 *, int (*)(void *), void *)' function_pointer='true' name='commit_hook' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)( char *)' function_pointer='true' name='complete' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( void *)' function_pointer='true' name='complete16' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, void *, int (*)(void *, int, void *, int, void *))' function_pointer='true' name='create_collation' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int (*)(void *, int, void *, int, void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, int, void *, int (*)(void *, int, void *, int, void *))' function_pointer='true' name='create_collation16' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int (*)(void *, int, void *, int, void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *))' function_pointer='true' name='create_function' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *))' function_pointer='true' name='create_function16' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, sqlite3_module *, void *)' function_pointer='true' name='create_module' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='sqlite3_module*' type='^{sqlite3_module=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='data_count' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3 *(*)(sqlite3_stmt *)' function_pointer='true' name='db_handle' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *)' function_pointer='true' name='declare_vtab' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(int)' function_pointer='true' name='enable_shared_cache' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='errcode' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3 *)' function_pointer='true' name='errmsg' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3 *)' function_pointer='true' name='errmsg16' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, sqlite3_callback, void *, char **)' function_pointer='true' name='exec' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_callback' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='expired' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='finalize' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(void *)' function_pointer='true' name='free' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(char **)' function_pointer='true' name='free_table' type='^?'>
<arg declared_type='char**' type='^*'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='get_autocommit' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3_context *, int)' function_pointer='true' name='get_auxdata' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, char ***, int *, int *, char **)' function_pointer='true' name='get_table' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='char***' type='^^*'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(void)' function_pointer='true' name='global_recover' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3 *)' function_pointer='true' name='interruptx' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite_int64 (*)(sqlite3 *)' function_pointer='true' name='last_insert_rowid' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='sqlite_int64' type='q'/>
</field>
<field const='true' declared_type='char *(*)(void)' function_pointer='true' name='libversion' type='^?'>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(void)' function_pointer='true' name='libversion_number' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(int)' function_pointer='true' name='malloc' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='char *(*)( char *, ...)' function_pointer='true' name='mprintf' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)( char *, sqlite3 **)' function_pointer='true' name='open' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3**' type='^^{sqlite3}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( void *, sqlite3 **)' function_pointer='true' name='open16' type='^?'>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='sqlite3**' type='^^{sqlite3}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, sqlite3_stmt **, char **)' function_pointer='true' name='prepare' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, int, sqlite3_stmt **, void **)' function_pointer='true' name='prepare16' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='void**' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3 *, void (*)(void *, char *, sqlite_uint64), void *)' function_pointer='true' name='profile' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *, char *, sqlite_uint64)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite_uint64' type='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='void (*)(sqlite3 *, int, int (*)(void *), void *)' function_pointer='true' name='progress_handler' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void *(*)(void *, int)' function_pointer='true' name='realloc' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='reset' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, int, void (*)(void *))' function_pointer='true' name='result_blob' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, double)' function_pointer='true' name='result_double' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, char *, int)' function_pointer='true' name='result_error' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, int)' function_pointer='true' name='result_error16' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, int)' function_pointer='true' name='result_int' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, sqlite_int64)' function_pointer='true' name='result_int64' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='sqlite_int64' type='q'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *)' function_pointer='true' name='result_null' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, char *, int, void (*)(void *))' function_pointer='true' name='result_text' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, int, void (*)(void *))' function_pointer='true' name='result_text16' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, int, void (*)(void *))' function_pointer='true' name='result_text16be' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, int, void (*)(void *))' function_pointer='true' name='result_text16le' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, sqlite3_value *)' function_pointer='true' name='result_value' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void *(*)(sqlite3 *, void (*)(void *), void *)' function_pointer='true' name='rollback_hook' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3 *, int (*)(void *, int, char *, char *, char *, char *), void *)' function_pointer='true' name='set_authorizer' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *, int, char *, char *, char *, char *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_context *, int, void *, void (*)(void *))' function_pointer='true' name='set_auxdata' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='char *(*)(int, char *, char *, ...)' function_pointer='true' name='xsnprintf' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='step' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, char *, char *, char **, char **, int *, int *, int *)' function_pointer='true' name='table_column_metadata' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char**' type='^*'/>
<arg const='true' declared_type='char**' type='^*'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(void)' function_pointer='true' name='thread_cleanup' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='total_changes' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3 *, void (*)(void *, char *), void *)' function_pointer='true' name='trace' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *, char *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, sqlite3_stmt *)' function_pointer='true' name='transfer_bindings' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3 *, void (*)(void *, int, char *, char *, sqlite_int64), void *)' function_pointer='true' name='update_hook' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *, int, char *, char *, sqlite_int64)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite_int64' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='void *(*)(sqlite3_context *)' function_pointer='true' name='user_data' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_value *)' function_pointer='true' name='value_blob' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_value *)' function_pointer='true' name='value_bytes' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_value *)' function_pointer='true' name='value_bytes16' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='double (*)(sqlite3_value *)' function_pointer='true' name='value_double' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='double' type='d'/>
</field>
<field declared_type='int (*)(sqlite3_value *)' function_pointer='true' name='value_int' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite_int64 (*)(sqlite3_value *)' function_pointer='true' name='value_int64' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='sqlite_int64' type='q'/>
</field>
<field declared_type='int (*)(sqlite3_value *)' function_pointer='true' name='value_numeric_type' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='unsigned char *(*)(sqlite3_value *)' function_pointer='true' name='value_text' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_value *)' function_pointer='true' name='value_text16' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_value *)' function_pointer='true' name='value_text16be' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field const='true' declared_type='void *(*)(sqlite3_value *)' function_pointer='true' name='value_text16le' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_value *)' function_pointer='true' name='value_type' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='char *(*)( char *, va_list)' declared_type64='char *(*)( char *, struct __va_list_tag *)' function_pointer='true' name='vmprintf' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int)' function_pointer='true' name='overload_function' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, sqlite3_stmt **, char **)' function_pointer='true' name='prepare_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, int, sqlite3_stmt **, void **)' function_pointer='true' name='prepare16_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='void**' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='clear_bindings' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, sqlite3_module *, void *, void (*)(void *))' function_pointer='true' name='create_module_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='sqlite3_module*' type='^{sqlite3_module=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, int)' function_pointer='true' name='bind_zeroblob' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_blob *)' function_pointer='true' name='blob_bytes' type='^?'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_blob *)' function_pointer='true' name='blob_close' type='^?'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, char *, char *, sqlite3_int64, int, sqlite3_blob **)' function_pointer='true' name='blob_open' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_int64' type='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_blob**' type='^^{sqlite3_blob}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_blob *, void *, int, int)' function_pointer='true' name='blob_read' type='^?'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_blob *, void *, int, int)' function_pointer='true' name='blob_write' type='^?'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, void *, int (*)(void *, int, void *, int, void *), void (*)(void *))' function_pointer='true' name='create_collation_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int (*)(void *, int, void *, int, void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, void *)' function_pointer='true' name='file_control' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_int64 (*)(int)' function_pointer='true' name='memory_highwater' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_int64' type='q'/>
</field>
<field declared_type='sqlite3_int64 (*)(void)' function_pointer='true' name='memory_used' type='^?'>
<retval declared_type='sqlite3_int64' type='q'/>
</field>
<field declared_type='sqlite3_mutex *(*)(int)' function_pointer='true' name='mutex_alloc' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
</field>
<field declared_type='void (*)(sqlite3_mutex *)' function_pointer='true' name='mutex_enter' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_mutex *)' function_pointer='true' name='mutex_free' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_mutex *)' function_pointer='true' name='mutex_leave' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_mutex *)' function_pointer='true' name='mutex_try' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( char *, sqlite3 **, int, char *)' function_pointer='true' name='open_v2' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3**' type='^^{sqlite3}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(int)' function_pointer='true' name='release_memory' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_context *)' function_pointer='true' name='result_error_nomem' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *)' function_pointer='true' name='result_error_toobig' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(int)' function_pointer='true' name='sleep' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(int)' function_pointer='true' name='soft_heap_limit' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite3_vfs *(*)( char *)' function_pointer='true' name='vfs_find' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, int)' function_pointer='true' name='vfs_register' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *)' function_pointer='true' name='vfs_unregister' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(void)' function_pointer='true' name='xthreadsafe' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_context *, int)' function_pointer='true' name='result_zeroblob' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, int)' function_pointer='true' name='result_error_code' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(int, ...)' function_pointer='true' name='test_control' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(int, void *)' function_pointer='true' name='randomness' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite3 *(*)(sqlite3_context *)' function_pointer='true' name='context_db_handle' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</field>
<field declared_type='int (*)(sqlite3 *, int)' function_pointer='true' name='extended_result_codes' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, int, int)' function_pointer='true' name='limit' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_stmt *(*)(sqlite3 *, sqlite3_stmt *)' function_pointer='true' name='next_stmt' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_stmt *)' function_pointer='true' name='sql' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(int, int *, int *, int)' function_pointer='true' name='status' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_backup *)' function_pointer='true' name='backup_finish' type='^?'>
<arg declared_type='sqlite3_backup*' type='^{sqlite3_backup=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_backup *(*)(sqlite3 *, char *, sqlite3 *, char *)' function_pointer='true' name='backup_init' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='sqlite3_backup*' type='^{sqlite3_backup=}'/>
</field>
<field declared_type='int (*)(sqlite3_backup *)' function_pointer='true' name='backup_pagecount' type='^?'>
<arg declared_type='sqlite3_backup*' type='^{sqlite3_backup=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_backup *)' function_pointer='true' name='backup_remaining' type='^?'>
<arg declared_type='sqlite3_backup*' type='^{sqlite3_backup=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_backup *, int)' function_pointer='true' name='backup_step' type='^?'>
<arg declared_type='sqlite3_backup*' type='^{sqlite3_backup=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(int)' function_pointer='true' name='compileoption_get' type='^?'>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)( char *)' function_pointer='true' name='compileoption_used' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, int, void *, void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *, int, sqlite3_value **), void (*)(sqlite3_context *), void (*)(void *))' function_pointer='true' name='create_function_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *)' function_pointer='true' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, int, ...)' function_pointer='true' name='db_config' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_mutex *(*)(sqlite3 *)' function_pointer='true' name='db_mutex' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
</field>
<field declared_type='int (*)(sqlite3 *, int, int *, int *, int)' function_pointer='true' name='db_status' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='extended_errcode' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(int, char *, ...)' function_pointer='true' name='log' type='^?'>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite3_int64 (*)(sqlite3_int64)' function_pointer='true' name='soft_heap_limit64' type='^?'>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='sqlite3_int64' type='q'/>
</field>
<field const='true' declared_type='char *(*)(void)' function_pointer='true' name='sourceid' type='^?'>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, int)' function_pointer='true' name='stmt_status' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( char *, char *, int)' function_pointer='true' name='strnicmp' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void (*)(void **, int), void *)' function_pointer='true' name='unlock_notify' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void **, int)' function_pointer='true' type='^?'>
<arg declared_type='void**' type='^^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, int)' function_pointer='true' name='wal_autocheckpoint' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *)' function_pointer='true' name='wal_checkpoint' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3 *, int (*)(void *, sqlite3 *, char *, int), void *)' function_pointer='true' name='wal_hook' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *, sqlite3 *, char *, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_blob *, sqlite3_int64)' function_pointer='true' name='blob_reopen' type='^?'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, int, ...)' function_pointer='true' name='vtab_config' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='vtab_on_conflict' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='close_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3 *, char *)' function_pointer='true' name='db_filename' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *)' function_pointer='true' name='db_readonly' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='db_release_memory' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(int)' function_pointer='true' name='errstr' type='^?'>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='stmt_busy' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *)' function_pointer='true' name='stmt_readonly' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( char *, char *)' function_pointer='true' name='stricmp' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( char *, char *, int)' function_pointer='true' name='uri_boolean' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_int64 (*)( char *, char *, sqlite3_int64)' function_pointer='true' name='uri_int64' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='sqlite3_int64' type='q'/>
</field>
<field const='true' declared_type='char *(*)( char *, char *)' function_pointer='true' name='uri_parameter' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
<field declared_type='char *(*)(int, char *, char *, va_list)' declared_type64='char *(*)(int, char *, char *, struct __va_list_tag *)' function_pointer='true' name='xvsnprintf' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='char*' type='*'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, int *, int *)' function_pointer='true' name='wal_checkpoint_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(void (*)(void))' function_pointer='true' name='auto_extension' type='^?'>
<arg declared_type='void (*)(void)' function_pointer='true' type='^?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, void *, sqlite3_uint64, void (*)(void *))' function_pointer='true' name='bind_blob64' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, char *, sqlite3_uint64, void (*)(void *), unsigned char)' function_pointer='true' name='bind_text64' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='unsigned char' type='C'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(void (*)(void))' function_pointer='true' name='cancel_auto_extension' type='^?'>
<arg declared_type='void (*)(void)' function_pointer='true' type='^?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, char *, char **)' function_pointer='true' name='load_extension' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3_uint64)' function_pointer='true' name='malloc64' type='^?'>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='sqlite3_uint64 (*)(void *)' function_pointer='true' name='msize' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='sqlite3_uint64' type='Q'/>
</field>
<field declared_type='void *(*)(void *, sqlite3_uint64)' function_pointer='true' name='realloc64' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='void (*)(void)' function_pointer='true' name='reset_auto_extension' type='^?'>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, sqlite3_uint64, void (*)(void *))' function_pointer='true' name='result_blob64' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_context *, char *, sqlite3_uint64, void (*)(void *), unsigned char)' function_pointer='true' name='result_text64' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='unsigned char' type='C'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)( char *, char *)' function_pointer='true' name='strglob' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_value *(*)( sqlite3_value *)' function_pointer='true' name='value_dup' type='^?'>
<arg const='true' declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
</field>
<field declared_type='void (*)(sqlite3_value *)' function_pointer='true' name='value_free' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_context *, sqlite3_uint64)' function_pointer='true' name='result_zeroblob64' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, sqlite3_uint64)' function_pointer='true' name='bind_zeroblob64' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='unsigned int (*)(sqlite3_value *)' function_pointer='true' name='value_subtype' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='unsigned int' type='I'/>
</field>
<field declared_type='void (*)(sqlite3_context *, unsigned int)' function_pointer='true' name='result_subtype' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(int, sqlite3_int64 *, sqlite3_int64 *, int)' function_pointer='true' name='status64' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)( char *, char *, unsigned int)' function_pointer='true' name='strlike' type='^?'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='db_cacheflush' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *)' function_pointer='true' name='system_errno' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, unsigned int, int (*)(unsigned int, void *, void *, void *), void *)' function_pointer='true' name='trace_v2' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='int (*)(unsigned int, void *, void *, void *)' function_pointer='true' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='char *(*)(sqlite3_stmt *)' function_pointer='true' name='expanded_sql' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='char*' type='*'/>
</field>
<field declared_type='void (*)(sqlite3 *, sqlite3_int64)' function_pointer='true' name='set_last_insert_rowid' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3 *, char *, int, unsigned int, sqlite3_stmt **, char **)' function_pointer='true' name='prepare_v3' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, int, unsigned int, sqlite3_stmt **, void **)' function_pointer='true' name='prepare16_v3' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='void**' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_stmt *, int, void *, char *, void (*)(void *))' function_pointer='true' name='bind_pointer' type='^?'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_context *, void *, char *, void (*)(void *))' function_pointer='true' name='result_pointer' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void *(*)(sqlite3_value *, char *)' function_pointer='true' name='value_pointer' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(sqlite3_context *)' function_pointer='true' name='vtab_nochange' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_value *)' function_pointer='true' name='value_nochange' type='^?'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</field>
<field const='true' declared_type='char *(*)(sqlite3_index_info *, int)' function_pointer='true' name='vtab_collation' type='^?'>
<arg declared_type='sqlite3_index_info*' type='^{sqlite3_index_info=i^{sqlite3_index_constraint}i^{sqlite3_index_orderby}^{sqlite3_index_constraint_usage}i*iidqiQ}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
</struct>
<struct name='sqlite3_file' type='{sqlite3_file=&quot;pMethods&quot;^{sqlite3_io_methods}}'>
<field const='true' declared_type='struct sqlite3_io_methods*' name='pMethods' type='^{sqlite3_io_methods=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</struct>
<struct name='sqlite3_index_info' type='{sqlite3_index_info=&quot;nConstraint&quot;i&quot;aConstraint&quot;^{sqlite3_index_constraint}&quot;nOrderBy&quot;i&quot;aOrderBy&quot;^{sqlite3_index_orderby}&quot;aConstraintUsage&quot;^{sqlite3_index_constraint_usage}&quot;idxNum&quot;i&quot;idxStr&quot;*&quot;needToFreeIdxStr&quot;i&quot;orderByConsumed&quot;i&quot;estimatedCost&quot;d&quot;estimatedRows&quot;q&quot;idxFlags&quot;i&quot;colUsed&quot;Q}'>
<field declared_type='int' name='nConstraint' type='i'/>
<field declared_type='struct sqlite3_index_constraint*' name='aConstraint' type='^{sqlite3_index_constraint=iCCi}'/>
<field declared_type='int' name='nOrderBy' type='i'/>
<field declared_type='struct sqlite3_index_orderby*' name='aOrderBy' type='^{sqlite3_index_orderby=iC}'/>
<field declared_type='struct sqlite3_index_constraint_usage*' name='aConstraintUsage' type='^{sqlite3_index_constraint_usage=iC}'/>
<field declared_type='int' name='idxNum' type='i'/>
<field declared_type='char*' name='idxStr' type='*'/>
<field declared_type='int' name='needToFreeIdxStr' type='i'/>
<field declared_type='int' name='orderByConsumed' type='i'/>
<field declared_type='double' name='estimatedCost' type='d'/>
<field declared_type='sqlite3_int64' name='estimatedRows' type='q'/>
<field declared_type='int' name='idxFlags' type='i'/>
<field declared_type='sqlite3_uint64' name='colUsed' type='Q'/>
</struct>
<struct name='sqlite3_io_methods' type='{sqlite3_io_methods=&quot;iVersion&quot;i&quot;xClose&quot;^?&quot;xRead&quot;^?&quot;xWrite&quot;^?&quot;xTruncate&quot;^?&quot;xSync&quot;^?&quot;xFileSize&quot;^?&quot;xLock&quot;^?&quot;xUnlock&quot;^?&quot;xCheckReservedLock&quot;^?&quot;xFileControl&quot;^?&quot;xSectorSize&quot;^?&quot;xDeviceCharacteristics&quot;^?&quot;xShmMap&quot;^?&quot;xShmLock&quot;^?&quot;xShmBarrier&quot;^?&quot;xShmUnmap&quot;^?&quot;xFetch&quot;^?&quot;xUnfetch&quot;^?}'>
<field declared_type='int' name='iVersion' type='i'/>
<field declared_type='int (*)(sqlite3_file *)' function_pointer='true' name='xClose' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, void *, int, sqlite3_int64)' function_pointer='true' name='xRead' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, void *, int, sqlite3_int64)' function_pointer='true' name='xWrite' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, sqlite3_int64)' function_pointer='true' name='xTruncate' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int)' function_pointer='true' name='xSync' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, sqlite3_int64 *)' function_pointer='true' name='xFileSize' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int)' function_pointer='true' name='xLock' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int)' function_pointer='true' name='xUnlock' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int *)' function_pointer='true' name='xCheckReservedLock' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int, void *)' function_pointer='true' name='xFileControl' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *)' function_pointer='true' name='xSectorSize' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *)' function_pointer='true' name='xDeviceCharacteristics' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int, int, int, volatile void **)' function_pointer='true' name='xShmMap' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='volatile void**' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int, int, int)' function_pointer='true' name='xShmLock' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_file *)' function_pointer='true' name='xShmBarrier' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_file *, int)' function_pointer='true' name='xShmUnmap' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, sqlite3_int64, int, void **)' function_pointer='true' name='xFetch' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void**' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_file *, sqlite3_int64, void *)' function_pointer='true' name='xUnfetch' type='^?'>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='sqlite3_mem_methods' type='{sqlite3_mem_methods=&quot;xMalloc&quot;^?&quot;xFree&quot;^?&quot;xRealloc&quot;^?&quot;xSize&quot;^?&quot;xRoundup&quot;^?&quot;xInit&quot;^?&quot;xShutdown&quot;^?&quot;pAppData&quot;^v}'>
<field declared_type='void *(*)(int)' function_pointer='true' name='xMalloc' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='void (*)(void *)' function_pointer='true' name='xFree' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void *(*)(void *, int)' function_pointer='true' name='xRealloc' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='int (*)(void *)' function_pointer='true' name='xSize' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(int)' function_pointer='true' name='xRoundup' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(void *)' function_pointer='true' name='xInit' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(void *)' function_pointer='true' name='xShutdown' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void*' name='pAppData' type='^v'/>
</struct>
<struct name='sqlite3_module' type='{sqlite3_module=&quot;iVersion&quot;i&quot;xCreate&quot;^?&quot;xConnect&quot;^?&quot;xBestIndex&quot;^?&quot;xDisconnect&quot;^?&quot;xDestroy&quot;^?&quot;xOpen&quot;^?&quot;xClose&quot;^?&quot;xFilter&quot;^?&quot;xNext&quot;^?&quot;xEof&quot;^?&quot;xColumn&quot;^?&quot;xRowid&quot;^?&quot;xUpdate&quot;^?&quot;xBegin&quot;^?&quot;xSync&quot;^?&quot;xCommit&quot;^?&quot;xRollback&quot;^?&quot;xFindFunction&quot;^?&quot;xRename&quot;^?&quot;xSavepoint&quot;^?&quot;xRelease&quot;^?&quot;xRollbackTo&quot;^?}'>
<field declared_type='int' name='iVersion' type='i'/>
<field declared_type='int (*)(sqlite3 *, void *, int, char * *, sqlite3_vtab **, char **)' function_pointer='true' name='xCreate' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char **' type='^*'/>
<arg declared_type='sqlite3_vtab**' type='^^{sqlite3_vtab}'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3 *, void *, int, char * *, sqlite3_vtab **, char **)' function_pointer='true' name='xConnect' type='^?'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char **' type='^*'/>
<arg declared_type='sqlite3_vtab**' type='^^{sqlite3_vtab}'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, sqlite3_index_info *)' function_pointer='true' name='xBestIndex' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='sqlite3_index_info*' type='^{sqlite3_index_info=i^{sqlite3_index_constraint}i^{sqlite3_index_orderby}^{sqlite3_index_constraint_usage}i*iidqiQ}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *)' function_pointer='true' name='xDisconnect' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *)' function_pointer='true' name='xDestroy' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, sqlite3_vtab_cursor **)' function_pointer='true' name='xOpen' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='sqlite3_vtab_cursor**' type='^^{sqlite3_vtab_cursor}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab_cursor *)' function_pointer='true' name='xClose' type='^?'>
<arg declared_type='sqlite3_vtab_cursor*' type='^{sqlite3_vtab_cursor=^{sqlite3_vtab}}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab_cursor *, int, char *, int, sqlite3_value **)' function_pointer='true' name='xFilter' type='^?'>
<arg declared_type='sqlite3_vtab_cursor*' type='^{sqlite3_vtab_cursor=^{sqlite3_vtab}}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab_cursor *)' function_pointer='true' name='xNext' type='^?'>
<arg declared_type='sqlite3_vtab_cursor*' type='^{sqlite3_vtab_cursor=^{sqlite3_vtab}}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab_cursor *)' function_pointer='true' name='xEof' type='^?'>
<arg declared_type='sqlite3_vtab_cursor*' type='^{sqlite3_vtab_cursor=^{sqlite3_vtab}}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab_cursor *, sqlite3_context *, int)' function_pointer='true' name='xColumn' type='^?'>
<arg declared_type='sqlite3_vtab_cursor*' type='^{sqlite3_vtab_cursor=^{sqlite3_vtab}}'/>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab_cursor *, sqlite3_int64 *)' function_pointer='true' name='xRowid' type='^?'>
<arg declared_type='sqlite3_vtab_cursor*' type='^{sqlite3_vtab_cursor=^{sqlite3_vtab}}'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *)' function_pointer='true' name='xUpdate' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *)' function_pointer='true' name='xBegin' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *)' function_pointer='true' name='xSync' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *)' function_pointer='true' name='xCommit' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *)' function_pointer='true' name='xRollback' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, int, char *, void (**)(sqlite3_context *, int, sqlite3_value **), void **)' function_pointer='true' name='xFindFunction' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void (**)(sqlite3_context *, int, sqlite3_value **)' type='^^?'/>
<arg declared_type='void**' type='^^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, char *)' function_pointer='true' name='xRename' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, int)' function_pointer='true' name='xSavepoint' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, int)' function_pointer='true' name='xRelease' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vtab *, int)' function_pointer='true' name='xRollbackTo' type='^?'>
<arg declared_type='sqlite3_vtab*' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='sqlite3_mutex_methods' type='{sqlite3_mutex_methods=&quot;xMutexInit&quot;^?&quot;xMutexEnd&quot;^?&quot;xMutexAlloc&quot;^?&quot;xMutexFree&quot;^?&quot;xMutexEnter&quot;^?&quot;xMutexTry&quot;^?&quot;xMutexLeave&quot;^?&quot;xMutexHeld&quot;^?&quot;xMutexNotheld&quot;^?}'>
<field declared_type='int (*)(void)' function_pointer='true' name='xMutexInit' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(void)' function_pointer='true' name='xMutexEnd' type='^?'>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_mutex *(*)(int)' function_pointer='true' name='xMutexAlloc' type='^?'>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
</field>
<field declared_type='void (*)(sqlite3_mutex *)' function_pointer='true' name='xMutexFree' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_mutex *)' function_pointer='true' name='xMutexEnter' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_mutex *)' function_pointer='true' name='xMutexTry' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(sqlite3_mutex *)' function_pointer='true' name='xMutexLeave' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_mutex *)' function_pointer='true' name='xMutexHeld' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_mutex *)' function_pointer='true' name='xMutexNotheld' type='^?'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</field>
</struct>
<struct name='sqlite3_pcache_methods' type='{sqlite3_pcache_methods=&quot;pArg&quot;^v&quot;xInit&quot;^?&quot;xShutdown&quot;^?&quot;xCreate&quot;^?&quot;xCachesize&quot;^?&quot;xPagecount&quot;^?&quot;xFetch&quot;^?&quot;xUnpin&quot;^?&quot;xRekey&quot;^?&quot;xTruncate&quot;^?&quot;xDestroy&quot;^?}'>
<field declared_type='void*' name='pArg' type='^v'/>
<field declared_type='int (*)(void *)' function_pointer='true' name='xInit' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(void *)' function_pointer='true' name='xShutdown' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite3_pcache *(*)(int, int)' function_pointer='true' name='xCreate' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, int)' function_pointer='true' name='xCachesize' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_pcache *)' function_pointer='true' name='xPagecount' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3_pcache *, unsigned int, int)' function_pointer='true' name='xFetch' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, void *, int)' function_pointer='true' name='xUnpin' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, void *, unsigned int, unsigned int)' function_pointer='true' name='xRekey' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, unsigned int)' function_pointer='true' name='xTruncate' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *)' function_pointer='true' name='xDestroy' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='sqlite3_pcache_methods2' type='{sqlite3_pcache_methods2=&quot;iVersion&quot;i&quot;pArg&quot;^v&quot;xInit&quot;^?&quot;xShutdown&quot;^?&quot;xCreate&quot;^?&quot;xCachesize&quot;^?&quot;xPagecount&quot;^?&quot;xFetch&quot;^?&quot;xUnpin&quot;^?&quot;xRekey&quot;^?&quot;xTruncate&quot;^?&quot;xDestroy&quot;^?&quot;xShrink&quot;^?}'>
<field declared_type='int' name='iVersion' type='i'/>
<field declared_type='void*' name='pArg' type='^v'/>
<field declared_type='int (*)(void *)' function_pointer='true' name='xInit' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void (*)(void *)' function_pointer='true' name='xShutdown' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite3_pcache *(*)(int, int, int)' function_pointer='true' name='xCreate' type='^?'>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, int)' function_pointer='true' name='xCachesize' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_pcache *)' function_pointer='true' name='xPagecount' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_pcache_page *(*)(sqlite3_pcache *, unsigned int, int)' function_pointer='true' name='xFetch' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_pcache_page*' type='^{sqlite3_pcache_page=^v^v}'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, sqlite3_pcache_page *, int)' function_pointer='true' name='xUnpin' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='sqlite3_pcache_page*' type='^{sqlite3_pcache_page=^v^v}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, sqlite3_pcache_page *, unsigned int, unsigned int)' function_pointer='true' name='xRekey' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='sqlite3_pcache_page*' type='^{sqlite3_pcache_page=^v^v}'/>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *, unsigned int)' function_pointer='true' name='xTruncate' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *)' function_pointer='true' name='xDestroy' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*)(sqlite3_pcache *)' function_pointer='true' name='xShrink' type='^?'>
<arg declared_type='sqlite3_pcache*' type='^{sqlite3_pcache=}'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='sqlite3_pcache_page' type='{sqlite3_pcache_page=&quot;pBuf&quot;^v&quot;pExtra&quot;^v}'>
<field declared_type='void*' name='pBuf' type='^v'/>
<field declared_type='void*' name='pExtra' type='^v'/>
</struct>
<struct name='sqlite3_rtree_geometry' type='{sqlite3_rtree_geometry=&quot;pContext&quot;^v&quot;nParam&quot;i&quot;aParam&quot;^d&quot;pUser&quot;^v&quot;xDelUser&quot;^?}'>
<field declared_type='void*' name='pContext' type='^v'/>
<field declared_type='int' name='nParam' type='i'/>
<field declared_type='sqlite3_rtree_dbl*' name='aParam' type='^d'/>
<field declared_type='void*' name='pUser' type='^v'/>
<field declared_type='void (*)(void *)' function_pointer='true' name='xDelUser' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
</struct>
<struct name='sqlite3_rtree_query_info' type='{sqlite3_rtree_query_info=&quot;pContext&quot;^v&quot;nParam&quot;i&quot;aParam&quot;^d&quot;pUser&quot;^v&quot;xDelUser&quot;^?&quot;aCoord&quot;^d&quot;anQueue&quot;^I&quot;nCoord&quot;i&quot;iLevel&quot;i&quot;mxLevel&quot;i&quot;iRowid&quot;q&quot;rParentScore&quot;d&quot;eParentWithin&quot;i&quot;eWithin&quot;i&quot;rScore&quot;d&quot;apSqlParam&quot;^^{sqlite3_value}}'>
<field declared_type='void*' name='pContext' type='^v'/>
<field declared_type='int' name='nParam' type='i'/>
<field declared_type='sqlite3_rtree_dbl*' name='aParam' type='^d'/>
<field declared_type='void*' name='pUser' type='^v'/>
<field declared_type='void (*)(void *)' function_pointer='true' name='xDelUser' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='sqlite3_rtree_dbl*' name='aCoord' type='^d'/>
<field declared_type='unsigned int*' name='anQueue' type='^I'/>
<field declared_type='int' name='nCoord' type='i'/>
<field declared_type='int' name='iLevel' type='i'/>
<field declared_type='int' name='mxLevel' type='i'/>
<field declared_type='sqlite3_int64' name='iRowid' type='q'/>
<field declared_type='sqlite3_rtree_dbl' name='rParentScore' type='d'/>
<field declared_type='int' name='eParentWithin' type='i'/>
<field declared_type='int' name='eWithin' type='i'/>
<field declared_type='sqlite3_rtree_dbl' name='rScore' type='d'/>
<field declared_type='sqlite3_value**' name='apSqlParam' type='^^{sqlite3_value}'/>
</struct>
<struct name='sqlite3_snapshot' type='{sqlite3_snapshot=&quot;hidden&quot;[48C]}'>
<field declared_type='unsigned char*' name='hidden' type='[48C]'/>
</struct>
<struct name='sqlite3_vfs' type='{sqlite3_vfs=&quot;iVersion&quot;i&quot;szOsFile&quot;i&quot;mxPathname&quot;i&quot;pNext&quot;^{sqlite3_vfs}&quot;zName&quot;*&quot;pAppData&quot;^v&quot;xOpen&quot;^?&quot;xDelete&quot;^?&quot;xAccess&quot;^?&quot;xFullPathname&quot;^?&quot;xDlOpen&quot;^?&quot;xDlError&quot;^?&quot;xDlSym&quot;^?&quot;xDlClose&quot;^?&quot;xRandomness&quot;^?&quot;xSleep&quot;^?&quot;xCurrentTime&quot;^?&quot;xGetLastError&quot;^?&quot;xCurrentTimeInt64&quot;^?&quot;xSetSystemCall&quot;^?&quot;xGetSystemCall&quot;^?&quot;xNextSystemCall&quot;^?}'>
<field declared_type='int' name='iVersion' type='i'/>
<field declared_type='int' name='szOsFile' type='i'/>
<field declared_type='int' name='mxPathname' type='i'/>
<field declared_type='sqlite3_vfs*' name='pNext' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<field const='true' declared_type='char*' name='zName' type='*'/>
<field declared_type='void*' name='pAppData' type='^v'/>
<field declared_type='int (*)(sqlite3_vfs *, char *, sqlite3_file *, int, int *)' function_pointer='true' name='xOpen' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_file*' type='^{sqlite3_file=^{sqlite3_io_methods}}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, char *, int)' function_pointer='true' name='xDelete' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, char *, int, int *)' function_pointer='true' name='xAccess' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, char *, int, char *)' function_pointer='true' name='xFullPathname' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='void *(*)(sqlite3_vfs *, char *)' function_pointer='true' name='xDlOpen' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void*' type='^v'/>
</field>
<field declared_type='void (*)(sqlite3_vfs *, int, char *)' function_pointer='true' name='xDlError' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='void (*(*)(sqlite3_vfs *, void *, char *))(void)' function_pointer='true' name='xDlSym' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void (*)(void)' function_pointer='true' type='^?'>
<retval declared_type='void' type='v'/>
</retval>
</field>
<field declared_type='void (*)(sqlite3_vfs *, void *)' function_pointer='true' name='xDlClose' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, int, char *)' function_pointer='true' name='xRandomness' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, int)' function_pointer='true' name='xSleep' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, double *)' function_pointer='true' name='xCurrentTime' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='double*' type='^d'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, int, char *)' function_pointer='true' name='xGetLastError' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, sqlite3_int64 *)' function_pointer='true' name='xCurrentTimeInt64' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='sqlite3_int64*' type='^q'/>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='int (*)(sqlite3_vfs *, char *, sqlite3_syscall_ptr)' function_pointer='true' name='xSetSystemCall' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_syscall_ptr' function_pointer='true' type='^?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</field>
<field declared_type='sqlite3_syscall_ptr (*)(sqlite3_vfs *, char *)' function_pointer='true' name='xGetSystemCall' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='sqlite3_syscall_ptr' function_pointer='true' type='^?'>
<retval declared_type='void' type='v'/>
</retval>
</field>
<field const='true' declared_type='char *(*)(sqlite3_vfs *, char *)' function_pointer='true' name='xNextSystemCall' type='^?'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</field>
</struct>
<struct name='sqlite3_vtab' type='{sqlite3_vtab=&quot;pModule&quot;^{sqlite3_module}&quot;nRef&quot;i&quot;zErrMsg&quot;*}'>
<field const='true' declared_type='sqlite3_module*' name='pModule' type='^{sqlite3_module=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<field declared_type='int' name='nRef' type='i'/>
<field declared_type='char*' name='zErrMsg' type='*'/>
</struct>
<struct name='sqlite3_vtab_cursor' type='{sqlite3_vtab_cursor=&quot;pVtab&quot;^{sqlite3_vtab}}'>
<field declared_type='sqlite3_vtab*' name='pVtab' type='^{sqlite3_vtab=^{sqlite3_module}i*}'/>
</struct>
<struct name='vrttxt_column_header' type='{vrttxt_column_header=&quot;name&quot;*&quot;type&quot;i}'>
<field declared_type='char*' name='name' type='*'/>
<field declared_type='int' name='type' type='i'/>
</struct>
<struct name='vrttxt_line' type='{vrttxt_line=&quot;offset&quot;q&quot;len&quot;i&quot;field_offsets&quot;[65535i]&quot;num_fields&quot;i&quot;error&quot;i}'>
<field declared_type='off_t' name='offset' type='q'/>
<field declared_type='int' name='len' type='i'/>
<field declared_type='int*' name='field_offsets' type='[65535i]'/>
<field declared_type='int' name='num_fields' type='i'/>
<field declared_type='int' name='error' type='i'/>
</struct>
<struct name='vrttxt_reader' type='{vrttxt_reader=&quot;columns&quot;[65535{vrttxt_column_header=&quot;name&quot;*&quot;type&quot;i}]&quot;text_file&quot;^{__sFILE}&quot;toUtf8&quot;^v&quot;field_separator&quot;c&quot;text_separator&quot;c&quot;decimal_separator&quot;c&quot;first_line_titles&quot;i&quot;error&quot;i&quot;first&quot;^{vrttxt_row_block}&quot;last&quot;^{vrttxt_row_block}&quot;rows&quot;^^{vrttxt_row}&quot;num_rows&quot;i&quot;line_no&quot;i&quot;max_fields&quot;i&quot;current_buf_sz&quot;i&quot;current_buf_off&quot;i&quot;line_buffer&quot;*&quot;field_buffer&quot;*&quot;field_offsets&quot;[65535i]&quot;field_lens&quot;[65535i]&quot;max_current_field&quot;i&quot;current_line_ready&quot;i}'>
<field declared_type='struct vrttxt_column_header*' name='columns' type='[65535{vrttxt_column_header=&quot;name&quot;*&quot;type&quot;i}]'/>
<field declared_type='FILE*' name='text_file' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<field declared_type='void*' name='toUtf8' type='^v'/>
<field declared_type='char' name='field_separator' type='c'/>
<field declared_type='char' name='text_separator' type='c'/>
<field declared_type='char' name='decimal_separator' type='c'/>
<field declared_type='int' name='first_line_titles' type='i'/>
<field declared_type='int' name='error' type='i'/>
<field declared_type='struct vrttxt_row_block*' name='first' type='^{vrttxt_row_block=[65535{vrttxt_row=iqii}]iii^{vrttxt_row_block}}'/>
<field declared_type='struct vrttxt_row_block*' name='last' type='^{vrttxt_row_block=[65535{vrttxt_row=iqii}]iii^{vrttxt_row_block}}'/>
<field declared_type='struct vrttxt_row**' name='rows' type='^^{vrttxt_row}'/>
<field declared_type='int' name='num_rows' type='i'/>
<field declared_type='int' name='line_no' type='i'/>
<field declared_type='int' name='max_fields' type='i'/>
<field declared_type='int' name='current_buf_sz' type='i'/>
<field declared_type='int' name='current_buf_off' type='i'/>
<field declared_type='char*' name='line_buffer' type='*'/>
<field declared_type='char*' name='field_buffer' type='*'/>
<field declared_type='int*' name='field_offsets' type='[65535i]'/>
<field declared_type='int*' name='field_lens' type='[65535i]'/>
<field declared_type='int' name='max_current_field' type='i'/>
<field declared_type='int' name='current_line_ready' type='i'/>
</struct>
<struct name='vrttxt_row' type='{vrttxt_row=&quot;line_no&quot;i&quot;offset&quot;q&quot;len&quot;i&quot;num_fields&quot;i}'>
<field declared_type='int' name='line_no' type='i'/>
<field declared_type='off_t' name='offset' type='q'/>
<field declared_type='int' name='len' type='i'/>
<field declared_type='int' name='num_fields' type='i'/>
</struct>
<struct name='vrttxt_row_block' type='{vrttxt_row_block=&quot;rows&quot;[65535{vrttxt_row=&quot;line_no&quot;i&quot;offset&quot;q&quot;len&quot;i&quot;num_fields&quot;i}]&quot;num_rows&quot;i&quot;min_line_no&quot;i&quot;max_line_no&quot;i&quot;next&quot;^{vrttxt_row_block}}'>
<field declared_type='struct vrttxt_row*' name='rows' type='[65535{vrttxt_row=&quot;line_no&quot;i&quot;offset&quot;q&quot;len&quot;i&quot;num_fields&quot;i}]'/>
<field declared_type='int' name='num_rows' type='i'/>
<field declared_type='int' name='min_line_no' type='i'/>
<field declared_type='int' name='max_line_no' type='i'/>
<field declared_type='struct vrttxt_row_block*' name='next' type='^{vrttxt_row_block=[65535{vrttxt_row=iqii}]iii^{vrttxt_row_block}}'/>
</struct>
<opaque name='Fts5Context' type='^{Fts5Context=}'/>
<opaque name='Fts5Tokenizer' type='^{Fts5Tokenizer=}'/>
<opaque name='GaiaControlPoints' type='^{opaque_control_points=}'/>
<opaque name='GaiaNetworkAccessor' type='^{gaia_network_accessor=}'/>
<opaque name='GaiaNetworkAccessorPtr' type='^{gaia_network_accessor=}'/>
<opaque name='GaiaPolynomialCoeffs' type='^{priv_polynomial_coeffs=}'/>
<opaque name='GaiaTopologyAccessor' type='^{gaia_topology_accessor=}'/>
<opaque name='GaiaTopologyAccessorPtr' type='^{gaia_topology_accessor=}'/>
<opaque name='gaiaAffineTransformMatrix' type='^{priv_affine_transform=}'/>
<opaque name='gaiaWFScatalog' type='^{gaia_wfs_catalog=}'/>
<opaque name='gaiaWFScolumn' type='^{gaia_wfs_column=}'/>
<opaque name='gaiaWFSitem' type='^{gaia_wfs_item=}'/>
<opaque name='gaiaWFSschema' type='^{gaia_wfs_schema=}'/>
<opaque name='sqlite3' type='^{sqlite3=}'/>
<opaque name='sqlite3_backup' type='^{sqlite3_backup=}'/>
<opaque name='sqlite3_blob' type='^{sqlite3_blob=}'/>
<opaque name='sqlite3_context' type='^{sqlite3_context=}'/>
<opaque name='sqlite3_mutex' type='^{sqlite3_mutex=}'/>
<opaque name='sqlite3_pcache' type='^{sqlite3_pcache=}'/>
<opaque name='sqlite3_stmt' type='^{sqlite3_stmt=}'/>
<opaque name='sqlite3_value' type='^{sqlite3_value=}'/>
<constant declared_type='int' name='gaiaWFScatalogPtr' type='i'/>
<constant declared_type='int' name='gaiaWFScolumnPtr' type='i'/>
<constant declared_type='int' name='gaiaWFSitemPtr' type='i'/>
<constant declared_type='int' name='gaiaWFSschemaPtr' type='i'/>
<constant declared_type='char*' name='sqlite3_data_directory' type='*'/>
<constant declared_type='char*' name='sqlite3_temp_directory' type='*'/>
<constant const='true' declared_type='char*' name='sqlite3_version' type='^c'/>
<string_constant name='SQLITE_SOURCE_ID' value='2018-04-10 17:39:29 4bb2294022060e61de7da5c227a69ccd846ba330e31626ebcd59a94efd148b3b'/>
<string_constant name='SQLITE_VERSION' value='3.23.1'/>
<enum name='FTS5_TOKENIZE_AUX' value='8'/>
<enum name='FTS5_TOKENIZE_DOCUMENT' value='4'/>
<enum name='FTS5_TOKENIZE_PREFIX' value='2'/>
<enum name='FTS5_TOKENIZE_QUERY' value='1'/>
<enum name='FTS5_TOKEN_COLOCATED' value='1'/>
<enum name='FULLY_WITHIN' value='2'/>
<enum name='GAIA2GEOS_ALL' value='0'/>
<enum name='GAIA2GEOS_ONLY_LINESTRINGS' value='2'/>
<enum name='GAIA2GEOS_ONLY_POINTS' value='1'/>
<enum name='GAIA2GEOS_ONLY_POLYGONS' value='3'/>
<enum name='GAIA_BIG_ENDIAN' value='0'/>
<enum name='GAIA_CCW_ORDER' value='-3'/>
<enum name='GAIA_CH' value='11'/>
<enum name='GAIA_CM' value='3'/>
<enum name='GAIA_COMPRESSED_LINESTRING' value='1000002'/>
<enum name='GAIA_COMPRESSED_LINESTRINGM' value='1002002'/>
<enum name='GAIA_COMPRESSED_LINESTRINGZ' value='1001002'/>
<enum name='GAIA_COMPRESSED_LINESTRINGZM' value='1003002'/>
<enum name='GAIA_COMPRESSED_POLYGON' value='1000003'/>
<enum name='GAIA_COMPRESSED_POLYGONM' value='1002003'/>
<enum name='GAIA_COMPRESSED_POLYGONZ' value='1001003'/>
<enum name='GAIA_COMPRESSED_POLYGONZM' value='1003003'/>
<enum name='GAIA_CW_ORDER' value='-2'/>
<enum name='GAIA_DBF_COLNAME_CASE_IGNORE' value='0'/>
<enum name='GAIA_DBF_COLNAME_LOWERCASE' value='1'/>
<enum name='GAIA_DBF_COLNAME_UPPERCASE' value='2'/>
<enum name='GAIA_DM' value='2'/>
<enum name='GAIA_DOUBLE_VALUE' value='3'/>
<enum name='GAIA_DXF_AUTO_2D_3D' value='3'/>
<enum name='GAIA_DXF_FORCE_2D' value='4'/>
<enum name='GAIA_DXF_FORCE_3D' value='5'/>
<enum name='GAIA_DXF_IMPORT_BY_LAYER' value='1'/>
<enum name='GAIA_DXF_IMPORT_MIXED' value='2'/>
<enum name='GAIA_DXF_RING_LINKED' value='7'/>
<enum name='GAIA_DXF_RING_NONE' value='6'/>
<enum name='GAIA_DXF_RING_UNLINKED' value='8'/>
<enum name='GAIA_DXF_V12' value='1000'/>
<enum name='GAIA_END_POINT' value='2'/>
<enum name='GAIA_EXIF_BLOB' value='4'/>
<enum name='GAIA_EXIF_BYTE' value='1'/>
<enum name='GAIA_EXIF_GPS_BLOB' value='5'/>
<enum name='GAIA_EXIF_LONG' value='4'/>
<enum name='GAIA_EXIF_NONE' value='0'/>
<enum name='GAIA_EXIF_RATIONAL' value='5'/>
<enum name='GAIA_EXIF_SHORT' value='2'/>
<enum name='GAIA_EXIF_SLONG' value='9'/>
<enum name='GAIA_EXIF_SRATIONAL' value='10'/>
<enum name='GAIA_EXIF_STRING' value='3'/>
<enum name='GAIA_FATH' value='10'/>
<enum name='GAIA_FILTER_MBR_CONTAINS' value='77'/>
<enum name='GAIA_FILTER_MBR_DECLARE' value='89'/>
<enum name='GAIA_FILTER_MBR_INTERSECTS' value='79'/>
<enum name='GAIA_FILTER_MBR_WITHIN' value='74'/>
<enum name='GAIA_FT' value='7'/>
<enum name='GAIA_GEOMETRYCOLLECTION' value='7'/>
<enum name='GAIA_GEOMETRYCOLLECTIONM' value='2007'/>
<enum name='GAIA_GEOMETRYCOLLECTIONZ' value='1007'/>
<enum name='GAIA_GEOMETRYCOLLECTIONZM' value='3007'/>
<enum name='GAIA_GEOMETRY_BLOB' value='8'/>
<enum name='GAIA_GEOSWKB_GEOMETRYCOLLECTIONZ' value='-2147483641'/>
<enum name='GAIA_GEOSWKB_LINESTRINGZ' value='-2147483646'/>
<enum name='GAIA_GEOSWKB_MULTILINESTRINGZ' value='-2147483643'/>
<enum name='GAIA_GEOSWKB_MULTIPOINTZ' value='-2147483644'/>
<enum name='GAIA_GEOSWKB_MULTIPOLYGONZ' value='-2147483642'/>
<enum name='GAIA_GEOSWKB_POINTZ' value='-2147483647'/>
<enum name='GAIA_GEOSWKB_POLYGONZ' value='-2147483645'/>
<enum name='GAIA_GIF_BLOB' value='1'/>
<enum name='GAIA_GPB_BLOB' value='13'/>
<enum name='GAIA_HEX_BLOB' value='0'/>
<enum name='GAIA_IN' value='6'/>
<enum name='GAIA_IND_CH' value='20'/>
<enum name='GAIA_IND_FT' value='19'/>
<enum name='GAIA_IND_YD' value='18'/>
<enum name='GAIA_INT_VALUE' value='2'/>
<enum name='GAIA_JP2_BLOB' value='11'/>
<enum name='GAIA_JPEG_BLOB' value='3'/>
<enum name='GAIA_KM' value='0'/>
<enum name='GAIA_KMI' value='5'/>
<enum name='GAIA_LINESTRING' value='2'/>
<enum name='GAIA_LINESTRINGM' value='2002'/>
<enum name='GAIA_LINESTRINGZ' value='1002'/>
<enum name='GAIA_LINESTRINGZM' value='3002'/>
<enum name='GAIA_LINK' value='12'/>
<enum name='GAIA_LITTLE_ENDIAN' value='1'/>
<enum name='GAIA_M' value='1'/>
<enum name='GAIA_MARK_END' value='254'/>
<enum name='GAIA_MARK_ENTITY' value='105'/>
<enum name='GAIA_MARK_MBR' value='124'/>
<enum name='GAIA_MARK_START' value='0'/>
<enum name='GAIA_MAX_UNIT' value='20'/>
<enum name='GAIA_MBR_CONTAINS' value='1'/>
<enum name='GAIA_MBR_DISJOINT' value='2'/>
<enum name='GAIA_MBR_EQUAL' value='3'/>
<enum name='GAIA_MBR_INTERSECTS' value='4'/>
<enum name='GAIA_MBR_OVERLAPS' value='5'/>
<enum name='GAIA_MBR_TOUCHES' value='6'/>
<enum name='GAIA_MBR_WITHIN' value='7'/>
<enum name='GAIA_MI' value='9'/>
<enum name='GAIA_MIN_UNIT' value='0'/>
<enum name='GAIA_MM' value='4'/>
<enum name='GAIA_MULTILINESTRING' value='5'/>
<enum name='GAIA_MULTILINESTRINGM' value='2005'/>
<enum name='GAIA_MULTILINESTRINGZ' value='1005'/>
<enum name='GAIA_MULTILINESTRINGZM' value='3005'/>
<enum name='GAIA_MULTIPOINT' value='4'/>
<enum name='GAIA_MULTIPOINTM' value='2004'/>
<enum name='GAIA_MULTIPOINTZ' value='1004'/>
<enum name='GAIA_MULTIPOINTZM' value='3004'/>
<enum name='GAIA_MULTIPOLYGON' value='6'/>
<enum name='GAIA_MULTIPOLYGONM' value='2006'/>
<enum name='GAIA_MULTIPOLYGONZ' value='1006'/>
<enum name='GAIA_MULTIPOLYGONZM' value='3006'/>
<enum name='GAIA_NET64_A_STAR_START' value='105'/>
<enum name='GAIA_NET64_START' value='104'/>
<enum name='GAIA_NET_ARC' value='84'/>
<enum name='GAIA_NET_A_STAR_COEFF' value='165'/>
<enum name='GAIA_NET_BLOCK' value='237'/>
<enum name='GAIA_NET_CODE' value='166'/>
<enum name='GAIA_NET_END' value='135'/>
<enum name='GAIA_NET_FROM' value='161'/>
<enum name='GAIA_NET_GEOM' value='163'/>
<enum name='GAIA_NET_HEADER' value='192'/>
<enum name='GAIA_NET_ID' value='181'/>
<enum name='GAIA_NET_NAME' value='164'/>
<enum name='GAIA_NET_NODE' value='222'/>
<enum name='GAIA_NET_START' value='103'/>
<enum name='GAIA_NET_TABLE' value='160'/>
<enum name='GAIA_NET_TO' value='162'/>
<enum name='GAIA_NULL_VALUE' value='0'/>
<enum name='GAIA_PDF_BLOB' value='7'/>
<enum name='GAIA_PNG_BLOB' value='2'/>
<enum name='GAIA_POINT' value='1'/>
<enum name='GAIA_POINTM' value='2001'/>
<enum name='GAIA_POINTN' value='3'/>
<enum name='GAIA_POINTZ' value='1001'/>
<enum name='GAIA_POINTZM' value='3001'/>
<enum name='GAIA_POLYGON' value='3'/>
<enum name='GAIA_POLYGONM' value='2003'/>
<enum name='GAIA_POLYGONZ' value='1003'/>
<enum name='GAIA_POLYGONZM' value='3003'/>
<enum name='GAIA_REVERSE_ORDER' value='-1'/>
<enum name='GAIA_SAME_ORDER' value='0'/>
<enum name='GAIA_SHP_MULTIPOINT' value='8'/>
<enum name='GAIA_SHP_MULTIPOINTM' value='28'/>
<enum name='GAIA_SHP_MULTIPOINTZ' value='18'/>
<enum name='GAIA_SHP_NULL' value='0'/>
<enum name='GAIA_SHP_POINT' value='1'/>
<enum name='GAIA_SHP_POINTM' value='21'/>
<enum name='GAIA_SHP_POINTZ' value='11'/>
<enum name='GAIA_SHP_POLYGON' value='5'/>
<enum name='GAIA_SHP_POLYGONM' value='25'/>
<enum name='GAIA_SHP_POLYGONZ' value='15'/>
<enum name='GAIA_SHP_POLYLINE' value='3'/>
<enum name='GAIA_SHP_POLYLINEM' value='23'/>
<enum name='GAIA_SHP_POLYLINEZ' value='13'/>
<enum name='GAIA_SPATIAL_INDEX_MBRCACHE' value='2'/>
<enum name='GAIA_SPATIAL_INDEX_NONE' value='0'/>
<enum name='GAIA_SPATIAL_INDEX_RTREE' value='1'/>
<enum name='GAIA_SQL_DOUBLE_QUOTE' value='1002'/>
<enum name='GAIA_SQL_SINGLE_QUOTE' value='1001'/>
<enum name='GAIA_START_POINT' value='1'/>
<enum name='GAIA_SVG_DEFAULT_MAX_PRECISION' value='15'/>
<enum name='GAIA_SVG_DEFAULT_PRECISION' value='6'/>
<enum name='GAIA_SVG_DEFAULT_RELATIVE' value='0'/>
<enum name='GAIA_TEXT_VALUE' value='1'/>
<enum name='GAIA_TIFF_BLOB' value='9'/>
<enum name='GAIA_TINYPOINT_BIG_ENDIAN' value='128'/>
<enum name='GAIA_TINYPOINT_BLOB' value='14'/>
<enum name='GAIA_TINYPOINT_LITTLE_ENDIAN' value='129'/>
<enum name='GAIA_TINYPOINT_XY' value='1'/>
<enum name='GAIA_TINYPOINT_XYM' value='3'/>
<enum name='GAIA_TINYPOINT_XYZ' value='2'/>
<enum name='GAIA_TINYPOINT_XYZM' value='4'/>
<enum name='GAIA_TYPE_LINESTRING' value='2'/>
<enum name='GAIA_TYPE_NONE' value='0'/>
<enum name='GAIA_TYPE_POINT' value='1'/>
<enum name='GAIA_TYPE_POLYGON' value='3'/>
<enum name='GAIA_UNKNOWN' value='0'/>
<enum name='GAIA_US_CH' value='16'/>
<enum name='GAIA_US_FT' value='14'/>
<enum name='GAIA_US_IN' value='13'/>
<enum name='GAIA_US_MI' value='17'/>
<enum name='GAIA_US_YD' value='15'/>
<enum name='GAIA_VECTORS_LIST_FAST' value='0'/>
<enum name='GAIA_VECTORS_LIST_OPTIMISTIC' value='1'/>
<enum name='GAIA_VECTORS_LIST_PESSIMISTIC' value='2'/>
<enum name='GAIA_VECTOR_GEOMETRY' value='0'/>
<enum name='GAIA_VECTOR_GEOMETRYCOLLECTION' value='7'/>
<enum name='GAIA_VECTOR_LINESTRING' value='2'/>
<enum name='GAIA_VECTOR_MULTILINESTRING' value='5'/>
<enum name='GAIA_VECTOR_MULTIPOINT' value='4'/>
<enum name='GAIA_VECTOR_MULTIPOLYGON' value='6'/>
<enum name='GAIA_VECTOR_POINT' value='1'/>
<enum name='GAIA_VECTOR_POLYGON' value='3'/>
<enum name='GAIA_VECTOR_TABLE' value='1'/>
<enum name='GAIA_VECTOR_UNKNOWN' value='-1'/>
<enum name='GAIA_VECTOR_VIEW' value='2'/>
<enum name='GAIA_VECTOR_VIRTUAL' value='3'/>
<enum name='GAIA_WEBP_BLOB' value='10'/>
<enum name='GAIA_XML_ABSTRACT' value='220'/>
<enum name='GAIA_XML_BLOB' value='12'/>
<enum name='GAIA_XML_COMPRESSED' value='2'/>
<enum name='GAIA_XML_CRC32' value='188'/>
<enum name='GAIA_XML_END' value='221'/>
<enum name='GAIA_XML_FILEID' value='202'/>
<enum name='GAIA_XML_GEOMETRY' value='221'/>
<enum name='GAIA_XML_GPX' value='8'/>
<enum name='GAIA_XML_HEADER' value='172'/>
<enum name='GAIA_XML_ISO_METADATA' value='128'/>
<enum name='GAIA_XML_LEGACY_HEADER' value='171'/>
<enum name='GAIA_XML_LITTLE_ENDIAN' value='1'/>
<enum name='GAIA_XML_NAME' value='222'/>
<enum name='GAIA_XML_PARENTID' value='218'/>
<enum name='GAIA_XML_PAYLOAD' value='203'/>
<enum name='GAIA_XML_SCHEMA' value='186'/>
<enum name='GAIA_XML_SLD_SE_RASTER_STYLE' value='16'/>
<enum name='GAIA_XML_SLD_SE_VECTOR_STYLE' value='64'/>
<enum name='GAIA_XML_SLD_STYLE' value='72'/>
<enum name='GAIA_XML_START' value='0'/>
<enum name='GAIA_XML_SVG' value='32'/>
<enum name='GAIA_XML_TITLE' value='219'/>
<enum name='GAIA_XML_VALIDATED' value='4'/>
<enum name='GAIA_XY' value='0'/>
<enum name='GAIA_XY_M' value='2'/>
<enum name='GAIA_XY_Z' value='1'/>
<enum name='GAIA_XY_Z_M' value='3'/>
<enum name='GAIA_YD' value='8'/>
<enum name='GAIA_ZIP_BLOB' value='6'/>
<enum name='NOT_WITHIN' value='0'/>
<enum name='PARTLY_WITHIN' value='1'/>
<enum name='SPLITE_AXIS_1' value='81'/>
<enum name='SPLITE_AXIS_2' value='82'/>
<enum name='SPLITE_AXIS_NAME' value='62'/>
<enum name='SPLITE_AXIS_ORIENTATION' value='63'/>
<enum name='SQLITE3_TEXT' value='3'/>
<enum name='SQLITE_ABORT' value='4'/>
<enum name='SQLITE_ABORT_ROLLBACK' value='516'/>
<enum name='SQLITE_ACCESS_EXISTS' value='0'/>
<enum name='SQLITE_ACCESS_READ' value='2'/>
<enum name='SQLITE_ACCESS_READWRITE' value='1'/>
<enum name='SQLITE_ALTER_TABLE' value='26'/>
<enum name='SQLITE_ANALYZE' value='28'/>
<enum name='SQLITE_ANY' value='5'/>
<enum name='SQLITE_ATTACH' value='24'/>
<enum name='SQLITE_AUTH' value='23'/>
<enum name='SQLITE_AUTH_USER' value='279'/>
<enum name='SQLITE_BLOB' value='4'/>
<enum name='SQLITE_BUSY' value='5'/>
<enum name='SQLITE_BUSY_RECOVERY' value='261'/>
<enum name='SQLITE_BUSY_SNAPSHOT' value='517'/>
<enum name='SQLITE_CANTOPEN' value='14'/>
<enum name='SQLITE_CANTOPEN_CONVPATH' value='1038'/>
<enum name='SQLITE_CANTOPEN_FULLPATH' value='782'/>
<enum name='SQLITE_CANTOPEN_ISDIR' value='526'/>
<enum name='SQLITE_CANTOPEN_NOTEMPDIR' value='270'/>
<enum name='SQLITE_CHECKPOINT_FULL' value='1'/>
<enum name='SQLITE_CHECKPOINT_PASSIVE' value='0'/>
<enum name='SQLITE_CHECKPOINT_RESTART' value='2'/>
<enum name='SQLITE_CHECKPOINT_TRUNCATE' value='3'/>
<enum name='SQLITE_CONFIG_COVERING_INDEX_SCAN' value='20'/>
<enum name='SQLITE_CONFIG_GETMALLOC' value='5'/>
<enum name='SQLITE_CONFIG_GETMUTEX' value='11'/>
<enum name='SQLITE_CONFIG_GETPCACHE' value='15'/>
<enum name='SQLITE_CONFIG_GETPCACHE2' value='19'/>
<enum name='SQLITE_CONFIG_HEAP' value='8'/>
<enum name='SQLITE_CONFIG_LOG' value='16'/>
<enum name='SQLITE_CONFIG_LOOKASIDE' value='13'/>
<enum name='SQLITE_CONFIG_MALLOC' value='4'/>
<enum name='SQLITE_CONFIG_MEMSTATUS' value='9'/>
<enum name='SQLITE_CONFIG_MMAP_SIZE' value='22'/>
<enum name='SQLITE_CONFIG_MULTITHREAD' value='2'/>
<enum name='SQLITE_CONFIG_MUTEX' value='10'/>
<enum name='SQLITE_CONFIG_PAGECACHE' value='7'/>
<enum name='SQLITE_CONFIG_PCACHE' value='14'/>
<enum name='SQLITE_CONFIG_PCACHE2' value='18'/>
<enum name='SQLITE_CONFIG_PCACHE_HDRSZ' value='24'/>
<enum name='SQLITE_CONFIG_PMASZ' value='25'/>
<enum name='SQLITE_CONFIG_SCRATCH' value='6'/>
<enum name='SQLITE_CONFIG_SERIALIZED' value='3'/>
<enum name='SQLITE_CONFIG_SINGLETHREAD' value='1'/>
<enum name='SQLITE_CONFIG_SMALL_MALLOC' value='27'/>
<enum name='SQLITE_CONFIG_SQLLOG' value='21'/>
<enum name='SQLITE_CONFIG_STMTJRNL_SPILL' value='26'/>
<enum name='SQLITE_CONFIG_URI' value='17'/>
<enum name='SQLITE_CONFIG_WIN32_HEAPSIZE' value='23'/>
<enum name='SQLITE_CONSTRAINT' value='19'/>
<enum name='SQLITE_CONSTRAINT_CHECK' value='275'/>
<enum name='SQLITE_CONSTRAINT_COMMITHOOK' value='531'/>
<enum name='SQLITE_CONSTRAINT_FOREIGNKEY' value='787'/>
<enum name='SQLITE_CONSTRAINT_FUNCTION' value='1043'/>
<enum name='SQLITE_CONSTRAINT_NOTNULL' value='1299'/>
<enum name='SQLITE_CONSTRAINT_PRIMARYKEY' value='1555'/>
<enum name='SQLITE_CONSTRAINT_ROWID' value='2579'/>
<enum name='SQLITE_CONSTRAINT_TRIGGER' value='1811'/>
<enum name='SQLITE_CONSTRAINT_UNIQUE' value='2067'/>
<enum name='SQLITE_CONSTRAINT_VTAB' value='2323'/>
<enum name='SQLITE_COPY' value='0'/>
<enum name='SQLITE_CORRUPT' value='11'/>
<enum name='SQLITE_CORRUPT_VTAB' value='267'/>
<enum name='SQLITE_CREATE_INDEX' value='1'/>
<enum name='SQLITE_CREATE_TABLE' value='2'/>
<enum name='SQLITE_CREATE_TEMP_INDEX' value='3'/>
<enum name='SQLITE_CREATE_TEMP_TABLE' value='4'/>
<enum name='SQLITE_CREATE_TEMP_TRIGGER' value='5'/>
<enum name='SQLITE_CREATE_TEMP_VIEW' value='6'/>
<enum name='SQLITE_CREATE_TRIGGER' value='7'/>
<enum name='SQLITE_CREATE_VIEW' value='8'/>
<enum name='SQLITE_CREATE_VTABLE' value='29'/>
<enum name='SQLITE_DBCONFIG_ENABLE_FKEY' value='1002'/>
<enum name='SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER' value='1004'/>
<enum name='SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION' value='1005'/>
<enum name='SQLITE_DBCONFIG_ENABLE_QPSG' value='1007'/>
<enum name='SQLITE_DBCONFIG_ENABLE_TRIGGER' value='1003'/>
<enum name='SQLITE_DBCONFIG_LOOKASIDE' value='1001'/>
<enum name='SQLITE_DBCONFIG_MAINDBNAME' value='1000'/>
<enum name='SQLITE_DBCONFIG_MAX' value='1008'/>
<enum name='SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE' value='1006'/>
<enum name='SQLITE_DBCONFIG_TRIGGER_EQP' value='1008'/>
<enum name='SQLITE_DBSTATUS_CACHE_HIT' value='7'/>
<enum name='SQLITE_DBSTATUS_CACHE_MISS' value='8'/>
<enum name='SQLITE_DBSTATUS_CACHE_SPILL' value='12'/>
<enum name='SQLITE_DBSTATUS_CACHE_USED' value='1'/>
<enum name='SQLITE_DBSTATUS_CACHE_USED_SHARED' value='11'/>
<enum name='SQLITE_DBSTATUS_CACHE_WRITE' value='9'/>
<enum name='SQLITE_DBSTATUS_DEFERRED_FKS' value='10'/>
<enum name='SQLITE_DBSTATUS_LOOKASIDE_HIT' value='4'/>
<enum name='SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL' value='6'/>
<enum name='SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE' value='5'/>
<enum name='SQLITE_DBSTATUS_LOOKASIDE_USED' value='0'/>
<enum name='SQLITE_DBSTATUS_MAX' value='12'/>
<enum name='SQLITE_DBSTATUS_SCHEMA_USED' value='2'/>
<enum name='SQLITE_DBSTATUS_STMT_USED' value='3'/>
<enum name='SQLITE_DELETE' value='9'/>
<enum name='SQLITE_DENY' value='1'/>
<enum name='SQLITE_DESERIALIZE_FREEONCLOSE' value='1'/>
<enum name='SQLITE_DESERIALIZE_READONLY' value='4'/>
<enum name='SQLITE_DESERIALIZE_RESIZEABLE' value='2'/>
<enum name='SQLITE_DETACH' value='25'/>
<enum name='SQLITE_DETERMINISTIC' value='2048'/>
<enum name='SQLITE_DONE' value='101'/>
<enum name='SQLITE_DROP_INDEX' value='10'/>
<enum name='SQLITE_DROP_TABLE' value='11'/>
<enum name='SQLITE_DROP_TEMP_INDEX' value='12'/>
<enum name='SQLITE_DROP_TEMP_TABLE' value='13'/>
<enum name='SQLITE_DROP_TEMP_TRIGGER' value='14'/>
<enum name='SQLITE_DROP_TEMP_VIEW' value='15'/>
<enum name='SQLITE_DROP_TRIGGER' value='16'/>
<enum name='SQLITE_DROP_VIEW' value='17'/>
<enum name='SQLITE_DROP_VTABLE' value='30'/>
<enum name='SQLITE_EMPTY' value='16'/>
<enum name='SQLITE_ERROR' value='1'/>
<enum name='SQLITE_ERROR_MISSING_COLLSEQ' value='257'/>
<enum name='SQLITE_ERROR_RETRY' value='513'/>
<enum name='SQLITE_FAIL' value='3'/>
<enum name='SQLITE_FCNTL_BEGIN_ATOMIC_WRITE' value='31'/>
<enum name='SQLITE_FCNTL_BUSYHANDLER' value='15'/>
<enum name='SQLITE_FCNTL_CHUNK_SIZE' value='6'/>
<enum name='SQLITE_FCNTL_COMMIT_ATOMIC_WRITE' value='32'/>
<enum name='SQLITE_FCNTL_COMMIT_PHASETWO' value='22'/>
<enum name='SQLITE_FCNTL_FILE_POINTER' value='7'/>
<enum name='SQLITE_FCNTL_GET_LOCKPROXYFILE' value='2'/>
<enum name='SQLITE_FCNTL_HAS_MOVED' value='20'/>
<enum name='SQLITE_FCNTL_JOURNAL_POINTER' value='28'/>
<enum name='SQLITE_FCNTL_LAST_ERRNO' value='4'/>
<enum name='SQLITE_FCNTL_LOCKSTATE' value='1'/>
<enum name='SQLITE_FCNTL_LOCK_TIMEOUT' value='34'/>
<enum name='SQLITE_FCNTL_MMAP_SIZE' value='18'/>
<enum name='SQLITE_FCNTL_OVERWRITE' value='11'/>
<enum name='SQLITE_FCNTL_PDB' value='30'/>
<enum name='SQLITE_FCNTL_PERSIST_WAL' value='10'/>
<enum name='SQLITE_FCNTL_POWERSAFE_OVERWRITE' value='13'/>
<enum name='SQLITE_FCNTL_PRAGMA' value='14'/>
<enum name='SQLITE_FCNTL_RBU' value='26'/>
<enum name='SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE' value='33'/>
<enum name='SQLITE_FCNTL_SET_LOCKPROXYFILE' value='3'/>
<enum name='SQLITE_FCNTL_SIZE_HINT' value='5'/>
<enum name='SQLITE_FCNTL_SYNC' value='21'/>
<enum name='SQLITE_FCNTL_SYNC_OMITTED' value='8'/>
<enum name='SQLITE_FCNTL_TEMPFILENAME' value='16'/>
<enum name='SQLITE_FCNTL_TRACE' value='19'/>
<enum name='SQLITE_FCNTL_VFSNAME' value='12'/>
<enum name='SQLITE_FCNTL_VFS_POINTER' value='27'/>
<enum name='SQLITE_FCNTL_WAL_BLOCK' value='24'/>
<enum name='SQLITE_FCNTL_WIN32_AV_RETRY' value='9'/>
<enum name='SQLITE_FCNTL_WIN32_GET_HANDLE' value='29'/>
<enum name='SQLITE_FCNTL_WIN32_SET_HANDLE' value='23'/>
<enum name='SQLITE_FCNTL_ZIPVFS' value='25'/>
<enum name='SQLITE_FLOAT' value='2'/>
<enum name='SQLITE_FORMAT' value='24'/>
<enum name='SQLITE_FULL' value='13'/>
<enum name='SQLITE_FUNCTION' value='31'/>
<enum name='SQLITE_GET_LOCKPROXYFILE' value='2'/>
<enum name='SQLITE_IGNORE' value='2'/>
<enum name='SQLITE_INDEX_CONSTRAINT_EQ' value='2'/>
<enum name='SQLITE_INDEX_CONSTRAINT_GE' value='32'/>
<enum name='SQLITE_INDEX_CONSTRAINT_GLOB' value='66'/>
<enum name='SQLITE_INDEX_CONSTRAINT_GT' value='4'/>
<enum name='SQLITE_INDEX_CONSTRAINT_IS' value='72'/>
<enum name='SQLITE_INDEX_CONSTRAINT_ISNOT' value='69'/>
<enum name='SQLITE_INDEX_CONSTRAINT_ISNOTNULL' value='70'/>
<enum name='SQLITE_INDEX_CONSTRAINT_ISNULL' value='71'/>
<enum name='SQLITE_INDEX_CONSTRAINT_LE' value='8'/>
<enum name='SQLITE_INDEX_CONSTRAINT_LIKE' value='65'/>
<enum name='SQLITE_INDEX_CONSTRAINT_LT' value='16'/>
<enum name='SQLITE_INDEX_CONSTRAINT_MATCH' value='64'/>
<enum name='SQLITE_INDEX_CONSTRAINT_NE' value='68'/>
<enum name='SQLITE_INDEX_CONSTRAINT_REGEXP' value='67'/>
<enum name='SQLITE_INDEX_SCAN_UNIQUE' value='1'/>
<enum name='SQLITE_INSERT' value='18'/>
<enum name='SQLITE_INTEGER' value='1'/>
<enum name='SQLITE_INTERNAL' value='2'/>
<enum name='SQLITE_INTERRUPT' value='9'/>
<enum name='SQLITE_IOCAP_ATOMIC' value='1'/>
<enum name='SQLITE_IOCAP_ATOMIC16K' value='64'/>
<enum name='SQLITE_IOCAP_ATOMIC1K' value='4'/>
<enum name='SQLITE_IOCAP_ATOMIC2K' value='8'/>
<enum name='SQLITE_IOCAP_ATOMIC32K' value='128'/>
<enum name='SQLITE_IOCAP_ATOMIC4K' value='16'/>
<enum name='SQLITE_IOCAP_ATOMIC512' value='2'/>
<enum name='SQLITE_IOCAP_ATOMIC64K' value='256'/>
<enum name='SQLITE_IOCAP_ATOMIC8K' value='32'/>
<enum name='SQLITE_IOCAP_BATCH_ATOMIC' value='16384'/>
<enum name='SQLITE_IOCAP_IMMUTABLE' value='8192'/>
<enum name='SQLITE_IOCAP_POWERSAFE_OVERWRITE' value='4096'/>
<enum name='SQLITE_IOCAP_SAFE_APPEND' value='512'/>
<enum name='SQLITE_IOCAP_SEQUENTIAL' value='1024'/>
<enum name='SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN' value='2048'/>
<enum name='SQLITE_IOERR' value='10'/>
<enum name='SQLITE_IOERR_ACCESS' value='3338'/>
<enum name='SQLITE_IOERR_AUTH' value='7178'/>
<enum name='SQLITE_IOERR_BEGIN_ATOMIC' value='7434'/>
<enum name='SQLITE_IOERR_BLOCKED' value='2826'/>
<enum name='SQLITE_IOERR_CHECKRESERVEDLOCK' value='3594'/>
<enum name='SQLITE_IOERR_CLOSE' value='4106'/>
<enum name='SQLITE_IOERR_COMMIT_ATOMIC' value='7690'/>
<enum name='SQLITE_IOERR_CONVPATH' value='6666'/>
<enum name='SQLITE_IOERR_DELETE' value='2570'/>
<enum name='SQLITE_IOERR_DELETE_NOENT' value='5898'/>
<enum name='SQLITE_IOERR_DIR_CLOSE' value='4362'/>
<enum name='SQLITE_IOERR_DIR_FSYNC' value='1290'/>
<enum name='SQLITE_IOERR_FSTAT' value='1802'/>
<enum name='SQLITE_IOERR_FSYNC' value='1034'/>
<enum name='SQLITE_IOERR_GETTEMPPATH' value='6410'/>
<enum name='SQLITE_IOERR_LOCK' value='3850'/>
<enum name='SQLITE_IOERR_MMAP' value='6154'/>
<enum name='SQLITE_IOERR_NOMEM' value='3082'/>
<enum name='SQLITE_IOERR_RDLOCK' value='2314'/>
<enum name='SQLITE_IOERR_READ' value='266'/>
<enum name='SQLITE_IOERR_ROLLBACK_ATOMIC' value='7946'/>
<enum name='SQLITE_IOERR_SEEK' value='5642'/>
<enum name='SQLITE_IOERR_SHMLOCK' value='5130'/>
<enum name='SQLITE_IOERR_SHMMAP' value='5386'/>
<enum name='SQLITE_IOERR_SHMOPEN' value='4618'/>
<enum name='SQLITE_IOERR_SHMSIZE' value='4874'/>
<enum name='SQLITE_IOERR_SHORT_READ' value='522'/>
<enum name='SQLITE_IOERR_TRUNCATE' value='1546'/>
<enum name='SQLITE_IOERR_UNLOCK' value='2058'/>
<enum name='SQLITE_IOERR_VNODE' value='6922'/>
<enum name='SQLITE_IOERR_WRITE' value='778'/>
<enum name='SQLITE_LAST_ERRNO' value='4'/>
<enum name='SQLITE_LIMIT_ATTACHED' value='7'/>
<enum name='SQLITE_LIMIT_COLUMN' value='2'/>
<enum name='SQLITE_LIMIT_COMPOUND_SELECT' value='4'/>
<enum name='SQLITE_LIMIT_EXPR_DEPTH' value='3'/>
<enum name='SQLITE_LIMIT_FUNCTION_ARG' value='6'/>
<enum name='SQLITE_LIMIT_LENGTH' value='0'/>
<enum name='SQLITE_LIMIT_LIKE_PATTERN_LENGTH' value='8'/>
<enum name='SQLITE_LIMIT_SQL_LENGTH' value='1'/>
<enum name='SQLITE_LIMIT_TRIGGER_DEPTH' value='10'/>
<enum name='SQLITE_LIMIT_VARIABLE_NUMBER' value='9'/>
<enum name='SQLITE_LIMIT_VDBE_OP' value='5'/>
<enum name='SQLITE_LIMIT_WORKER_THREADS' value='11'/>
<enum name='SQLITE_LOCKED' value='6'/>
<enum name='SQLITE_LOCKED_SHAREDCACHE' value='262'/>
<enum name='SQLITE_LOCK_EXCLUSIVE' value='4'/>
<enum name='SQLITE_LOCK_NONE' value='0'/>
<enum name='SQLITE_LOCK_PENDING' value='3'/>
<enum name='SQLITE_LOCK_RESERVED' value='2'/>
<enum name='SQLITE_LOCK_SHARED' value='1'/>
<enum name='SQLITE_MISMATCH' value='20'/>
<enum name='SQLITE_MISUSE' value='21'/>
<enum name='SQLITE_MUTEX_FAST' value='0'/>
<enum name='SQLITE_MUTEX_RECURSIVE' value='1'/>
<enum name='SQLITE_MUTEX_STATIC_APP1' value='8'/>
<enum name='SQLITE_MUTEX_STATIC_APP2' value='9'/>
<enum name='SQLITE_MUTEX_STATIC_APP3' value='10'/>
<enum name='SQLITE_MUTEX_STATIC_LRU' value='6'/>
<enum name='SQLITE_MUTEX_STATIC_LRU2' value='7'/>
<enum name='SQLITE_MUTEX_STATIC_MASTER' value='2'/>
<enum name='SQLITE_MUTEX_STATIC_MEM' value='3'/>
<enum name='SQLITE_MUTEX_STATIC_MEM2' value='4'/>
<enum name='SQLITE_MUTEX_STATIC_OPEN' value='4'/>
<enum name='SQLITE_MUTEX_STATIC_PMEM' value='7'/>
<enum name='SQLITE_MUTEX_STATIC_PRNG' value='5'/>
<enum name='SQLITE_MUTEX_STATIC_VFS1' value='11'/>
<enum name='SQLITE_MUTEX_STATIC_VFS2' value='12'/>
<enum name='SQLITE_MUTEX_STATIC_VFS3' value='13'/>
<enum name='SQLITE_NOLFS' value='22'/>
<enum name='SQLITE_NOMEM' value='7'/>
<enum name='SQLITE_NOTADB' value='26'/>
<enum name='SQLITE_NOTFOUND' value='12'/>
<enum name='SQLITE_NOTICE' value='27'/>
<enum name='SQLITE_NOTICE_RECOVER_ROLLBACK' value='539'/>
<enum name='SQLITE_NOTICE_RECOVER_WAL' value='283'/>
<enum name='SQLITE_NULL' value='5'/>
<enum name='SQLITE_OK' value='0'/>
<enum name='SQLITE_OK_LOAD_PERMANENTLY' value='256'/>
<enum name='SQLITE_OPEN_AUTOPROXY' value='32'/>
<enum name='SQLITE_OPEN_CREATE' value='4'/>
<enum name='SQLITE_OPEN_DELETEONCLOSE' value='8'/>
<enum name='SQLITE_OPEN_EXCLUSIVE' value='16'/>
<enum name='SQLITE_OPEN_FULLMUTEX' value='65536'/>
<enum name='SQLITE_OPEN_MAIN_DB' value='256'/>
<enum name='SQLITE_OPEN_MAIN_JOURNAL' value='2048'/>
<enum name='SQLITE_OPEN_MASTER_JOURNAL' value='16384'/>
<enum name='SQLITE_OPEN_MEMORY' value='128'/>
<enum name='SQLITE_OPEN_NOMUTEX' value='32768'/>
<enum name='SQLITE_OPEN_PRIVATECACHE' value='262144'/>
<enum name='SQLITE_OPEN_READONLY' value='1'/>
<enum name='SQLITE_OPEN_READWRITE' value='2'/>
<enum name='SQLITE_OPEN_SHAREDCACHE' value='131072'/>
<enum name='SQLITE_OPEN_SUBJOURNAL' value='8192'/>
<enum name='SQLITE_OPEN_TEMP_DB' value='512'/>
<enum name='SQLITE_OPEN_TEMP_JOURNAL' value='4096'/>
<enum name='SQLITE_OPEN_TRANSIENT_DB' value='1024'/>
<enum name='SQLITE_OPEN_URI' value='64'/>
<enum name='SQLITE_OPEN_WAL' value='524288'/>
<enum name='SQLITE_PERM' value='3'/>
<enum name='SQLITE_PRAGMA' value='19'/>
<enum name='SQLITE_PREPARE_PERSISTENT' value='1'/>
<enum name='SQLITE_PROTOCOL' value='15'/>
<enum name='SQLITE_RANGE' value='25'/>
<enum name='SQLITE_READ' value='20'/>
<enum name='SQLITE_READONLY' value='8'/>
<enum name='SQLITE_READONLY_CANTINIT' value='1288'/>
<enum name='SQLITE_READONLY_CANTLOCK' value='520'/>
<enum name='SQLITE_READONLY_DBMOVED' value='1032'/>
<enum name='SQLITE_READONLY_DIRECTORY' value='1544'/>
<enum name='SQLITE_READONLY_RECOVERY' value='264'/>
<enum name='SQLITE_READONLY_ROLLBACK' value='776'/>
<enum name='SQLITE_RECURSIVE' value='33'/>
<enum name='SQLITE_REINDEX' value='27'/>
<enum name='SQLITE_REPLACE' value='5'/>
<enum name='SQLITE_ROLLBACK' value='1'/>
<enum name='SQLITE_ROW' value='100'/>
<enum name='SQLITE_SAVEPOINT' value='32'/>
<enum name='SQLITE_SCANSTAT_EST' value='2'/>
<enum name='SQLITE_SCANSTAT_EXPLAIN' value='4'/>
<enum name='SQLITE_SCANSTAT_NAME' value='3'/>
<enum name='SQLITE_SCANSTAT_NLOOP' value='0'/>
<enum name='SQLITE_SCANSTAT_NVISIT' value='1'/>
<enum name='SQLITE_SCANSTAT_SELECTID' value='5'/>
<enum name='SQLITE_SCHEMA' value='17'/>
<enum name='SQLITE_SELECT' value='21'/>
<enum name='SQLITE_SERIALIZE_NOCOPY' value='1'/>
<enum name='SQLITE_SET_LOCKPROXYFILE' value='3'/>
<enum name='SQLITE_SHM_EXCLUSIVE' value='8'/>
<enum name='SQLITE_SHM_LOCK' value='2'/>
<enum name='SQLITE_SHM_NLOCK' value='8'/>
<enum name='SQLITE_SHM_SHARED' value='4'/>
<enum name='SQLITE_SHM_UNLOCK' value='1'/>
<enum name='SQLITE_STATUS_MALLOC_COUNT' value='9'/>
<enum name='SQLITE_STATUS_MALLOC_SIZE' value='5'/>
<enum name='SQLITE_STATUS_MEMORY_USED' value='0'/>
<enum name='SQLITE_STATUS_PAGECACHE_OVERFLOW' value='2'/>
<enum name='SQLITE_STATUS_PAGECACHE_SIZE' value='7'/>
<enum name='SQLITE_STATUS_PAGECACHE_USED' value='1'/>
<enum name='SQLITE_STATUS_PARSER_STACK' value='6'/>
<enum name='SQLITE_STATUS_SCRATCH_OVERFLOW' value='4'/>
<enum name='SQLITE_STATUS_SCRATCH_SIZE' value='8'/>
<enum name='SQLITE_STATUS_SCRATCH_USED' value='3'/>
<enum name='SQLITE_STMTSTATUS_AUTOINDEX' value='3'/>
<enum name='SQLITE_STMTSTATUS_FULLSCAN_STEP' value='1'/>
<enum name='SQLITE_STMTSTATUS_MEMUSED' value='99'/>
<enum name='SQLITE_STMTSTATUS_REPREPARE' value='5'/>
<enum name='SQLITE_STMTSTATUS_RUN' value='6'/>
<enum name='SQLITE_STMTSTATUS_SORT' value='2'/>
<enum name='SQLITE_STMTSTATUS_VM_STEP' value='4'/>
<enum name='SQLITE_SYNC_DATAONLY' value='16'/>
<enum name='SQLITE_SYNC_FULL' value='3'/>
<enum name='SQLITE_SYNC_NORMAL' value='2'/>
<enum name='SQLITE_TESTCTRL_ALWAYS' value='13'/>
<enum name='SQLITE_TESTCTRL_ASSERT' value='12'/>
<enum name='SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS' value='10'/>
<enum name='SQLITE_TESTCTRL_BITVEC_TEST' value='8'/>
<enum name='SQLITE_TESTCTRL_BYTEORDER' value='22'/>
<enum name='SQLITE_TESTCTRL_EXPLAIN_STMT' value='19'/>
<enum name='SQLITE_TESTCTRL_FAULT_INSTALL' value='9'/>
<enum name='SQLITE_TESTCTRL_FIRST' value='5'/>
<enum name='SQLITE_TESTCTRL_IMPOSTER' value='25'/>
<enum name='SQLITE_TESTCTRL_ISINIT' value='23'/>
<enum name='SQLITE_TESTCTRL_ISKEYWORD' value='16'/>
<enum name='SQLITE_TESTCTRL_LAST' value='26'/>
<enum name='SQLITE_TESTCTRL_LOCALTIME_FAULT' value='18'/>
<enum name='SQLITE_TESTCTRL_NEVER_CORRUPT' value='20'/>
<enum name='SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD' value='19'/>
<enum name='SQLITE_TESTCTRL_OPTIMIZATIONS' value='15'/>
<enum name='SQLITE_TESTCTRL_PARSER_COVERAGE' value='26'/>
<enum name='SQLITE_TESTCTRL_PENDING_BYTE' value='11'/>
<enum name='SQLITE_TESTCTRL_PRNG_RESET' value='7'/>
<enum name='SQLITE_TESTCTRL_PRNG_RESTORE' value='6'/>
<enum name='SQLITE_TESTCTRL_PRNG_SAVE' value='5'/>
<enum name='SQLITE_TESTCTRL_RESERVE' value='14'/>
<enum name='SQLITE_TESTCTRL_SCRATCHMALLOC' value='17'/>
<enum name='SQLITE_TESTCTRL_SORTER_MMAP' value='24'/>
<enum name='SQLITE_TESTCTRL_VDBE_COVERAGE' value='21'/>
<enum name='SQLITE_TEXT' value='3'/>
<enum name='SQLITE_TOOBIG' value='18'/>
<enum name='SQLITE_TRACE_CLOSE' value='8'/>
<enum name='SQLITE_TRACE_PROFILE' value='2'/>
<enum name='SQLITE_TRACE_ROW' value='4'/>
<enum name='SQLITE_TRACE_STMT' value='1'/>
<enum name='SQLITE_TRANSACTION' value='22'/>
<enum name='SQLITE_UPDATE' value='23'/>
<enum name='SQLITE_UTF16' value='4'/>
<enum name='SQLITE_UTF16BE' value='3'/>
<enum name='SQLITE_UTF16LE' value='2'/>
<enum name='SQLITE_UTF16_ALIGNED' value='8'/>
<enum name='SQLITE_UTF8' value='1'/>
<enum name='SQLITE_VERSION_NUMBER' value='3023001'/>
<enum name='SQLITE_VTAB_CONSTRAINT_SUPPORT' value='1'/>
<enum name='SQLITE_WARNING' value='28'/>
<enum name='SQLITE_WARNING_AUTOINDEX' value='284'/>
<enum name='SQLPROC_DELIM' value='135'/>
<enum name='SQLPROC_START' value='205'/>
<enum name='SQLPROC_STOP' value='220'/>
<enum name='VRTTXT_BLOCK_MAX' value='65535'/>
<enum name='VRTTXT_DOUBLE' value='3'/>
<enum name='VRTTXT_FIELDS_MAX' value='65535'/>
<enum name='VRTTXT_INTEGER' value='2'/>
<enum name='VRTTXT_NULL' value='4'/>
<enum name='VRTTXT_TEXT' value='1'/>
<function name='check_all_geometry_columns'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='output_dir' type='*'/>
<arg declared_type='int*' name='n_invalids' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='check_all_geometry_columns_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='output_dir' type='*'/>
<arg declared_type='int*' name='n_invalids' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='check_duplicated_rows'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='int*' name='dupl_count' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='check_geometry_column'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geom' type='*'/>
<arg const='true' declared_type='char*' name='report_path' type='*'/>
<arg declared_type='int*' name='n_rows' type='^i'/>
<arg declared_type='int*' name='n_invalids' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='check_geometry_column_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geom' type='*'/>
<arg const='true' declared_type='char*' name='report_path' type='*'/>
<arg declared_type='int*' name='n_rows' type='^i'/>
<arg declared_type='int*' name='n_invalids' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='disable_tiny_point'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='dump_dbf'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_dbf_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_dbf_ex2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='int' name='colname_case' type='i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_geojson'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='geom_col' type='*'/>
<arg declared_type='char*' name='outfile_path' type='*'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='int' name='option' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_geojson_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='geom_col' type='*'/>
<arg declared_type='char*' name='outfile_path' type='*'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='int' name='option' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_kml'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='geom_col' type='*'/>
<arg declared_type='char*' name='kml_path' type='*'/>
<arg declared_type='char*' name='name_col' type='*'/>
<arg declared_type='char*' name='desc_col' type='*'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_kml_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='geom_col' type='*'/>
<arg declared_type='char*' name='kml_path' type='*'/>
<arg declared_type='char*' name='name_col' type='*'/>
<arg declared_type='char*' name='desc_col' type='*'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_shapefile'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='column' type='*'/>
<arg declared_type='char*' name='shp_path' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='char*' name='geom_type' type='*'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='dump_shapefile_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='column' type='*'/>
<arg declared_type='char*' name='shp_path' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='char*' name='geom_type' type='*'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='int' name='colcase_name' type='i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='elementary_geometries'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='inTable' type='*'/>
<arg declared_type='char*' name='geometry' type='*'/>
<arg declared_type='char*' name='outTable' type='*'/>
<arg declared_type='char*' name='pKey' type='*'/>
<arg declared_type='char*' name='multiId' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='elementary_geometries_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='inTable' type='*'/>
<arg declared_type='char*' name='geometry' type='*'/>
<arg declared_type='char*' name='outTable' type='*'/>
<arg declared_type='char*' name='pKey' type='*'/>
<arg declared_type='char*' name='multiId' type='*'/>
<arg declared_type='int*' name='rows' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='elementary_geometries_ex2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='inTable' type='*'/>
<arg declared_type='char*' name='geometry' type='*'/>
<arg declared_type='char*' name='outTable' type='*'/>
<arg declared_type='char*' name='pKey' type='*'/>
<arg declared_type='char*' name='multiId' type='*'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='int' name='transaction' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='elementary_geometries_ex3'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='inTable' type='*'/>
<arg declared_type='char*' name='geometry' type='*'/>
<arg declared_type='char*' name='outTable' type='*'/>
<arg declared_type='char*' name='pKey' type='*'/>
<arg declared_type='char*' name='multiId' type='*'/>
<arg const='true' declared_type='void*' name='options' type='^v'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='int' name='transaction' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='enable_tiny_point'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_GPKG_IsAssignable'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_GeomFromGPB'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_IsValidGPB'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_ToGPB'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgAddGeometryColumn'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgAddGeometryTriggers'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgAddSpatialIndex'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgAddTileTriggers'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgCreateBaseTables'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgCreateTilesTable'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgCreateTilesZoomLevel'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgGetImageType'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgGetNormalRow'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgGetNormalZoom'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgInsertEpsgSRID'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePoint'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointM'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointMWithSRID'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointWithSRID'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointZ'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointZM'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointZMWithSRID'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='fnct_gpkgMakePointZWithSRID'>
<arg declared_type='sqlite3_context*' name='context' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='argc' type='i'/>
<arg declared_type='sqlite3_value**' name='argv' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaia3DDistance'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia3DMaxDistance'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia3dLength'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='length' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddControlPoint2D'>
<arg declared_type='GaiaControlPointsPtr' name='cp_handle' type='^{opaque_control_points=}'/>
<arg declared_type='double' name='x0' type='d'/>
<arg declared_type='double' name='y0' type='d'/>
<arg declared_type='double' name='x1' type='d'/>
<arg declared_type='double' name='y1' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddControlPoint3D'>
<arg declared_type='GaiaControlPointsPtr' name='cp_handle' type='^{opaque_control_points=}'/>
<arg declared_type='double' name='x0' type='d'/>
<arg declared_type='double' name='y0' type='d'/>
<arg declared_type='double' name='z0' type='d'/>
<arg declared_type='double' name='x1' type='d'/>
<arg declared_type='double' name='y1' type='d'/>
<arg declared_type='double' name='z1' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddDbfField'>
<arg declared_type='gaiaDbfListPtr' name='list' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<arg declared_type='char*' name='name' type='*'/>
<arg declared_type='unsigned char' name='type' type='C'/>
<arg declared_type='int' name='offset' type='i'/>
<arg declared_type='unsigned char' name='length' type='C'/>
<arg declared_type='unsigned char' name='decimals' type='C'/>
<retval declared_type='gaiaDbfFieldPtr' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</function>
<function name='gaiaAddEdgeModFace'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='start_node' type='i'/>
<arg declared_type='int' name='end_node' type='i'/>
<arg declared_type='int' name='ln' type='i'/>
<arg declared_type='int' name='skip_checks' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddEdgeNewFaces'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='start_node' type='i'/>
<arg declared_type='int' name='end_node' type='i'/>
<arg declared_type='int' name='ln' type='i'/>
<arg declared_type='int' name='skip_checks' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddInteriorRing'>
<arg declared_type='gaiaPolygonPtr' name='p' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='int' name='pos' type='i'/>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAddIsoEdge'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='start_node' type='i'/>
<arg declared_type='int' name='end_node' type='i'/>
<arg declared_type='int' name='ln' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddIsoNetNode'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddIsoNode'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='face' type='i'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<arg declared_type='int' name='skip_checks' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddLinestringToGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaAddLink'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='start_node' type='i'/>
<arg declared_type='int' name='end_node' type='i'/>
<arg declared_type='int' name='ln' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAddMeasure'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='m_start' type='d'/>
<arg declared_type='double' name='m_end' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaAddPointToGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaAddPointToGeomCollXYM'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaAddPointToGeomCollXYZ'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaAddPointToGeomCollXYZM'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaAddPolygonToGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='vert' type='i'/>
<arg declared_type='int' name='interiors' type='i'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAddRingToPolyg'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaAllocDbf'>
<retval declared_type='gaiaDbfPtr' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
</function>
<function name='gaiaAllocDbfField'>
<arg declared_type='char*' name='name' type='*'/>
<arg declared_type='unsigned char' name='type' type='C'/>
<arg declared_type='int' name='offset' type='i'/>
<arg declared_type='unsigned char' name='length' type='C'/>
<arg declared_type='unsigned char' name='decimals' type='C'/>
<retval declared_type='gaiaDbfFieldPtr' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</function>
<function name='gaiaAllocDbfList'>
<retval declared_type='gaiaDbfListPtr' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
</function>
<function name='gaiaAllocDynamicLine'>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAllocGeomColl'>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaAllocGeomCollXYM'>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaAllocGeomCollXYZ'>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaAllocGeomCollXYZM'>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaAllocLinestring'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaAllocLinestringXYM'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaAllocLinestringXYZ'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaAllocLinestringXYZM'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaAllocPoint'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAllocPointXYM'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAllocPointXYZ'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAllocPointXYZM'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAllocPolygon'>
<arg declared_type='int' name='vert' type='i'/>
<arg declared_type='int' name='holes' type='i'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocPolygonXYM'>
<arg declared_type='int' name='vert' type='i'/>
<arg declared_type='int' name='holes' type='i'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocPolygonXYZ'>
<arg declared_type='int' name='vert' type='i'/>
<arg declared_type='int' name='holes' type='i'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocPolygonXYZM'>
<arg declared_type='int' name='vert' type='i'/>
<arg declared_type='int' name='holes' type='i'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocRing'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocRingXYM'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocRingXYZ'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocRingXYZM'>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaAllocShapefile'>
<retval declared_type='gaiaShapefilePtr' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
</function>
<function name='gaiaAppendPointMToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAppendPointToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAppendPointZMToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAppendPointZToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaAppendToOutBuffer'>
<arg declared_type='gaiaOutBufferPtr' name='buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg const='true' declared_type='char*' name='text' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaAsEncodedPolyLine'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char' name='precision' type='C'/>
<arg declared_type='char**' name='encoded' type='^*'/>
<arg declared_type='int*' name='len' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaAsX3D'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg const='true' declared_type='char*' name='srs' type='*'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='int' name='options' type='i'/>
<arg const='true' declared_type='char*' name='refid' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaAzimuth'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='double' name='xa' type='d'/>
<arg declared_type='double' name='ya' type='d'/>
<arg declared_type='double' name='xb' type='d'/>
<arg declared_type='double' name='yb' type='d'/>
<arg declared_type='double*' name='azimuth' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaBoundary'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaBoundary_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaBuildCircleMbr'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaBuildFilterMbr'>
<arg declared_type='double' name='x1' type='d'/>
<arg declared_type='double' name='y1' type='d'/>
<arg declared_type='double' name='x2' type='d'/>
<arg declared_type='double' name='y2' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaBuildMbr'>
<arg declared_type='double' name='x1' type='d'/>
<arg declared_type='double' name='y1' type='d'/>
<arg declared_type='double' name='x2' type='d'/>
<arg declared_type='double' name='y2' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCastGeomCollToXY'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCastGeomCollToXYM'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCastGeomCollToXYMnoData'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='no_data' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCastGeomCollToXYZ'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCastGeomCollToXYZM'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCastGeomCollToXYZMnoData'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='z_no_data' type='d'/>
<arg declared_type='double' name='m_no_data' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCastGeomCollToXYZnoData'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='no_data' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaChangeEdgeGeom'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge_id' type='i'/>
<arg declared_type='int' name='ln' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaChangeLinkGeom'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link_id' type='i'/>
<arg declared_type='int' name='ln' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaCheckClockwise'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaCheckCounterClockwise'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaCleanSqlString'>
<arg declared_type='char*' name='value' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaClockwise'>
<arg declared_type='gaiaRingPtr' name='p' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCloneDbfEntity'>
<arg declared_type='gaiaDbfListPtr' name='org' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='gaiaDbfListPtr' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
</function>
<function name='gaiaCloneDbfField'>
<arg declared_type='gaiaDbfFieldPtr' name='org' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='gaiaDbfFieldPtr' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
</function>
<function name='gaiaCloneDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='org' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaCloneGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCloneGeomCollLinestrings'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCloneGeomCollPoints'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCloneGeomCollPolygons'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCloneGeomCollSpecial'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCloneLinestring'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaCloneLinestringSpecial'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaLinestringPtr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
</function>
<function name='gaiaClonePolygon'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaClonePolygonSpecial'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaCloneRing'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaCloneRingSpecial'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaRingPtr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaCloneValue'>
<arg declared_type='gaiaValuePtr' name='org' type='^{gaiaValueStruct=}'/>
<retval declared_type='gaiaValuePtr' type='^{gaiaValueStruct=}'/>
</function>
<function name='gaiaConcaveHull'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='factor' type='d'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='allow_holes' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaConcaveHull_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='factor' type='d'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='allow_holes' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaConvertCharset'>
<arg declared_type='char**' name='buf' type='^*'/>
<arg const='true' declared_type='char*' name='fromCs' type='*'/>
<arg const='true' declared_type='char*' name='toCs' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaConvertLength'>
<arg declared_type='double' name='value' type='d'/>
<arg declared_type='int' name='unit_from' type='i'/>
<arg declared_type='int' name='unit_to' type='i'/>
<arg declared_type='double*' name='cvt' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaConvertToDMS'>
<arg declared_type='double' name='longitude' type='d'/>
<arg declared_type='double' name='latitude' type='d'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaConvertToUTF8'>
<arg declared_type='void*' name='cvtCS' type='^v'/>
<arg const='true' declared_type='char*' name='buf' type='*'/>
<arg declared_type='int' name='len' type='i'/>
<arg declared_type='int*' name='err' type='^i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaConvexHull'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaConvexHull_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCopyLinestringCoords'>
<arg declared_type='gaiaLinestringPtr' name='dst' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='gaiaLinestringPtr' name='src' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCopyLinestringCoordsEx'>
<arg declared_type='gaiaLinestringPtr' name='dst' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='gaiaLinestringPtr' name='src' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='double' name='z_no_data' type='d'/>
<arg declared_type='double' name='m_no_data' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCopyLinestringCoordsReverse'>
<arg declared_type='gaiaLinestringPtr' name='dst' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='gaiaLinestringPtr' name='src' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCopyRingCoords'>
<arg declared_type='gaiaRingPtr' name='dst' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='gaiaRingPtr' name='src' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCopyRingCoordsEx'>
<arg declared_type='gaiaRingPtr' name='dst' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='gaiaRingPtr' name='src' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='double' name='z_no_data' type='d'/>
<arg declared_type='double' name='m_no_data' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCopyRingCoordsReverse'>
<arg declared_type='gaiaRingPtr' name='dst' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='gaiaRingPtr' name='src' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaCreateControlPoints'>
<arg declared_type='int' name='allocation_incr' type='i'/>
<arg declared_type='int' name='has3d' type='i'/>
<arg declared_type='int' name='order' type='i'/>
<arg declared_type='int' name='tps' type='i'/>
<retval declared_type='GaiaControlPointsPtr' type='^{opaque_control_points=}'/>
</function>
<function name='gaiaCreateDxfParser'>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='int' name='force_dims' type='i'/>
<arg const='true' declared_type='char*' name='prefix' type='*'/>
<arg const='true' declared_type='char*' name='selected_layer' type='*'/>
<arg declared_type='int' name='special_rings' type='i'/>
<retval declared_type='gaiaDxfParserPtr' type='^{gaia_dxf_parser=*^{gaia_dxf_layer}^{gaia_dxf_layer}^{gaia_dxf_block}^{gaia_dxf_block}ii**iiiiiiiiiiiiiiiiiiiiiiii*{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_circle=dddd}{gaia_dxf_arc=dddddd}i^{gaia_dxf_point}^{gaia_dxf_point}**^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_hatch}i}'/>
</function>
<function name='gaiaCreateDynamicLine'>
<arg declared_type='double*' name='coords' type='^d'/>
<arg declared_type='int' name='points' type='i'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaCreateMD5Checksum'>
<retval declared_type='void*' type='^v'/>
</function>
<function name='gaiaCreateMetaCatalogTables'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaCreatePolygon'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaCreatePolynomialCoeffs'>
<arg declared_type='GaiaControlPointsPtr' name='cp_handle' type='^{opaque_control_points=}'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaCreateSequence'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='seq_name' type='*'/>
<retval declared_type='gaiaSequencePtr' type='^{gaia_sequence=*i^{gaia_sequence}}'/>
</function>
<function name='gaiaCreateUTF8Converter'>
<arg const='true' declared_type='char*' name='fromCS' type='*'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='gaiaCriticalPointFromGEOSmsg'>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCriticalPointFromGEOSmsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaCutter'>
<arg declared_type='sqlite3*' name='db_handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='in_db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='input_table' type='*'/>
<arg const='true' declared_type='char*' name='input_geom' type='*'/>
<arg const='true' declared_type='char*' name='blade_db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='blade_table' type='*'/>
<arg const='true' declared_type='char*' name='blade_geom' type='*'/>
<arg const='true' declared_type='char*' name='output_table' type='*'/>
<arg declared_type='int' name='transaction' type='i'/>
<arg declared_type='int' name='ram_tmp_store' type='i'/>
<arg declared_type='char**' name='message' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDecodeURL'>
<arg const='true' declared_type='char*' name='encoded' type='*'/>
<arg const='true' declared_type='char*' name='out_charset' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaDegsToRads'>
<arg declared_type='double' name='degs' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaDelaunayTriangulation'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='only_edges' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaDelaunayTriangulation_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='only_edges' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaDequotedSql'>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaDestroyDxfParser'>
<arg declared_type='gaiaDxfParserPtr' name='parser' type='^{gaia_dxf_parser=*^{gaia_dxf_layer}^{gaia_dxf_layer}^{gaia_dxf_block}^{gaia_dxf_block}ii**iiiiiiiiiiiiiiiiiiiiiiii*{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_circle=dddd}{gaia_dxf_arc=dddddd}i^{gaia_dxf_point}^{gaia_dxf_point}**^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_hatch}i}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaDimension'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDirNameFromPath'>
<arg const='true' declared_type='char*' name='path' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaDissolvePoints'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaDissolveSegments'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaDoubleQuotedSql'>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaDrapeLine'>
<arg declared_type='int*' name='db_handle' type='^i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaDrapeLineExceptions'>
<arg declared_type='int*' name='db_handle' type='^i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='interpolated' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaDropTable'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDropTableEx'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDropTableEx2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg declared_type='int' name='transaction' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDropTableEx3'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg declared_type='int' name='transaction' type='i'/>
<arg declared_type='char**' name='error_message' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteEndSection'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteEntities'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteFooter'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteGeometry'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg const='true' declared_type='char*' name='layer_name' type='*'/>
<arg const='true' declared_type='char*' name='label' type='*'/>
<arg declared_type='double' name='text_height' type='d'/>
<arg declared_type='double' name='text_rotation' type='d'/>
<arg declared_type='gaiaGeomCollPtr' name='geometry' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteHeader'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg declared_type='double' name='minx' type='d'/>
<arg declared_type='double' name='miny' type='d'/>
<arg declared_type='double' name='minz' type='d'/>
<arg declared_type='double' name='maxx' type='d'/>
<arg declared_type='double' name='maxy' type='d'/>
<arg declared_type='double' name='maxz' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteLayer'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg const='true' declared_type='char*' name='layer_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteLine'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg const='true' declared_type='char*' name='layer_name' type='*'/>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWritePoint'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg const='true' declared_type='char*' name='layer_name' type='*'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteRing'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg const='true' declared_type='char*' name='layer_name' type='*'/>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteTables'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriteText'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg const='true' declared_type='char*' name='layer_name' type='*'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg const='true' declared_type='char*' name='label' type='*'/>
<arg declared_type='double' name='text_height' type='d'/>
<arg declared_type='double' name='angle' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDxfWriterInit'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg declared_type='FILE*' name='out' type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='int' name='version' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaDynamicLineDeletePoint'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='pt' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaDynamicLineFindByCoords'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineFindByPos'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='int' name='pos' type='i'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineInsertAfter'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='pt' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineInsertBefore'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='pt' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineJoinAfter'>
<arg declared_type='gaiaDynamicLinePtr' name='org' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='point' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaDynamicLinePtr' name='toJoin' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineJoinBefore'>
<arg declared_type='gaiaDynamicLinePtr' name='org' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='point' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaDynamicLinePtr' name='toJoin' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineSplitAfter'>
<arg declared_type='gaiaDynamicLinePtr' name='org' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='point' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaDynamicLineSplitBefore'>
<arg declared_type='gaiaDynamicLinePtr' name='org' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='gaiaPointPtr' name='point' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaEllipseParams'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg declared_type='double*' name='a' type='^d'/>
<arg declared_type='double*' name='b' type='^d'/>
<arg declared_type='double*' name='rf' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaEllipsoidAzimuth'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='double' name='xa' type='d'/>
<arg declared_type='double' name='ya' type='d'/>
<arg declared_type='double' name='xb' type='d'/>
<arg declared_type='double' name='yb' type='d'/>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double*' name='azimuth' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaEncodeURL'>
<arg const='true' declared_type='char*' name='url' type='*'/>
<arg const='true' declared_type='char*' name='in_charset' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaEndianArch'>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaEnsureClosedRings'>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaEwkbGetLinestring'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='offset' type='i'/>
<arg declared_type='int' name='blob_size' type='i'/>
<arg declared_type='int' name='endian' type='i'/>
<arg declared_type='int' name='endian_arch' type='i'/>
<arg declared_type='int' name='dims' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaEwkbGetMultiGeometry'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='offset' type='i'/>
<arg declared_type='int' name='blob_size' type='i'/>
<arg declared_type='int' name='endian' type='i'/>
<arg declared_type='int' name='endian_arch' type='i'/>
<arg declared_type='int' name='dims' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaEwkbGetPoint'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='offset' type='i'/>
<arg declared_type='int' name='blob_size' type='i'/>
<arg declared_type='int' name='endian' type='i'/>
<arg declared_type='int' name='endian_arch' type='i'/>
<arg declared_type='int' name='dims' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaEwkbGetPolygon'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='offset' type='i'/>
<arg declared_type='int' name='blob_size' type='i'/>
<arg declared_type='int' name='endian' type='i'/>
<arg declared_type='int' name='endian_arch' type='i'/>
<arg declared_type='int' name='dims' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaExifTagGetByteValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='unsigned char' type='C'/>
</function>
<function name='gaiaExifTagGetDoubleValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaExifTagGetFloatValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='float' type='f'/>
</function>
<function name='gaiaExifTagGetHumanReadable'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg declared_type='char*' name='str' type='*'/>
<arg declared_type='int' name='len' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExifTagGetId'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='gaiaExifTagGetLongValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='gaiaExifTagGetName'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg declared_type='char*' name='tag_name' type='*'/>
<arg declared_type='int' name='len' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExifTagGetNumValues'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='gaiaExifTagGetRational1Value'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='gaiaExifTagGetRational2Value'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='gaiaExifTagGetRationalValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaExifTagGetShortValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='gaiaExifTagGetSignedLongValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaExifTagGetSignedRational1Value'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaExifTagGetSignedRational2Value'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaExifTagGetSignedRationalValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaExifTagGetSignedShortValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='ind' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='short' type='s'/>
</function>
<function name='gaiaExifTagGetStringValue'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<arg declared_type='char*' name='str' type='*'/>
<arg declared_type='int' name='len' type='i'/>
<arg declared_type='int*' name='ok' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExifTagGetValueType'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<retval declared_type='unsigned short' type='S'/>
</function>
<function name='gaiaExifTagsFree'>
<arg declared_type='gaiaExifTagListPtr' name='tag_list' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExport16'>
<arg declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='short' name='value' type='s'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExport32'>
<arg declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='value' type='i'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExport64'>
<arg declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='double' name='value' type='d'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExportDxf'>
<arg declared_type='gaiaDxfWriterPtr' name='dxf' type='^{gaia_dxf_write=^{__sFILE}iiii}'/>
<arg declared_type='sqlite3*' name='db_handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='sql' type='*'/>
<arg const='true' declared_type='char*' name='layer_col_name' type='*'/>
<arg const='true' declared_type='char*' name='geom_col_name' type='*'/>
<arg const='true' declared_type='char*' name='label_col_name' type='*'/>
<arg const='true' declared_type='char*' name='text_height_col_name' type='*'/>
<arg const='true' declared_type='char*' name='text_rotation_col_name' type='*'/>
<arg declared_type='gaiaGeomCollPtr' name='geom_filter' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaExportF32'>
<arg declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='float' name='value' type='f'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExportI64'>
<arg declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='value' type='i'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExportU32'>
<arg declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='unsigned int' name='value' type='I'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaExtractLinestringsFromGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaExtractPointsFromGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaExtractPolygonsFromGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFileExtFromPath'>
<arg const='true' declared_type='char*' name='path' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaFileNameFromPath'>
<arg const='true' declared_type='char*' name='path' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaFinalizeMD5Checksum'>
<arg declared_type='void*' name='md5' type='^v'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaFindSequence'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='seq_name' type='*'/>
<retval declared_type='gaiaSequencePtr' type='^{gaia_sequence=*i^{gaia_sequence}}'/>
</function>
<function name='gaiaFlushDbfHeader'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFlushShpHeaders'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFree'>
<arg declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeControlPoints'>
<arg declared_type='GaiaControlPointsPtr' name='cp_handle' type='^{opaque_control_points=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeDbf'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeDbfField'>
<arg declared_type='gaiaDbfFieldPtr' name='p' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeDbfList'>
<arg declared_type='gaiaDbfListPtr' name='list' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeLinestring'>
<arg declared_type='gaiaLinestringPtr' name='ptr' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeMD5Checksum'>
<arg declared_type='void*' name='md5' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreePoint'>
<arg declared_type='gaiaPointPtr' name='ptr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreePolygon'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeRing'>
<arg declared_type='gaiaRingPtr' name='ptr' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeShapefile'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeUTF8Converter'>
<arg declared_type='void*' name='cvtCS' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeValue'>
<arg declared_type='gaiaValuePtr' name='p' type='^{gaiaValueStruct=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFreeVectorLayersList'>
<arg declared_type='gaiaVectorLayersListPtr' name='ptr' type='^{gaiaVectorLayersListStr=^{gaiaVectorLayerItem}^{gaiaVectorLayerItem}^{gaiaVectorLayerItem}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaFromEWKB'>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromFgf'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeoPackageGeometryBlob'>
<arg const='true' declared_type='unsigned char*' name='gpb' type='*'/>
<arg declared_type='unsigned int' name='gpb_len' type='I'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XY'>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XYM'>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XYM_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XYZ'>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XYZM'>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XYZM_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XYZ_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromGeos_XY_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='void*' name='geos' type='^v'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromSpatiaLiteBlobMbr'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromSpatiaLiteBlobWkb'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromSpatiaLiteBlobWkbEx'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<arg declared_type='int' name='gpkg_mode' type='i'/>
<arg declared_type='int' name='gpkg_amphibious' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromTWKB'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='twkb' type='*'/>
<arg declared_type='int' name='twkb_size' type='i'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFromWkb'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaFullFileNameFromPath'>
<arg const='true' declared_type='char*' name='path' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaGPKG2Spatialite'>
<arg declared_type='sqlite3*' name='handle_in' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='gpkg_in_path' type='*'/>
<arg declared_type='sqlite3*' name='handle_out' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='splite_out_path' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeoHash'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaGeodesicArea'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='int' name='use_ellipsoid' type='i'/>
<arg declared_type='double*' name='area' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeodesicDistance'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double' name='rf' type='d'/>
<arg declared_type='double' name='lat1' type='d'/>
<arg declared_type='double' name='lon1' type='d'/>
<arg declared_type='double' name='lat2' type='d'/>
<arg declared_type='double' name='lon2' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaGeodesicTotalLength'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double' name='rf' type='d'/>
<arg declared_type='int' name='dims' type='i'/>
<arg declared_type='double*' name='coords' type='^d'/>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaGeomCollArea'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='area' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollArea_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='area' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollBuffer'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='points' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeomCollBuffer_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='points' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeomCollCentroid'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCentroid_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollContains'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollContains_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCoveredBy'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCoveredBy_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCovers'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCovers_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCrosses'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollCrosses_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollDisjoint'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollDisjoint_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollDistance'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollDistance_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollEquals'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollEquals_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollIntersects'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollIntersects_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollLength'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='length' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollLengthOrPerimeter'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='perimeter' type='i'/>
<arg declared_type='double*' name='length' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollLengthOrPerimeter_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='perimeter' type='i'/>
<arg declared_type='double*' name='length' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollLength_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='length' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollOverlaps'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollOverlaps_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedContains'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedCoveredBy'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedCovers'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedCrosses'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedDisjoint'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedIntersects'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedOverlaps'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedTouches'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollPreparedWithin'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob1' type='*'/>
<arg declared_type='int' name='size1' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char*' name='blob2' type='*'/>
<arg declared_type='int' name='size2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollRelate'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg const='true' declared_type='char*' name='pattern' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollRelateBoundaryNodeRule'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaGeomCollRelateBoundaryNodeRule_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaGeomCollRelate_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg const='true' declared_type='char*' name='pattern' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollSimplify'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeomCollSimplifyPreserveTopology'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeomCollSimplifyPreserveTopology_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeomCollSimplify_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeomCollTouches'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollTouches_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollWithin'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeomCollWithin_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeometryAliasType'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeometryDifference'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometryDifference_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometryIntersection'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometryIntersection_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometrySymDifference'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometrySymDifference_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometryType'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGeometryUnion'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGeometryUnion_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGetEdgeByPoint'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetEdgeSeed'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetEnvelopeFromGPB'>
<arg const='true' declared_type='unsigned char*' name='gpb' type='*'/>
<arg declared_type='int' name='gpb_len' type='i'/>
<arg declared_type='double*' name='min_x' type='^d'/>
<arg declared_type='double*' name='max_x' type='^d'/>
<arg declared_type='double*' name='min_y' type='^d'/>
<arg declared_type='double*' name='max_y' type='^d'/>
<arg declared_type='int*' name='has_z' type='^i'/>
<arg declared_type='double*' name='min_z' type='^d'/>
<arg declared_type='double*' name='max_z' type='^d'/>
<arg declared_type='int*' name='has_m' type='^i'/>
<arg declared_type='double*' name='min_m' type='^d'/>
<arg declared_type='double*' name='max_m' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetExifGpsTagById'>
<arg const='true' declared_type='gaiaExifTagListPtr' name='tag_list' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='unsigned short' name='tag_id' type='S'/>
<retval declared_type='gaiaExifTagPtr' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
</function>
<function name='gaiaGetExifTagById'>
<arg const='true' declared_type='gaiaExifTagListPtr' name='tag_list' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='unsigned short' name='tag_id' type='S'/>
<retval declared_type='gaiaExifTagPtr' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
</function>
<function name='gaiaGetExifTagByName'>
<arg const='true' declared_type='gaiaExifTagListPtr' name='tag_list' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='char*' name='tag_name' type='*'/>
<retval declared_type='gaiaExifTagPtr' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
</function>
<function name='gaiaGetExifTagByPos'>
<arg declared_type='gaiaExifTagListPtr' name='tag_list' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
<arg const='true' declared_type='int' name='pos' type='i'/>
<retval declared_type='gaiaExifTagPtr' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
</function>
<function name='gaiaGetExifTags'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='gaiaExifTagListPtr' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
</function>
<function name='gaiaGetExifTagsCount'>
<arg declared_type='gaiaExifTagListPtr' name='tag_list' type='^{gaiaExifTagListStruct=^{gaiaExifTagStruct}^{gaiaExifTagStruct}i^^{gaiaExifTagStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetFaceByPoint'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetFaceEdges'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='face' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetFaceGeometry'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='face' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetFaceSeed'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='face' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetGeometryTypeFromGPB'>
<arg const='true' declared_type='unsigned char*' name='gpb' type='*'/>
<arg declared_type='int' name='gpb_len' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGeosAuxErrorMsg'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGeosAuxErrorMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGeosErrorMsg'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGeosErrorMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGeosWarningMsg'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGeosWarningMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetGpsCoords'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='double*' name='longitude' type='^d'/>
<arg declared_type='double*' name='latitude' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetGpsLatLong'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='char*' name='latlong' type='*'/>
<arg declared_type='int' name='ll_size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetLayerExtent'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geometry' type='*'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaGetLinkByPoint'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetLinkSeed'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetLocaleCharset'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetMbrMaxX'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<arg declared_type='double*' name='maxx' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetMbrMaxY'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<arg declared_type='double*' name='maxy' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetMbrMinX'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<arg declared_type='double*' name='minx' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetMbrMinY'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='unsigned int' name='size' type='I'/>
<arg declared_type='double*' name='miny' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetNetNodeByPoint'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetNetwork'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='network_name' type='*'/>
<retval declared_type='GaiaNetworkAccessorPtr' type='^{gaia_network_accessor=}'/>
</function>
<function name='gaiaGetNodeByPoint'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetPointOnSurface'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetPointOnSurface_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetRtTopoErrorMsg'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetRtTopoWarningMsg'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaGetSridFromGPB'>
<arg const='true' declared_type='unsigned char*' name='gpb' type='*'/>
<arg declared_type='int' name='gpb_len' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaGetTopology'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<retval declared_type='GaiaTopologyAccessorPtr' type='^{gaia_topology_accessor=}'/>
</function>
<function name='gaiaGetVectorLayersList'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geometry' type='*'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaVectorLayersListPtr' type='^{gaiaVectorLayersListStr=^{gaiaVectorLayerItem}^{gaiaVectorLayerItem}^{gaiaVectorLayerItem}}'/>
</function>
<function name='gaiaGreatCircleDistance'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double' name='lat1' type='d'/>
<arg declared_type='double' name='lon1' type='d'/>
<arg declared_type='double' name='lat2' type='d'/>
<arg declared_type='double' name='lon2' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaGreatCircleTotalLength'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='int' name='dims' type='i'/>
<arg declared_type='double*' name='coords' type='^d'/>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaGuessBlobType'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaHausdorffDistance'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaHausdorffDistance_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaHexagonalGrid'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='size' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaHexagonalGrid_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='size' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaIllegalSqlName'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaImport16'>
<arg const='true' declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='short' type='s'/>
</function>
<function name='gaiaImport32'>
<arg const='true' declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaImport64'>
<arg const='true' declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaImportF32'>
<arg const='true' declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='float' type='f'/>
</function>
<function name='gaiaImportI64'>
<arg const='true' declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaImportU32'>
<arg const='true' declared_type='unsigned char*' name='p' type='*'/>
<arg declared_type='int' name='little_endian' type='i'/>
<arg declared_type='int' name='little_endian_arch' type='i'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='gaiaInsertInteriorRing'>
<arg declared_type='gaiaPolygonPtr' name='p' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaInsertIntoSqlLog'>
<arg declared_type='int*' name='sqlite' type='^i'/>
<arg const='true' declared_type='char*' name='user_agent' type='*'/>
<arg const='true' declared_type='char*' name='utf8Sql' type='*'/>
<arg declared_type='int*' name='sqllog_pk' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaInsertLinestringInGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaInsertPolygonInGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='p' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='gaiaPolygonPtr' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
</function>
<function name='gaiaInterpolatePoint'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='line' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='point' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='m_value' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIntersect'>
<arg declared_type='double*' name='x0' type='^d'/>
<arg declared_type='double*' name='y0' type='^d'/>
<arg declared_type='double' name='x1' type='d'/>
<arg declared_type='double' name='y1' type='d'/>
<arg declared_type='double' name='x2' type='d'/>
<arg declared_type='double' name='y2' type='d'/>
<arg declared_type='double' name='x3' type='d'/>
<arg declared_type='double' name='y3' type='d'/>
<arg declared_type='double' name='x4' type='d'/>
<arg declared_type='double' name='y4' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIntersectionMatrixPatternMatch'>
<arg const='true' declared_type='char*' name='matrix' type='*'/>
<arg const='true' declared_type='char*' name='pattern' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIntersectionMatrixPatternMatch_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='matrix' type='*'/>
<arg const='true' declared_type='char*' name='pattern' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsClosed'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsClosedGeom'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsClosedGeom_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsCompressedXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsEmpty'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsEmptyGPB'>
<arg const='true' declared_type='unsigned char*' name='gpb' type='*'/>
<arg declared_type='int' name='gpb_len' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsExifGpsTag'>
<arg const='true' declared_type='gaiaExifTagPtr' name='tag' type='^{gaiaExifTagStruct=cSSS[4C]**^S^I^I^I^s^i^i^i^f^d^{gaiaExifTagStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsGpxXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsIsoMetadataXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsNotClosedGeomColl'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsNotClosedGeomColl_r'>
<arg const='true' declared_type='void*' name='p_data' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsNotClosedRing'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsNotClosedRing_r'>
<arg const='true' declared_type='void*' name='p_data' type='^v'/>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsPointOnPolygonSurface'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsPointOnRingSurface'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='double' name='pt_x' type='d'/>
<arg declared_type='double' name='pt_y' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsReservedSqlName'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsReservedSqliteName'>
<arg const='true' declared_type='char*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsRing'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsRing_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSchemaValidatedXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSimple'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSimple_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSldSeRasterStyleXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSldSeVectorStyleXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSldStyleXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsSvgXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsToxic'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsToxic_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValid'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValidDbfList'>
<arg declared_type='gaiaDbfListPtr' name='list' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValidDetail'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaIsValidDetailEx'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='esri_flag' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaIsValidDetailEx_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='esri_flag' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaIsValidDetail_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaIsValidGPB'>
<arg const='true' declared_type='unsigned char*' name='gpb' type='*'/>
<arg declared_type='int' name='gpb_len' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValidReason'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaIsValidReason_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaIsValidTrajectory'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValidXPathExpression'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='xpath_expr' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValidXmlBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaIsValid_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaLastUsedSequence'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='int*' name='last_value' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaLineFromEncodedPolyline'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='encoded' type='*'/>
<arg declared_type='unsigned char' name='precision' type='C'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineGetPoint'>
<arg declared_type='gaiaLinestringPtr' name='ln' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='int' name='v' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<arg declared_type='double*' name='m' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaLineInterpolateEquidistantPoints'>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='distance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineInterpolateEquidistantPoints_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='distance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineInterpolatePoint'>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='fraction' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineInterpolatePoint_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='fraction' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineLocatePoint'>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='pt_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaLineLocatePoint_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='pt_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaLineMerge'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineMerge_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineSetPoint'>
<arg declared_type='gaiaLinestringPtr' name='ln' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='int' name='v' type='i'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaLineSubstring'>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='start_fraction' type='d'/>
<arg declared_type='double' name='end_fraction' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLineSubstring_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='ln_geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='start_fraction' type='d'/>
<arg declared_type='double' name='end_fraction' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLinearize'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='force_multi' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLinesCutAtNodes'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaLinestringEquals'>
<arg declared_type='gaiaLinestringPtr' name='line1' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='gaiaLinestringPtr' name='line2' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaLoadFromDxfParser'>
<arg declared_type='sqlite3*' name='db_handle' type='^{sqlite3=}'/>
<arg declared_type='gaiaDxfParserPtr' name='parser' type='^{gaia_dxf_parser=*^{gaia_dxf_layer}^{gaia_dxf_layer}^{gaia_dxf_block}^{gaia_dxf_block}ii**iiiiiiiiiiiiiiiiiiiiiiii*{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_circle=dddd}{gaia_dxf_arc=dddddd}i^{gaia_dxf_point}^{gaia_dxf_point}**^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_hatch}i}'/>
<arg declared_type='int' name='mode' type='i'/>
<arg declared_type='int' name='append' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaLocateBetweenMeasures'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='m_start' type='d'/>
<arg declared_type='double' name='m_end' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMRangeGeometry'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMRangeLinestring'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMRangePolygon'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMRangeRing'>
<arg declared_type='gaiaRingPtr' name='rng' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakeArc'>
<arg declared_type='double' name='center_x' type='d'/>
<arg declared_type='double' name='center_y' type='d'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='double' name='start' type='d'/>
<arg declared_type='double' name='stop' type='d'/>
<arg declared_type='double' name='step' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMakeCircle'>
<arg declared_type='double' name='center_x' type='d'/>
<arg declared_type='double' name='center_y' type='d'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='double' name='step' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMakeEllipse'>
<arg declared_type='double' name='center_x' type='d'/>
<arg declared_type='double' name='center_y' type='d'/>
<arg declared_type='double' name='x_axis' type='d'/>
<arg declared_type='double' name='y_axis' type='d'/>
<arg declared_type='double' name='step' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMakeEllipticArc'>
<arg declared_type='double' name='center_x' type='d'/>
<arg declared_type='double' name='center_y' type='d'/>
<arg declared_type='double' name='x_axis' type='d'/>
<arg declared_type='double' name='y_axis' type='d'/>
<arg declared_type='double' name='start' type='d'/>
<arg declared_type='double' name='stop' type='d'/>
<arg declared_type='double' name='step' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMakeLine'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePoint'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointEx'>
<arg declared_type='int' name='tiny_point' type='i'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointM'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointMEx'>
<arg declared_type='int' name='tiny_point' type='i'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointZ'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointZEx'>
<arg declared_type='int' name='tiny_point' type='i'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointZM'>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePointZMEx'>
<arg declared_type='int' name='tiny_point' type='i'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMakePolygon'>
<arg declared_type='gaiaGeomCollPtr' name='exterior' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='interiors' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMakeValid'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMakeValidDiscarded'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMaxDistance'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='dist' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrGeometry'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMbrLinestring'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMbrPolygon'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMbrRing'>
<arg declared_type='gaiaRingPtr' name='rng' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaMbrsContains'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrsDisjoint'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrsEqual'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrsIntersects'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrsOverlaps'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrsTouches'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMbrsWithin'>
<arg declared_type='gaiaGeomCollPtr' name='mbr1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='mbr2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMeasureArea'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaMeasureLength'>
<arg declared_type='int' name='dims' type='i'/>
<arg declared_type='double*' name='coords' type='^d'/>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaMergeGeometries'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMergeGeometries_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaMinDistance'>
<arg declared_type='double' name='x0' type='d'/>
<arg declared_type='double' name='y0' type='d'/>
<arg declared_type='int' name='dims' type='i'/>
<arg declared_type='double*' name='coords' type='^d'/>
<arg declared_type='int' name='vert' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaModEdgeHeal'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge_id1' type='i'/>
<arg declared_type='int' name='edge_id2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaModEdgeSplit'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge' type='i'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='int' name='skip_checks' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaModGeoLinkSplit'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaModLinkHeal'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<arg declared_type='int' name='anotherlink' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaModLogLinkSplit'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMoveIsoNetNode'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='node' type='i'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaMoveIsoNode'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='node' type='i'/>
<arg declared_type='int' name='pt' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNetworkCreate'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='char*' name='network_name' type='*'/>
<arg declared_type='int' name='spatial' type='i'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='int' name='has_z' type='i'/>
<arg declared_type='int' name='allow_coincident' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNetworkDestroy'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaNetworkDrop'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='char*' name='network_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNetworkFromCache'>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='network_name' type='*'/>
<retval declared_type='GaiaNetworkAccessorPtr' type='^{gaia_network_accessor=}'/>
</function>
<function name='gaiaNetworkFromDBMS'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='network_name' type='*'/>
<retval declared_type='GaiaNetworkAccessorPtr' type='^{gaia_network_accessor=}'/>
</function>
<function name='gaiaNetworkGetLastException'>
<arg const='true' declared_type='char*' name='network_name' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaNewEdgeHeal'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge_id1' type='i'/>
<arg declared_type='int' name='edge_id2' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNewEdgesSplit'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge' type='i'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='int' name='skip_checks' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNewGeoLinkSplit'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<arg declared_type='PointPtr' name='pt' type='^{Point=ss}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNewLinkHeal'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<arg declared_type='int' name='anotherlink' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNewLogLinkSplit'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaNodeLines'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='input' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaNormalizeLonLat'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOffsetCurve'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='points' type='i'/>
<arg declared_type='int' name='left_right' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaOffsetCurve_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='points' type='i'/>
<arg declared_type='int' name='left_right' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaOpenDbfRead'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg const='true' declared_type='char*' name='charFrom' type='*'/>
<arg const='true' declared_type='char*' name='charTo' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOpenDbfWrite'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg const='true' declared_type='char*' name='charFrom' type='*'/>
<arg const='true' declared_type='char*' name='charTo' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOpenDbfWriteEx'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg const='true' declared_type='char*' name='charFrom' type='*'/>
<arg const='true' declared_type='char*' name='charTo' type='*'/>
<arg declared_type='int' name='colname_case' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOpenShpRead'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg const='true' declared_type='char*' name='charFrom' type='*'/>
<arg const='true' declared_type='char*' name='charTo' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOpenShpWrite'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg declared_type='int' name='shape' type='i'/>
<arg declared_type='gaiaDbfListPtr' name='list' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<arg const='true' declared_type='char*' name='charFrom' type='*'/>
<arg const='true' declared_type='char*' name='charTo' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOpenShpWriteEx'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg declared_type='int' name='shape' type='i'/>
<arg declared_type='gaiaDbfListPtr' name='list' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<arg const='true' declared_type='char*' name='charFrom' type='*'/>
<arg const='true' declared_type='char*' name='charTo' type='*'/>
<arg declared_type='int' name='colname_case' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutBareKml'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutBufferInitialize'>
<arg declared_type='gaiaOutBufferPtr' name='buf' type='^{gaiaOutBufferStruct=*iii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutBufferReset'>
<arg declared_type='gaiaOutBufferPtr' name='buf' type='^{gaiaOutBufferStruct=*iii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutFullKml'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='desc' type='*'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutGeoJSON'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='int' name='options' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutGml'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='int' name='version' type='i'/>
<arg declared_type='int' name='precision' type='i'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutLinestringZ'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaLinestringPtr' name='linestring' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutLinestringZex'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaLinestringPtr' name='linestring' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutPointZ'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaPointPtr' name='point' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutPointZex'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaPointPtr' name='point' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutPolygonZ'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaPolygonPtr' name='polygon' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutPolygonZex'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaPolygonPtr' name='polygon' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutSvg'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='relative' type='i'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutWkt'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutWktEx'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaOutWktStrict'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='precision' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaParseDMS'>
<arg const='true' declared_type='char*' name='dms' type='*'/>
<arg declared_type='double*' name='longitude' type='^d'/>
<arg declared_type='double*' name='latitude' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaParseDxfFile'>
<arg declared_type='gaiaDxfParserPtr' name='parser' type='^{gaia_dxf_parser=*^{gaia_dxf_layer}^{gaia_dxf_layer}^{gaia_dxf_block}^{gaia_dxf_block}ii**iiiiiiiiiiiiiiiiiiiiiiii*{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_circle=dddd}{gaia_dxf_arc=dddddd}i^{gaia_dxf_point}^{gaia_dxf_point}**^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_hatch}i}'/>
<arg const='true' declared_type='char*' name='dxf_path' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaParseDxfFile_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaDxfParserPtr' name='parser' type='^{gaia_dxf_parser=*^{gaia_dxf_layer}^{gaia_dxf_layer}^{gaia_dxf_block}^{gaia_dxf_block}ii**iiiiiiiiiiiiiiiiiiiiiiii*{gaia_dxf_text=*dddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_text}}{gaia_dxf_insert=*dddddddiiiiiiiii^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_insert}}{gaia_dxf_block=i**^{gaia_dxf_text}^{gaia_dxf_text}^{gaia_dxf_point}^{gaia_dxf_point}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_polyline}^{gaia_dxf_hatch}^{gaia_dxf_hatch}iiii^{gaia_dxf_block}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_point=ddd^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_point}}{gaia_dxf_circle=dddd}{gaia_dxf_arc=dddddd}i^{gaia_dxf_point}^{gaia_dxf_point}**^{gaia_dxf_extra_attr}^{gaia_dxf_extra_attr}^{gaia_dxf_hatch}i}'/>
<arg const='true' declared_type='char*' name='dxf_path' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaParseEWKT'>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaParseFilterMbr'>
<arg declared_type='unsigned char*' name='result' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='double*' name='minx' type='^d'/>
<arg declared_type='double*' name='miny' type='^d'/>
<arg declared_type='double*' name='maxx' type='^d'/>
<arg declared_type='double*' name='maxy' type='^d'/>
<arg declared_type='int*' name='mode' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaParseGeoJSON'>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaParseGml'>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<arg declared_type='int*' name='sqlite_handle' type='^i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaParseGml_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<arg declared_type='int*' name='sqlite_handle' type='^i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaParseHexEWKB'>
<arg const='true' declared_type='unsigned char*' name='blob_hex' type='*'/>
<arg declared_type='int*' name='blob_size' type='^i'/>
<retval declared_type='unsigned char*' type='*'/>
</function>
<function name='gaiaParseKml'>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaParseWkt'>
<arg const='true' declared_type='unsigned char*' name='in_buffer' type='*'/>
<arg declared_type='short' name='type' type='s'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaPolygonEquals'>
<arg declared_type='gaiaPolygonPtr' name='polyg1' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='gaiaPolygonPtr' name='polyg2' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaPolygonize'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='force_multi' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaPolygonize_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='force_multi' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaPolynomialAsText'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaPolynomialIsValid'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaPolynomialToMatrix'>
<arg const='true' declared_type='unsigned char*' name='iblob' type='*'/>
<arg declared_type='int' name='iblob_sz' type='i'/>
<arg declared_type='unsigned char**' name='oblob' type='^*'/>
<arg declared_type='int*' name='oblob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaPolynomialTransformGeometry'>
<arg declared_type='int' name='geom' type='i'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaPrependPointMToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaPrependPointToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaPrependPointZMToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaPrependPointZToDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='p' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<retval declared_type='gaiaPointPtr' type='^{gaiaPointStruct=ddddi^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaProjectedPoint'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='double' name='x1' type='d'/>
<arg declared_type='double' name='y1' type='d'/>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double' name='distance' type='d'/>
<arg declared_type='double' name='azimuth' type='d'/>
<arg declared_type='double*' name='x2' type='^d'/>
<arg declared_type='double*' name='y2' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaQuotedSql'>
<arg const='true' declared_type='char*' name='value' type='*'/>
<arg declared_type='int' name='quote' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaRadsToDegs'>
<arg declared_type='double' name='rads' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaiaReadDbfEntity'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<arg declared_type='int' name='current_row' type='i'/>
<arg declared_type='int*' name='deleted' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReadDbfEntity_ex'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<arg declared_type='int' name='current_row' type='i'/>
<arg declared_type='int*' name='deleted' type='^i'/>
<arg declared_type='int' name='text_dates' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReadNetworkFromDBMS'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='char*' name='net_name' type='*'/>
<arg declared_type='char**' name='network_name' type='^*'/>
<arg declared_type='int*' name='spatial' type='^i'/>
<arg declared_type='int*' name='srid' type='^i'/>
<arg declared_type='int*' name='has_z' type='^i'/>
<arg declared_type='int*' name='allow_coincident' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReadShpEntity'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<arg declared_type='int' name='current_row' type='i'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReadShpEntity_ex'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<arg declared_type='int' name='current_row' type='i'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='int' name='text_dates' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReadTopologyFromDBMS'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<arg declared_type='char**' name='topology_name' type='^*'/>
<arg declared_type='int*' name='srid' type='^i'/>
<arg declared_type='double*' name='tolerance' type='^d'/>
<arg declared_type='int*' name='has_z' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReflectCoords'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='x_axis' type='i'/>
<arg declared_type='int' name='y_axis' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaRemEdgeModFace'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge_id' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRemEdgeNewFace'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge_id' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRemIsoEdge'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='edge' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRemIsoNetNode'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='node' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRemIsoNode'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='node' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRemoveLink'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='link' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRemoveRepeatedPoints'>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaResetDbfEntity'>
<arg declared_type='gaiaDbfListPtr' name='list' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaResetGeosMsg'>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaResetGeosMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaResetRtTopoMsg'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaResetSequence'>
<arg declared_type='gaiaSequencePtr' name='sequence' type='^{gaia_sequence=*i^{gaia_sequence}}'/>
<arg declared_type='int' name='value' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaReverseDynamicLine'>
<arg declared_type='gaiaDynamicLinePtr' name='org' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
<retval declared_type='gaiaDynamicLinePtr' type='^{gaiaDynamicLineStruct=ii^{gaiaPointStruct}^{gaiaPointStruct}}'/>
</function>
<function name='gaiaRingCentroid'>
<arg declared_type='gaiaRingPtr' name='ring' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='double*' name='rx' type='^d'/>
<arg declared_type='double*' name='ry' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaRingGetPoint'>
<arg declared_type='gaiaRingPtr' name='rng' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='int' name='v' type='i'/>
<arg declared_type='double*' name='x' type='^d'/>
<arg declared_type='double*' name='y' type='^d'/>
<arg declared_type='double*' name='z' type='^d'/>
<arg declared_type='double*' name='m' type='^d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRingSetPoint'>
<arg declared_type='gaiaRingPtr' name='rng' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='int' name='v' type='i'/>
<arg declared_type='double' name='x' type='d'/>
<arg declared_type='double' name='y' type='d'/>
<arg declared_type='double' name='z' type='d'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaRotateCoords'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='angle' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSanitize'>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaScaleCoords'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='scale_x' type='d'/>
<arg declared_type='double' name='scale_y' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSegmentize'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='dist' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSequenceNext'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaSequencePtr' name='sequence' type='^{gaia_sequence=*i^{gaia_sequence}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaSetDoubleValue'>
<arg declared_type='gaiaDbfFieldPtr' name='field' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<arg declared_type='double' name='value' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetGeosAuxErrorMsg'>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetGeosAuxErrorMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetGeosErrorMsg'>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetGeosErrorMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetGeosWarningMsg'>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetGeosWarningMsg_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetIntValue'>
<arg declared_type='gaiaDbfFieldPtr' name='field' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<arg declared_type='int' name='value' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetNullValue'>
<arg declared_type='gaiaDbfFieldPtr' name='field' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetRtTopoErrorMsg'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetRtTopoWarningMsg'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='msg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSetStrValue'>
<arg declared_type='gaiaDbfFieldPtr' name='field' type='^{gaiaDbfFieldStruct=*CiCC^{gaiaValueStruct}^{gaiaDbfFieldStruct}}'/>
<arg declared_type='char*' name='str' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSharedPaths'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSharedPaths_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaShiftCoords'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='shift_x' type='d'/>
<arg declared_type='double' name='shift_y' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaShiftCoords3D'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='shift_x' type='d'/>
<arg declared_type='double' name='shift_y' type='d'/>
<arg declared_type='double' name='shift_z' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaShiftLongitude'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaShortestLine'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaShortestLine_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaShpAnalyze'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaSingleQuotedSql'>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaSingleSidedBuffer'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='points' type='i'/>
<arg declared_type='int' name='left_right' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSingleSidedBuffer_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='radius' type='d'/>
<arg declared_type='int' name='points' type='i'/>
<arg declared_type='int' name='left_right' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSnap'>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSnapToGrid'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='origin_z' type='d'/>
<arg declared_type='double' name='origin_m' type='d'/>
<arg declared_type='double' name='size_x' type='d'/>
<arg declared_type='double' name='size_y' type='d'/>
<arg declared_type='double' name='size_z' type='d'/>
<arg declared_type='double' name='size_m' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSnap_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom1' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom2' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSpatialite2GPKG'>
<arg declared_type='sqlite3*' name='handle_in' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='splite_in_path' type='*'/>
<arg declared_type='sqlite3*' name='handle_out' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='gpkg_out_path' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaSplit'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='input' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='blade' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSplitLeft'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='input' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='blade' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSplitRight'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='input' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='gaiaGeomCollPtr' name='blade' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSquareGrid'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='size' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaSquareGrid_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='size' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaStatisticsInvalidate'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geometry' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaSwapCoords'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaTextReaderAlloc'>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg declared_type='char' name='field_separator' type='c'/>
<arg declared_type='char' name='text_separator' type='c'/>
<arg declared_type='char' name='decimal_separator' type='c'/>
<arg declared_type='int' name='first_line_titles' type='i'/>
<arg const='true' declared_type='char*' name='encoding' type='*'/>
<retval declared_type='gaiaTextReaderPtr' type='^{vrttxt_reader=[65535{vrttxt_column_header=*i}]^{__sFILE}^vcccii^{vrttxt_row_block}^{vrttxt_row_block}^^{vrttxt_row}iiiii**[65535i][65535i]ii}'/>
</function>
<function name='gaiaTextReaderDestroy'>
<arg declared_type='gaiaTextReaderPtr' name='reader' type='^{vrttxt_reader=[65535{vrttxt_column_header=*i}]^{__sFILE}^vcccii^{vrttxt_row_block}^{vrttxt_row_block}^^{vrttxt_row}iiiii**[65535i][65535i]ii}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaTextReaderFetchField'>
<arg declared_type='gaiaTextReaderPtr' name='reader' type='^{vrttxt_reader=[65535{vrttxt_column_header=*i}]^{__sFILE}^vcccii^{vrttxt_row_block}^{vrttxt_row_block}^^{vrttxt_row}iiiii**[65535i][65535i]ii}'/>
<arg declared_type='int' name='field_num' type='i'/>
<arg declared_type='int*' name='type' type='^i'/>
<arg const='true' declared_type='char**' name='value' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTextReaderGetRow'>
<arg declared_type='gaiaTextReaderPtr' name='reader' type='^{vrttxt_reader=[65535{vrttxt_column_header=*i}]^{__sFILE}^vcccii^{vrttxt_row_block}^{vrttxt_row_block}^^{vrttxt_row}iiiii**[65535i][65535i]ii}'/>
<arg declared_type='int' name='row_num' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTextReaderParse'>
<arg declared_type='gaiaTextReaderPtr' name='reader' type='^{vrttxt_reader=[65535{vrttxt_column_header=*i}]^{__sFILE}^vcccii^{vrttxt_row_block}^{vrttxt_row_block}^^{vrttxt_row}iiiii**[65535i][65535i]ii}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaToCompressedBlobWkb'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToEWKB'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToEWKT'>
<arg declared_type='gaiaOutBufferPtr' name='out_buf' type='^{gaiaOutBufferStruct=*iii}'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToFgf'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<arg declared_type='int' name='coord_dims' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToGPB'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToGeos'>
<arg const='true' declared_type='gaiaGeomCollPtr' name='gaia' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='gaiaToGeosSelective'>
<arg const='true' declared_type='gaiaGeomCollPtr' name='gaia' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='gaiaToGeosSelective_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='gaiaGeomCollPtr' name='gaia' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='gaiaToGeos_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='gaiaGeomCollPtr' name='gaia' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='gaiaToHexWkb'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaToSpatiaLiteBlobWkb'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToSpatiaLiteBlobWkbEx'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<arg declared_type='int' name='gpkg_mode' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToSpatiaLiteBlobWkbEx2'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<arg declared_type='int' name='gpkg_mode' type='i'/>
<arg declared_type='int' name='tiny_point' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaToTWKB'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char' name='precision_xy' type='C'/>
<arg declared_type='unsigned char' name='precision_z' type='C'/>
<arg declared_type='unsigned char' name='precision_m' type='C'/>
<arg declared_type='int' name='with_size' type='i'/>
<arg declared_type='int' name='with_bbox' type='i'/>
<arg declared_type='unsigned char**' name='twkb' type='^*'/>
<arg declared_type='int*' name='size_twkb' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaToWkb'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaTopoGeoSnapLinestringToSeed'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='ln' type='i'/>
<arg declared_type='double' name='distance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeoSnapPointToSeed'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='distance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeoUpdateSeeds'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_AddLineString'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int**' name='edge_ids' type='^^i'/>
<arg declared_type='int*' name='ids_count' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_AddLineStringNoFace'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int**' name='edge_ids' type='^^i'/>
<arg declared_type='int*' name='ids_count' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_AddPoint'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pt' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_AddPolygon'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='pg' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int**' name='face_ids' type='^^i'/>
<arg declared_type='int*' name='ids_count' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_CreateTopoLayer'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='topolayer_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_DisambiguateSegmentEdges'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_ExportTopoLayer'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='topolayer_name' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<arg declared_type='int' name='with_spatial_index' type='i'/>
<arg declared_type='int' name='create_only' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_FromGeoTable'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='column' type='*'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_FromGeoTableExtended'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='sql_in' type='*'/>
<arg const='true' declared_type='char*' name='sql_out' type='*'/>
<arg const='true' declared_type='char*' name='sql_in2' type='*'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_FromGeoTableNoFace'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='column' type='*'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_FromGeoTableNoFaceExtended'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='sql_in' type='*'/>
<arg const='true' declared_type='char*' name='sql_out' type='*'/>
<arg const='true' declared_type='char*' name='sql_in2' type='*'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_InitTopoLayer'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='topolayer_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_InsertFeatureFromTopoLayer'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='topolayer_name' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<arg declared_type='int' name='fid' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_LineEdgesList'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_ModEdgeHeal'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_ModEdgeSplit'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_NewEdgeHeal'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_NewEdgesSplit'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_PolyFacesList'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_Polygonize'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_RemoveDanglingEdges'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_RemoveDanglingNodes'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_RemoveSmallFaces'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='double' name='min_circularity' type='d'/>
<arg declared_type='double' name='min_area' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_RemoveTopoLayer'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='topolayer_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_SnappedGeoTable'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='column' type='*'/>
<arg const='true' declared_type='char*' name='outtable' type='*'/>
<arg declared_type='double' name='tolerance_snap' type='d'/>
<arg declared_type='double' name='tolerance_removal' type='d'/>
<arg declared_type='int' name='iterate' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_SubdivideLines'>
<arg declared_type='int' name='geom' type='i'/>
<arg declared_type='int' name='line_max_points' type='i'/>
<arg declared_type='double' name='max_length' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_ToGeoTable'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<arg declared_type='int' name='with_spatial_index' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoGeo_ToGeoTableGeneralize'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='with_spatial_index' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoNetUpdateSeeds'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoNet_DisambiguateSegmentLinks'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoNet_FromGeoTable'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='column' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoNet_LineLinksList'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoNet_ToGeoTable'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<arg declared_type='int' name='with_spatial_index' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoNet_ToGeoTableGeneralize'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<arg const='true' declared_type='char*' name='db_prefix' type='*'/>
<arg const='true' declared_type='char*' name='ref_table' type='*'/>
<arg const='true' declared_type='char*' name='ref_column' type='*'/>
<arg const='true' declared_type='char*' name='out_table' type='*'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='with_spatial_index' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopoSnap'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<arg declared_type='int' name='geom' type='i'/>
<arg declared_type='double' name='tolerance_snap' type='d'/>
<arg declared_type='double' name='tolerance_removal' type='d'/>
<arg declared_type='int' name='iterate' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopologyCreate'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='has_z' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopologyDestroy'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaTopologyDrop'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaTopologyFromCache'>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<retval declared_type='GaiaTopologyAccessorPtr' type='^{gaia_topology_accessor=}'/>
</function>
<function name='gaiaTopologyFromDBMS'>
<arg declared_type='int*' name='handle' type='^i'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<retval declared_type='GaiaTopologyAccessorPtr' type='^{gaia_topology_accessor=}'/>
</function>
<function name='gaiaTopologyGetLastException'>
<arg const='true' declared_type='char*' name='topo_name' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaiaTrajectoryInterpolatePoint'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='m' type='d'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaTransform'>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='char*' name='proj_from' type='*'/>
<arg declared_type='char*' name='proj_to' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaTransformXY'>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='char*' name='proj_from' type='*'/>
<arg declared_type='char*' name='proj_to' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaTransformXY_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='char*' name='proj_from' type='*'/>
<arg declared_type='char*' name='proj_to' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaTransform_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='org' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='char*' name='proj_from' type='*'/>
<arg declared_type='char*' name='proj_to' type='*'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaTriangularGrid'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='size' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaTriangularGrid_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='origin_x' type='d'/>
<arg declared_type='double' name='origin_y' type='d'/>
<arg declared_type='double' name='size' type='d'/>
<arg declared_type='int' name='mode' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaUnaryUnion'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaUnaryUnion_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaUnionCascaded'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaUnionCascaded_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaUpdateMD5Checksum'>
<arg declared_type='void*' name='md5' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_len' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaUpdateMetaCatalogStatistics'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='column' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaUpdateMetaCatalogStatisticsFromMaster'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='master_table' type='*'/>
<arg const='true' declared_type='char*' name='table_name' type='*'/>
<arg const='true' declared_type='char*' name='column_name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaUpdateSqlLog'>
<arg declared_type='int*' name='sqlite' type='^i'/>
<arg declared_type='int' name='sqllog_pk' type='i'/>
<arg declared_type='int' name='success' type='i'/>
<arg const='true' declared_type='char*' name='errMsg' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaValidLogicalNet'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaValidSpatialNet'>
<arg declared_type='GaiaNetworkAccessorPtr' name='ptr' type='^{gaia_network_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaValidateTopoGeo'>
<arg declared_type='GaiaTopologyAccessorPtr' name='ptr' type='^{gaia_topology_accessor=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaVoronojDiagram'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='extra_frame_size' type='d'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='only_edges' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaVoronojDiagram_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double' name='extra_frame_size' type='d'/>
<arg declared_type='double' name='tolerance' type='d'/>
<arg declared_type='int' name='only_edges' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaWriteDbfEntity'>
<arg declared_type='gaiaDbfPtr' name='dbf' type='^{gaiaDbfStruct=ii*^{__sFILE}^{gaiaDbfListStruct}*iiii^v*}'/>
<arg declared_type='gaiaDbfListPtr' name='entity' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaWriteShpEntity'>
<arg declared_type='gaiaShapefilePtr' name='shp' type='^{gaiaShapefileStruct=iii*^{__sFILE}^{__sFILE}^{__sFILE}i^{gaiaDbfListStruct}*iiii*iiidddd^v*ii}'/>
<arg declared_type='gaiaDbfListPtr' name='entity' type='^{gaiaDbfListStruct=i^{gaiaGeomCollStruct}^{gaiaDbfFieldStruct}^{gaiaDbfFieldStruct}}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlBlobAddFileId'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg const='true' declared_type='char*' name='identifier' type='*'/>
<arg const='true' declared_type='char*' name='ns_id' type='*'/>
<arg const='true' declared_type='char*' name='uri_id' type='*'/>
<arg const='true' declared_type='char*' name='ns_charstr' type='*'/>
<arg const='true' declared_type='char*' name='uri_charstr' type='*'/>
<arg declared_type='unsigned char**' name='new_blob' type='^*'/>
<arg declared_type='int*' name='new_size' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlBlobAddParentId'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg const='true' declared_type='char*' name='identifier' type='*'/>
<arg const='true' declared_type='char*' name='ns_id' type='*'/>
<arg const='true' declared_type='char*' name='uri_id' type='*'/>
<arg const='true' declared_type='char*' name='ns_charstr' type='*'/>
<arg const='true' declared_type='char*' name='uri_charstr' type='*'/>
<arg declared_type='unsigned char**' name='new_blob' type='^*'/>
<arg declared_type='int*' name='new_size' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlBlobCompression'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='in_size' type='i'/>
<arg declared_type='int' name='compressed' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='out_size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaXmlBlobGetAbstract'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetDocumentSize'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlBlobGetEncoding'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetFileId'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetGeometry'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='unsigned char**' name='blob_geom' type='^*'/>
<arg declared_type='int*' name='blob_size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaXmlBlobGetLastParseError'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetLastValidateError'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetLastXPathError'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetName'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetParentId'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetSchemaURI'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobGetTitle'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlBlobMLineFromGPX'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='int*' name='db_handle' type='^i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaiaXmlBlobSetFileId'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg const='true' declared_type='char*' name='identifier' type='*'/>
<arg declared_type='unsigned char**' name='new_blob' type='^*'/>
<arg declared_type='int*' name='new_size' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlBlobSetParentId'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg const='true' declared_type='char*' name='identifier' type='*'/>
<arg declared_type='unsigned char**' name='new_blob' type='^*'/>
<arg declared_type='int*' name='new_size' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlFromBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='int' name='indent' type='i'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='res_size' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaXmlGetInternalSchemaURI'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='xml' type='*'/>
<arg declared_type='int' name='xml_len' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlLoad'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='path_or_url' type='*'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<arg declared_type='char**' name='parsing_errors' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlStore'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg declared_type='int' name='indent' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaiaXmlTextFromBlob'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='size' type='i'/>
<arg declared_type='int' name='indent' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaiaXmlToBlob'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='xml' type='*'/>
<arg declared_type='int' name='xml_len' type='i'/>
<arg declared_type='int' name='compressed' type='i'/>
<arg const='true' declared_type='char*' name='schemaURI' type='*'/>
<arg declared_type='unsigned char**' name='result' type='^*'/>
<arg declared_type='int*' name='size' type='^i'/>
<arg declared_type='char**' name='parsing_errors' type='^*'/>
<arg declared_type='char**' name='schema_validation_errors' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaZRangeGeometry'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaZRangeLinestring'>
<arg declared_type='gaiaLinestringPtr' name='line' type='^{gaiaLinestringStruct=i^dddddi^{gaiaLinestringStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaZRangePolygon'>
<arg declared_type='gaiaPolygonPtr' name='polyg' type='^{gaiaPolygonStruct=^{gaiaRingStruct}i^{gaiaRingStruct}iddddi^{gaiaPolygonStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaiaZRangeRing'>
<arg declared_type='gaiaRingPtr' name='rng' type='^{gaiaRingStruct=i^diddddi^{gaiaRingStruct}^{gaiaPolygonStruct}}'/>
<arg declared_type='double*' name='min' type='^d'/>
<arg declared_type='double*' name='max' type='^d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaia_create_routing'>
<arg declared_type='sqlite3*' name='db_handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='routing_data_table' type='*'/>
<arg const='true' declared_type='char*' name='virtual_routing_table' type='*'/>
<arg const='true' declared_type='char*' name='input_table' type='*'/>
<arg const='true' declared_type='char*' name='from_column' type='*'/>
<arg const='true' declared_type='char*' name='to_column' type='*'/>
<arg const='true' declared_type='char*' name='geom_column' type='*'/>
<arg const='true' declared_type='char*' name='cost_column' type='*'/>
<arg const='true' declared_type='char*' name='name_column' type='*'/>
<arg declared_type='int' name='a_star_enabled' type='i'/>
<arg declared_type='int' name='bidirectional' type='i'/>
<arg const='true' declared_type='char*' name='oneway_from' type='*'/>
<arg const='true' declared_type='char*' name='oneway_to' type='*'/>
<arg declared_type='int' name='overwrite' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_create_routing_get_last_error'>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='gaia_create_routing_nodes'>
<arg declared_type='sqlite3*' name='db_handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='prefix' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geom_column' type='*'/>
<arg const='true' declared_type='char*' name='from_column' type='*'/>
<arg const='true' declared_type='char*' name='to_column' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_libxml2_version'>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaia_matrix_as_text'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaia_matrix_create'>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double' name='c' type='d'/>
<arg declared_type='double' name='d' type='d'/>
<arg declared_type='double' name='e' type='d'/>
<arg declared_type='double' name='f' type='d'/>
<arg declared_type='double' name='g' type='d'/>
<arg declared_type='double' name='h' type='d'/>
<arg declared_type='double' name='i' type='d'/>
<arg declared_type='double' name='xoff' type='d'/>
<arg declared_type='double' name='yoff' type='d'/>
<arg declared_type='double' name='zoff' type='d'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_matrix_create_multiply'>
<arg const='true' declared_type='unsigned char*' name='iblob' type='*'/>
<arg declared_type='int' name='iblob_sz' type='i'/>
<arg declared_type='double' name='a' type='d'/>
<arg declared_type='double' name='b' type='d'/>
<arg declared_type='double' name='c' type='d'/>
<arg declared_type='double' name='d' type='d'/>
<arg declared_type='double' name='e' type='d'/>
<arg declared_type='double' name='f' type='d'/>
<arg declared_type='double' name='g' type='d'/>
<arg declared_type='double' name='h' type='d'/>
<arg declared_type='double' name='i' type='d'/>
<arg declared_type='double' name='xoff' type='d'/>
<arg declared_type='double' name='yoff' type='d'/>
<arg declared_type='double' name='zoff' type='d'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_matrix_determinant'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='gaia_matrix_invert'>
<arg const='true' declared_type='unsigned char*' name='iblob' type='*'/>
<arg declared_type='int' name='iblob_sz' type='i'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_matrix_is_valid'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_matrix_multiply'>
<arg const='true' declared_type='unsigned char*' name='iblob1' type='*'/>
<arg declared_type='int' name='iblob1_sz' type='i'/>
<arg const='true' declared_type='unsigned char*' name='iblob2' type='*'/>
<arg declared_type='int' name='iblob2_sz' type='i'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_matrix_transform_geometry'>
<arg declared_type='gaiaGeomCollPtr' name='geom' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='gaiaGeomCollPtr' type='^{gaiaGeomCollStruct=icc*LL^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}' type64='^{gaiaGeomCollStruct=icc*QQ^{gaiaPointStruct}^{gaiaPointStruct}^{gaiaLinestringStruct}^{gaiaLinestringStruct}^{gaiaPolygonStruct}^{gaiaPolygonStruct}ddddii^{gaiaGeomCollStruct}}'/>
</function>
<function name='gaia_sql_proc_add_variable'>
<arg declared_type='SqlProc_VarListPtr' name='list' type='^{gaiaSqlProc_VarListStruct=i*^{gaiaSqlProc_VariableStruct}^{gaiaSqlProc_VariableStruct}}'/>
<arg const='true' declared_type='char*' name='str' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_all_variables'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaia_sql_proc_cooked_sql'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<arg declared_type='SqlProc_VarListPtr' name='variables' type='^{gaiaSqlProc_VarListStruct=i*^{gaiaSqlProc_VariableStruct}^{gaiaSqlProc_VariableStruct}}'/>
<arg declared_type='char**' name='sql' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_create_variables'>
<retval declared_type='SqlProc_VarListPtr' type='^{gaiaSqlProc_VarListStruct=i*^{gaiaSqlProc_VariableStruct}^{gaiaSqlProc_VariableStruct}}'/>
</function>
<function name='gaia_sql_proc_destroy_variables'>
<arg declared_type='SqlProc_VarListPtr' name='list' type='^{gaiaSqlProc_VarListStruct=i*^{gaiaSqlProc_VariableStruct}^{gaiaSqlProc_VariableStruct}}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='gaia_sql_proc_execute'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='sql' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_get_last_error'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaia_sql_proc_import'>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='filepath' type='*'/>
<arg const='true' declared_type='char*' name='charset' type='*'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_is_valid'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_is_valid_var_value'>
<arg const='true' declared_type='char*' name='str' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_logfile'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg const='true' declared_type='char*' name='filepath' type='*'/>
<arg declared_type='int' name='append' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_parse'>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='sql' type='*'/>
<arg const='true' declared_type='char*' name='charset' type='*'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_raw_sql'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaia_sql_proc_var_count'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_sql_proc_variable'>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<arg declared_type='int' name='index' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='gaia_stored_proc_create_tables'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_proc_delete'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_proc_fetch'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg declared_type='unsigned char**' name='blob' type='^*'/>
<arg declared_type='int*' name='blob_sz' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_proc_store'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='title' type='*'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_proc_update_sql'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='unsigned char*' name='blob' type='*'/>
<arg declared_type='int' name='blob_sz' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_proc_update_title'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='title' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_var_delete'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_var_fetch'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg declared_type='int' name='var_with_val' type='i'/>
<arg declared_type='char**' name='value' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_var_store'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='title' type='*'/>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_var_update_title'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='title' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='gaia_stored_var_update_value'>
<arg declared_type='sqlite3*' name='handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='cache' type='^v'/>
<arg const='true' declared_type='char*' name='name' type='*'/>
<arg const='true' declared_type='char*' name='value' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='insert_epsg_srid'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='is_kml_constant'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='column' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='is_tiny_point_enabled'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_XL'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='path' type='*'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg declared_type='unsigned int' name='worksheetIndex' type='I'/>
<arg declared_type='int' name='first_titles' type='i'/>
<arg declared_type='unsigned int*' name='rows' type='^I'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_dbf'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_dbf_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='pk_column' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_dbf_ex2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='pk_column' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int' name='text_date' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_dbf_ex3'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='dbf_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='pk_column' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int' name='text_date' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='int' name='colname_case' type='i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_shapefile'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='shp_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='char*' name='column' type='*'/>
<arg declared_type='int' name='coerce2d' type='i'/>
<arg declared_type='int' name='compressed' type='i'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int' name='spatial_index' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_shapefile_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='shp_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='char*' name='geo_column' type='*'/>
<arg declared_type='char*' name='gtype' type='*'/>
<arg declared_type='char*' name='pk_column' type='*'/>
<arg declared_type='int' name='coerce2d' type='i'/>
<arg declared_type='int' name='compressed' type='i'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int' name='spatial_index' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_shapefile_ex2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='shp_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='char*' name='geo_column' type='*'/>
<arg declared_type='char*' name='gtype' type='*'/>
<arg declared_type='char*' name='pk_column' type='*'/>
<arg declared_type='int' name='coerce2d' type='i'/>
<arg declared_type='int' name='compressed' type='i'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int' name='spatial_index' type='i'/>
<arg declared_type='int' name='text_date' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='load_shapefile_ex3'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='shp_path' type='*'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='char*' name='charset' type='*'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='char*' name='geo_column' type='*'/>
<arg declared_type='char*' name='gtype' type='*'/>
<arg declared_type='char*' name='pk_column' type='*'/>
<arg declared_type='int' name='coerce2d' type='i'/>
<arg declared_type='int' name='compressed' type='i'/>
<arg declared_type='int' name='verbose' type='i'/>
<arg declared_type='int' name='spatial_index' type='i'/>
<arg declared_type='int' name='text_date' type='i'/>
<arg declared_type='int*' name='rows' type='^i'/>
<arg declared_type='int' name='colname_case' type='i'/>
<arg declared_type='char*' name='err_msg' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='math_llabs'>
<arg declared_type='sqlite3_int64' name='value' type='q'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='math_round'>
<arg declared_type='double' name='value' type='d'/>
<retval declared_type='double' type='d'/>
</function>
<function name='remove_duplicated_rows'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='remove_duplicated_rows_ex'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='int*' name='removed' type='^i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='remove_duplicated_rows_ex2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='char*' name='table' type='*'/>
<arg declared_type='int*' name='removed' type='^i'/>
<arg declared_type='int' name='transaction' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sanitize_all_geometry_columns'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='tmp_prefix' type='*'/>
<arg const='true' declared_type='char*' name='output_dir' type='*'/>
<arg declared_type='int*' name='not_repaired' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sanitize_all_geometry_columns_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='tmp_prefix' type='*'/>
<arg const='true' declared_type='char*' name='output_dir' type='*'/>
<arg declared_type='int*' name='not_repaired' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sanitize_geometry_column'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geom' type='*'/>
<arg const='true' declared_type='char*' name='tmp_table' type='*'/>
<arg const='true' declared_type='char*' name='report_path' type='*'/>
<arg declared_type='int*' name='n_invalids' type='^i'/>
<arg declared_type='int*' name='n_repaired' type='^i'/>
<arg declared_type='int*' name='n_discarded' type='^i'/>
<arg declared_type='int*' name='n_failures' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sanitize_geometry_column_r'>
<arg const='true' declared_type='void*' name='p_cache' type='^v'/>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='geom' type='*'/>
<arg const='true' declared_type='char*' name='tmp_table' type='*'/>
<arg const='true' declared_type='char*' name='report_path' type='*'/>
<arg declared_type='int*' name='n_invalids' type='^i'/>
<arg declared_type='int*' name='n_repaired' type='^i'/>
<arg declared_type='int*' name='n_discarded' type='^i'/>
<arg declared_type='int*' name='n_failures' type='^i'/>
<arg declared_type='char**' name='err_msg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='spatial_ref_sys_init'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='verbose' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='spatial_ref_sys_init2'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='mode' type='i'/>
<arg declared_type='int' name='verbose' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='spatialite_alloc_connection'>
<retval declared_type='void*' type='^v'/>
</function>
<function name='spatialite_cleanup'>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_cleanup_ex'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_finalize_topologies'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_init'>
<arg declared_type='int' name='verbose' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_init_ex'>
<arg declared_type='sqlite3*' name='db_handle' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<arg declared_type='int' name='verbose' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_init_geos'>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_initialize'>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_set_silent_mode'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_set_verbode_mode'>
<arg const='true' declared_type='void*' name='ptr' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_shutdown'>
<retval declared_type='void' type='v'/>
</function>
<function name='spatialite_target_cpu'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='spatialite_version'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_aggregate_context'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='nBytes' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_aggregate_count'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_auto_extension'>
<arg declared_type='void (*)(void)' function_pointer='true' name='xEntryPoint' type='^?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_backup_finish'>
<arg declared_type='sqlite3_backup*' name='p' type='^{sqlite3_backup=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_backup_init'>
<arg declared_type='sqlite3*' name='pDest' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDestName' type='*'/>
<arg declared_type='sqlite3*' name='pSource' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSourceName' type='*'/>
<retval declared_type='sqlite3_backup*' type='^{sqlite3_backup=}'/>
</function>
<function name='sqlite3_backup_pagecount'>
<arg declared_type='sqlite3_backup*' name='p' type='^{sqlite3_backup=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_backup_remaining'>
<arg declared_type='sqlite3_backup*' name='p' type='^{sqlite3_backup=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_backup_step'>
<arg declared_type='sqlite3_backup*' name='p' type='^{sqlite3_backup=}'/>
<arg declared_type='int' name='nPage' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_blob'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' name='n' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_blob64'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_double'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='double' type='d'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_int'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_int64'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_null'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_parameter_count'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_parameter_index'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg const='true' declared_type='char*' name='zName' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_parameter_name'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_bind_pointer'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_text'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_text16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_text64'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='unsigned char' name='encoding' type='C'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_value'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_zeroblob'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int' name='n' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_bind_zeroblob64'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_blob_bytes'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_blob_close'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_blob_open'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDb' type='*'/>
<arg const='true' declared_type='char*' name='zTable' type='*'/>
<arg const='true' declared_type='char*' name='zColumn' type='*'/>
<arg declared_type='sqlite3_int64' name='iRow' type='q'/>
<arg declared_type='int' name='flags' type='i'/>
<arg declared_type='sqlite3_blob**' name='ppBlob' type='^^{sqlite3_blob}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_blob_read'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<arg declared_type='void*' name='Z' type='^v'/>
<arg declared_type='int' name='N' type='i'/>
<arg declared_type='int' name='iOffset' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_blob_reopen'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_blob_write'>
<arg declared_type='sqlite3_blob*' type='^{sqlite3_blob=}'/>
<arg const='true' declared_type='void*' name='z' type='^v'/>
<arg declared_type='int' name='n' type='i'/>
<arg declared_type='int' name='iOffset' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_busy_handler'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_busy_timeout'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' name='ms' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_cancel_auto_extension'>
<arg declared_type='void (*)(void)' function_pointer='true' name='xEntryPoint' type='^?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_changes'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_clear_bindings'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_close'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_close_v2'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_collation_needed'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *, sqlite3 *, int, char *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_collation_needed16'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *, sqlite3 *, int, void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_column_blob'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_bytes'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_column_bytes16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_column_count'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_column_database_name'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_column_database_name16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_decltype'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_column_decltype16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_double'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='double' type='d'/>
</function>
<function name='sqlite3_column_int'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_column_int64'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_column_name'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='N' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_column_name16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='N' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_origin_name'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_column_origin_name16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_table_name'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_column_table_name16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_text'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</function>
<function name='sqlite3_column_text16'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_column_type'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_column_value'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='iCol' type='i'/>
<retval declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
</function>
<function name='sqlite3_commit_hook'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_compileoption_get'>
<arg declared_type='int' name='N' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_compileoption_used'>
<arg const='true' declared_type='char*' name='zOptName' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_complete'>
<arg const='true' declared_type='char*' name='sql' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_complete16'>
<arg const='true' declared_type='void*' name='sql' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_config' variadic='true'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_context_db_handle'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</function>
<function name='sqlite3_create_collation'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zName' type='*'/>
<arg declared_type='int' name='eTextRep' type='i'/>
<arg declared_type='void*' name='pArg' type='^v'/>
<arg declared_type='int (*)(void *, int, void *, int, void *)' function_pointer='true' name='xCompare' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_collation16'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='zName' type='^v'/>
<arg declared_type='int' name='eTextRep' type='i'/>
<arg declared_type='void*' name='pArg' type='^v'/>
<arg declared_type='int (*)(void *, int, void *, int, void *)' function_pointer='true' name='xCompare' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_collation_v2'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zName' type='*'/>
<arg declared_type='int' name='eTextRep' type='i'/>
<arg declared_type='void*' name='pArg' type='^v'/>
<arg declared_type='int (*)(void *, int, void *, int, void *)' function_pointer='true' name='xCompare' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void (*)(void *)' function_pointer='true' name='xDestroy' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_function'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zFunctionName' type='*'/>
<arg declared_type='int' name='nArg' type='i'/>
<arg declared_type='int' name='eTextRep' type='i'/>
<arg declared_type='void*' name='pApp' type='^v'/>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' name='xFunc' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' name='xStep' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *)' function_pointer='true' name='xFinal' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_function16'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='zFunctionName' type='^v'/>
<arg declared_type='int' name='nArg' type='i'/>
<arg declared_type='int' name='eTextRep' type='i'/>
<arg declared_type='void*' name='pApp' type='^v'/>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' name='xFunc' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' name='xStep' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *)' function_pointer='true' name='xFinal' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_function_v2'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zFunctionName' type='*'/>
<arg declared_type='int' name='nArg' type='i'/>
<arg declared_type='int' name='eTextRep' type='i'/>
<arg declared_type='void*' name='pApp' type='^v'/>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' name='xFunc' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *, int, sqlite3_value **)' function_pointer='true' name='xStep' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_value**' type='^^{sqlite3_value}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(sqlite3_context *)' function_pointer='true' name='xFinal' type='^?'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (*)(void *)' function_pointer='true' name='xDestroy' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_module'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zName' type='*'/>
<arg const='true' declared_type='sqlite3_module*' name='p' type='^{sqlite3_module=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='void*' name='pClientData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_create_module_v2'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zName' type='*'/>
<arg const='true' declared_type='sqlite3_module*' name='p' type='^{sqlite3_module=i^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='void*' name='pClientData' type='^v'/>
<arg declared_type='void (*)(void *)' function_pointer='true' name='xDestroy' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_data_count'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_db_cacheflush'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_db_config' variadic='true'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' name='op' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_db_filename'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDbName' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_db_handle'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</function>
<function name='sqlite3_db_mutex'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
</function>
<function name='sqlite3_db_readonly'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDbName' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_db_release_memory'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_db_status'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' name='op' type='i'/>
<arg declared_type='int*' name='pCur' type='^i'/>
<arg declared_type='int*' name='pHiwtr' type='^i'/>
<arg declared_type='int' name='resetFlg' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_declare_vtab'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSQL' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_deserialize'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSchema' type='*'/>
<arg declared_type='unsigned char*' name='pData' type='*'/>
<arg declared_type='sqlite3_int64' name='szDb' type='q'/>
<arg declared_type='sqlite3_int64' name='szBuf' type='q'/>
<arg declared_type='unsigned int' name='mFlags' type='I'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_enable_load_extension'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg declared_type='int' name='onoff' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_enable_shared_cache'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_errcode'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_errmsg'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_errmsg16'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_errstr'>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_exec'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='sql' type='*'/>
<arg declared_type='int (*)(void *, int, char **, char **)' function_pointer='true' name='callback' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='char**' type='^*'/>
<arg declared_type='char**' type='^*'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<arg declared_type='char**' name='errmsg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_expanded_sql'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='sqlite3_expired'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_extended_errcode'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_extended_result_codes'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' name='onoff' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_file_control'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDbName' type='*'/>
<arg declared_type='int' name='op' type='i'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_finalize'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_free'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_free_table'>
<arg declared_type='char**' name='result' type='^*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_get_autocommit'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_get_auxdata'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='N' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_get_table'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSql' type='*'/>
<arg declared_type='char***' name='pazResult' type='^^*'/>
<arg declared_type='int*' name='pnRow' type='^i'/>
<arg declared_type='int*' name='pnColumn' type='^i'/>
<arg declared_type='char**' name='pzErrmsg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_global_recover'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_initialize'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_interrupt'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_last_insert_rowid'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_libversion'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_libversion_number'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_limit'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' name='id' type='i'/>
<arg declared_type='int' name='newVal' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_load_extension'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zFile' type='*'/>
<arg const='true' declared_type='char*' name='zProc' type='*'/>
<arg declared_type='char**' name='pzErrMsg' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_log' variadic='true'>
<arg declared_type='int' name='iErrCode' type='i'/>
<arg const='true' declared_type='char*' name='zFormat' type='*'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_malloc'>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_malloc64'>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_memory_alarm'>
<arg declared_type='void (*)(void *, sqlite3_int64, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_int64' type='q'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_memory_highwater'>
<arg declared_type='int' name='resetFlag' type='i'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_memory_used'>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_mprintf' variadic='true'>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='sqlite3_msize'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='sqlite3_uint64' type='Q'/>
</function>
<function name='sqlite3_mutex_alloc'>
<arg declared_type='int' type='i'/>
<retval declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
</function>
<function name='sqlite3_mutex_enter'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_mutex_free'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_mutex_held'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_mutex_leave'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_mutex_notheld'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_mutex_try'>
<arg declared_type='sqlite3_mutex*' type='^{sqlite3_mutex=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_next_stmt'>
<arg declared_type='sqlite3*' name='pDb' type='^{sqlite3=}'/>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
</function>
<function name='sqlite3_open'>
<arg const='true' declared_type='char*' name='filename' type='*'/>
<arg declared_type='sqlite3**' name='ppDb' type='^^{sqlite3}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_open16'>
<arg const='true' declared_type='void*' name='filename' type='^v'/>
<arg declared_type='sqlite3**' name='ppDb' type='^^{sqlite3}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_open_v2'>
<arg const='true' declared_type='char*' name='filename' type='*'/>
<arg declared_type='sqlite3**' name='ppDb' type='^^{sqlite3}'/>
<arg declared_type='int' name='flags' type='i'/>
<arg const='true' declared_type='char*' name='zVfs' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_os_end'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_os_init'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_overload_function'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zFuncName' type='*'/>
<arg declared_type='int' name='nArg' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_prepare'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSql' type='*'/>
<arg declared_type='int' name='nByte' type='i'/>
<arg declared_type='sqlite3_stmt**' name='ppStmt' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='char**' name='pzTail' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_prepare16'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='zSql' type='^v'/>
<arg declared_type='int' name='nByte' type='i'/>
<arg declared_type='sqlite3_stmt**' name='ppStmt' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='void**' name='pzTail' type='^^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_prepare16_v2'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='zSql' type='^v'/>
<arg declared_type='int' name='nByte' type='i'/>
<arg declared_type='sqlite3_stmt**' name='ppStmt' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='void**' name='pzTail' type='^^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_prepare16_v3'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='void*' name='zSql' type='^v'/>
<arg declared_type='int' name='nByte' type='i'/>
<arg declared_type='unsigned int' name='prepFlags' type='I'/>
<arg declared_type='sqlite3_stmt**' name='ppStmt' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='void**' name='pzTail' type='^^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_prepare_v2'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSql' type='*'/>
<arg declared_type='int' name='nByte' type='i'/>
<arg declared_type='sqlite3_stmt**' name='ppStmt' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='char**' name='pzTail' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_prepare_v3'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSql' type='*'/>
<arg declared_type='int' name='nByte' type='i'/>
<arg declared_type='unsigned int' name='prepFlags' type='I'/>
<arg declared_type='sqlite3_stmt**' name='ppStmt' type='^^{sqlite3_stmt}'/>
<arg const='true' declared_type='char**' name='pzTail' type='^*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_profile'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *, char *, sqlite3_uint64)' function_pointer='true' name='xProfile' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_progress_handler'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='int (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_randomness'>
<arg declared_type='int' name='N' type='i'/>
<arg declared_type='void*' name='P' type='^v'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_realloc'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_realloc64'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_release_memory'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_reset'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_reset_auto_extension'>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_blob'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_blob64'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_double'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_error'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_error16'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_error_code'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_error_nomem'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_error_toobig'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_int'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_int64'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_null'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_pointer'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_subtype'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='unsigned int' type='I'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_text'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_text16'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_text16be'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_text16le'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_text64'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_uint64' type='Q'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='unsigned char' name='encoding' type='C'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_value'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_zeroblob'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='n' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_result_zeroblob64'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='sqlite3_uint64' name='n' type='Q'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_rollback_hook'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_rtree_geometry_callback'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zGeom' type='*'/>
<arg declared_type='int (*)(sqlite3_rtree_geometry *, int, sqlite3_rtree_dbl *, int *)' function_pointer='true' name='xGeom' type='^?'>
<arg declared_type='sqlite3_rtree_geometry*' type='^{sqlite3_rtree_geometry=^vi^d^v^?}'/>
<arg declared_type='int' type='i'/>
<arg declared_type='sqlite3_rtree_dbl*' type='^d'/>
<arg declared_type='int*' type='^i'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' name='pContext' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_rtree_query_callback'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zQueryFunc' type='*'/>
<arg declared_type='int (*)(sqlite3_rtree_query_info *)' function_pointer='true' name='xQueryFunc' type='^?'>
<arg declared_type='sqlite3_rtree_query_info*' type='^{sqlite3_rtree_query_info=^vi^d^v^?^d^Iiiiqdiid^^{sqlite3_value}}'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' name='pContext' type='^v'/>
<arg declared_type='void (*)(void *)' function_pointer='true' name='xDestructor' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_serialize'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSchema' type='*'/>
<arg declared_type='sqlite3_int64*' name='piSize' type='^q'/>
<arg declared_type='unsigned int' name='mFlags' type='I'/>
<retval declared_type='unsigned char*' type='*'/>
</function>
<function name='sqlite3_set_authorizer'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *, int, char *, char *, char *, char *)' function_pointer='true' name='xAuth' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' name='pUserData' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_set_auxdata'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<arg declared_type='int' name='N' type='i'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void (*)(void *)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_set_last_insert_rowid'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_shutdown'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_sleep'>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_snapshot_cmp'>
<arg declared_type='sqlite3_snapshot*' name='p1' type='^{sqlite3_snapshot=[48C]}'/>
<arg declared_type='sqlite3_snapshot*' name='p2' type='^{sqlite3_snapshot=[48C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_snapshot_free'>
<arg declared_type='sqlite3_snapshot*' type='^{sqlite3_snapshot=[48C]}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_snapshot_get'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSchema' type='*'/>
<arg declared_type='sqlite3_snapshot**' name='ppSnapshot' type='^^{sqlite3_snapshot}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_snapshot_open'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zSchema' type='*'/>
<arg declared_type='sqlite3_snapshot*' name='pSnapshot' type='^{sqlite3_snapshot=[48C]}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_snapshot_recover'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDb' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_snprintf' variadic='true'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='sqlite3_soft_heap_limit'>
<arg declared_type='int' name='N' type='i'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_soft_heap_limit64'>
<arg declared_type='sqlite3_int64' name='N' type='q'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_sourceid'>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_sql'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_status'>
<arg declared_type='int' name='op' type='i'/>
<arg declared_type='int*' name='pCurrent' type='^i'/>
<arg declared_type='int*' name='pHighwater' type='^i'/>
<arg declared_type='int' name='resetFlag' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_status64'>
<arg declared_type='int' name='op' type='i'/>
<arg declared_type='sqlite3_int64*' name='pCurrent' type='^q'/>
<arg declared_type='sqlite3_int64*' name='pHighwater' type='^q'/>
<arg declared_type='int' name='resetFlag' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_step'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_stmt_busy'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_stmt_readonly'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_stmt_scanstatus'>
<arg declared_type='sqlite3_stmt*' name='pStmt' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='idx' type='i'/>
<arg declared_type='int' name='iScanStatusOp' type='i'/>
<arg declared_type='void*' name='pOut' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_stmt_scanstatus_reset'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_stmt_status'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='int' name='op' type='i'/>
<arg declared_type='int' name='resetFlg' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_strglob'>
<arg const='true' declared_type='char*' name='zGlob' type='*'/>
<arg const='true' declared_type='char*' name='zStr' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_stricmp'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_strlike'>
<arg const='true' declared_type='char*' name='zGlob' type='*'/>
<arg const='true' declared_type='char*' name='zStr' type='*'/>
<arg declared_type='unsigned int' name='cEsc' type='I'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_strnicmp'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_system_errno'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_table_column_metadata'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDbName' type='*'/>
<arg const='true' declared_type='char*' name='zTableName' type='*'/>
<arg const='true' declared_type='char*' name='zColumnName' type='*'/>
<arg const='true' declared_type='char**' name='pzDataType' type='^*'/>
<arg const='true' declared_type='char**' name='pzCollSeq' type='^*'/>
<arg declared_type='int*' name='pNotNull' type='^i'/>
<arg declared_type='int*' name='pPrimaryKey' type='^i'/>
<arg declared_type='int*' name='pAutoinc' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_test_control' variadic='true'>
<arg declared_type='int' name='op' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_thread_cleanup'>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_threadsafe'>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_total_changes'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_trace'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *, char *)' function_pointer='true' name='xTrace' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_trace_v2'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='unsigned int' name='uMask' type='I'/>
<arg declared_type='int (*)(unsigned int, void *, void *, void *)' function_pointer='true' name='xCallback' type='^?'>
<arg declared_type='unsigned int' type='I'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<arg declared_type='void*' type='^v'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' name='pCtx' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_transfer_bindings'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_unlock_notify'>
<arg declared_type='sqlite3*' name='pBlocked' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void **, int)' function_pointer='true' name='xNotify' type='^?'>
<arg declared_type='void**' type='^^v'/>
<arg declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' name='pNotifyArg' type='^v'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_update_hook'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='void (*)(void *, int, char *, char *, sqlite3_int64)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='int' type='i'/>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_uri_boolean'>
<arg const='true' declared_type='char*' name='zFile' type='*'/>
<arg const='true' declared_type='char*' name='zParam' type='*'/>
<arg declared_type='int' name='bDefault' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_uri_int64'>
<arg const='true' declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='sqlite3_int64' type='q'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_uri_parameter'>
<arg const='true' declared_type='char*' name='zFilename' type='*'/>
<arg const='true' declared_type='char*' name='zParam' type='*'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_user_data'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_value_blob'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_value_bytes'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_value_bytes16'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_value_double'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='double' type='d'/>
</function>
<function name='sqlite3_value_dup'>
<arg const='true' declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
</function>
<function name='sqlite3_value_free'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='void' type='v'/>
</function>
<function name='sqlite3_value_int'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_value_int64'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='sqlite3_int64' type='q'/>
</function>
<function name='sqlite3_value_nochange'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_value_numeric_type'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_value_pointer'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<arg const='true' declared_type='char*' type='*'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_value_subtype'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='unsigned int' type='I'/>
</function>
<function name='sqlite3_value_text'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='unsigned char*' type='*'/>
</function>
<function name='sqlite3_value_text16'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_value_text16be'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_value_text16le'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval const='true' declared_type='void*' type='^v'/>
</function>
<function name='sqlite3_value_type'>
<arg declared_type='sqlite3_value*' type='^{sqlite3_value=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_vfs_find'>
<arg const='true' declared_type='char*' name='zVfsName' type='*'/>
<retval declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
</function>
<function name='sqlite3_vfs_register'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<arg declared_type='int' name='makeDflt' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_vfs_unregister'>
<arg declared_type='sqlite3_vfs*' type='^{sqlite3_vfs=iii^{sqlite3_vfs}*^v^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_vmprintf'>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='sqlite3_vsnprintf'>
<arg declared_type='int' type='i'/>
<arg declared_type='char*' type='*'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='va_list' declared_type64='struct __va_list_tag*' type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='sqlite3_vtab_collation'>
<arg declared_type='sqlite3_index_info*' type='^{sqlite3_index_info=i^{sqlite3_index_constraint}i^{sqlite3_index_orderby}^{sqlite3_index_constraint_usage}i*iidqiQ}'/>
<arg declared_type='int' type='i'/>
<retval const='true' declared_type='char*' type='*'/>
</function>
<function name='sqlite3_vtab_config' variadic='true'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int' name='op' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_vtab_nochange'>
<arg declared_type='sqlite3_context*' type='^{sqlite3_context=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_vtab_on_conflict'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_wal_autocheckpoint'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg declared_type='int' name='N' type='i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_wal_checkpoint'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDb' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_wal_checkpoint_v2'>
<arg declared_type='sqlite3*' name='db' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='zDb' type='*'/>
<arg declared_type='int' name='eMode' type='i'/>
<arg declared_type='int*' name='pnLog' type='^i'/>
<arg declared_type='int*' name='pnCkpt' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='sqlite3_wal_hook'>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg declared_type='int (*)(void *, sqlite3 *, char *, int)' function_pointer='true' type='^?'>
<arg declared_type='void*' type='^v'/>
<arg declared_type='sqlite3*' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' type='*'/>
<arg declared_type='int' type='i'/>
<retval declared_type='int' type='i'/>
</arg>
<arg declared_type='void*' type='^v'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='srid_get_axis'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='char' name='axis' type='c'/>
<arg declared_type='char' name='mode' type='c'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='srid_get_datum'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='srid_get_prime_meridian'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='srid_get_projection'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='srid_get_spheroid'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='srid_get_unit'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<retval declared_type='char*' type='*'/>
</function>
<function name='srid_has_flipped_axes'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='int*' name='flipped' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='srid_is_geographic'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='int*' name='geographic' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='srid_is_projected'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg declared_type='int' name='srid' type='i'/>
<arg declared_type='int*' name='projected' type='^i'/>
<retval declared_type='int' type='i'/>
</function>
<function name='update_layer_statistics'>
<arg declared_type='sqlite3*' name='sqlite' type='^{sqlite3=}'/>
<arg const='true' declared_type='char*' name='table' type='*'/>
<arg const='true' declared_type='char*' name='column' type='*'/>
<retval declared_type='int' type='i'/>
</function>
<function_alias name='gaia_fseek' original='fseeko'/>
</signatures>
